//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestC__LoadT__72C60C4A", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestCase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestCase), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestD__LoadT__02FC7413", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestDataCollectorLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestDataCollectorLog), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestF__LoadT__03F0984C", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestFileAttachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestFileAttachment), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestF__LoadT__04E4BC85", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestFileAttachmentChunk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestFileAttachmentChunk), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestM__LoadT__73BA3083", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestMessage), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestP__LoadT__75A278F5", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestPerformanceCounter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestPerformanceCounter), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestP__LoadT__76969D2E", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestPerformanceCounterCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestPerformanceCounterCategory), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestP__LoadT__778AC167", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestPerformanceCounterInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestPerformanceCounterInstance), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestP__LoadT__787EE5A0", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestPerformanceCounterSample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestPerformanceCounterSample), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestR__LoadT__797309D9", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestRunAgent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestRunAgent), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestR__LoadT__7A672E12", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestRunInterval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestRunInterval), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestS__LoadT__00200768", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestSystemUnderTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestSystemUnderTest), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestS__LoadT__01142BA1", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestSystemUnderTestTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestSystemUnderTestTag), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestS__LoadT__7B5B524B", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestScenario", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestScenario), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestS__LoadT__7F2BE32F", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestSqlTrace", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestSqlTrace), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestT__LoadT__02084FDA", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestTestLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestTestLog), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__LoadTestT__LoadT__74AE54BC", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "LoadTestThresholdMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.LoadTestThresholdMessage), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__WebLoadTe__LoadT__7C4F7684", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "WebLoadTestErrorDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.WebLoadTestErrorDetail), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__WebLoadTe__LoadT__7D439ABD", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "WebLoadTestRequestMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.WebLoadTestRequestMap), true)]
[assembly: EdmRelationshipAttribute("LoadTest2010Model", "FK__WebLoadTe__LoadT__7E37BEF6", "LoadTestRun", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExcelLoadTestReport.Models.LoadTestRun), "WebLoadTestTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExcelLoadTestReport.Models.WebLoadTestTransaction), true)]

#endregion

namespace ExcelLoadTestReport.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LoadTest2010Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LoadTest2010Entities object using the connection string found in the 'LoadTest2010Entities' section of the application configuration file.
        /// </summary>
        public LoadTest2010Entities() : base("name=Remote Data Base", "LoadTest2010Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LoadTest2010Entities object.
        /// </summary>
        public LoadTest2010Entities(string connectionString) : base(connectionString, "LoadTest2010Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LoadTest2010Entities object.
        /// </summary>
        public LoadTest2010Entities(EntityConnection connection) : base(connection, "LoadTest2010Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestBrowser> LoadTestBrowsers
        {
            get
            {
                if ((_LoadTestBrowsers == null))
                {
                    _LoadTestBrowsers = base.CreateObjectSet<LoadTestBrowser>("LoadTestBrowsers");
                }
                return _LoadTestBrowsers;
            }
        }
        private ObjectSet<LoadTestBrowser> _LoadTestBrowsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestCase> LoadTestCases
        {
            get
            {
                if ((_LoadTestCases == null))
                {
                    _LoadTestCases = base.CreateObjectSet<LoadTestCase>("LoadTestCases");
                }
                return _LoadTestCases;
            }
        }
        private ObjectSet<LoadTestCase> _LoadTestCases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestDataCollectorLog> LoadTestDataCollectorLogs
        {
            get
            {
                if ((_LoadTestDataCollectorLogs == null))
                {
                    _LoadTestDataCollectorLogs = base.CreateObjectSet<LoadTestDataCollectorLog>("LoadTestDataCollectorLogs");
                }
                return _LoadTestDataCollectorLogs;
            }
        }
        private ObjectSet<LoadTestDataCollectorLog> _LoadTestDataCollectorLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestDetailMessage> LoadTestDetailMessages
        {
            get
            {
                if ((_LoadTestDetailMessages == null))
                {
                    _LoadTestDetailMessages = base.CreateObjectSet<LoadTestDetailMessage>("LoadTestDetailMessages");
                }
                return _LoadTestDetailMessages;
            }
        }
        private ObjectSet<LoadTestDetailMessage> _LoadTestDetailMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestFileAttachment> LoadTestFileAttachments
        {
            get
            {
                if ((_LoadTestFileAttachments == null))
                {
                    _LoadTestFileAttachments = base.CreateObjectSet<LoadTestFileAttachment>("LoadTestFileAttachments");
                }
                return _LoadTestFileAttachments;
            }
        }
        private ObjectSet<LoadTestFileAttachment> _LoadTestFileAttachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestFileAttachmentChunk> LoadTestFileAttachmentChunks
        {
            get
            {
                if ((_LoadTestFileAttachmentChunks == null))
                {
                    _LoadTestFileAttachmentChunks = base.CreateObjectSet<LoadTestFileAttachmentChunk>("LoadTestFileAttachmentChunks");
                }
                return _LoadTestFileAttachmentChunks;
            }
        }
        private ObjectSet<LoadTestFileAttachmentChunk> _LoadTestFileAttachmentChunks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestMessage> LoadTestMessages
        {
            get
            {
                if ((_LoadTestMessages == null))
                {
                    _LoadTestMessages = base.CreateObjectSet<LoadTestMessage>("LoadTestMessages");
                }
                return _LoadTestMessages;
            }
        }
        private ObjectSet<LoadTestMessage> _LoadTestMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestMessageType> LoadTestMessageTypes
        {
            get
            {
                if ((_LoadTestMessageTypes == null))
                {
                    _LoadTestMessageTypes = base.CreateObjectSet<LoadTestMessageType>("LoadTestMessageTypes");
                }
                return _LoadTestMessageTypes;
            }
        }
        private ObjectSet<LoadTestMessageType> _LoadTestMessageTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestNetwork> LoadTestNetworks
        {
            get
            {
                if ((_LoadTestNetworks == null))
                {
                    _LoadTestNetworks = base.CreateObjectSet<LoadTestNetwork>("LoadTestNetworks");
                }
                return _LoadTestNetworks;
            }
        }
        private ObjectSet<LoadTestNetwork> _LoadTestNetworks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestPageDetail> LoadTestPageDetails
        {
            get
            {
                if ((_LoadTestPageDetails == null))
                {
                    _LoadTestPageDetails = base.CreateObjectSet<LoadTestPageDetail>("LoadTestPageDetails");
                }
                return _LoadTestPageDetails;
            }
        }
        private ObjectSet<LoadTestPageDetail> _LoadTestPageDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestPageSummaryByNetwork> LoadTestPageSummaryByNetworks
        {
            get
            {
                if ((_LoadTestPageSummaryByNetworks == null))
                {
                    _LoadTestPageSummaryByNetworks = base.CreateObjectSet<LoadTestPageSummaryByNetwork>("LoadTestPageSummaryByNetworks");
                }
                return _LoadTestPageSummaryByNetworks;
            }
        }
        private ObjectSet<LoadTestPageSummaryByNetwork> _LoadTestPageSummaryByNetworks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestPageSummaryData> LoadTestPageSummaryDatas
        {
            get
            {
                if ((_LoadTestPageSummaryDatas == null))
                {
                    _LoadTestPageSummaryDatas = base.CreateObjectSet<LoadTestPageSummaryData>("LoadTestPageSummaryDatas");
                }
                return _LoadTestPageSummaryDatas;
            }
        }
        private ObjectSet<LoadTestPageSummaryData> _LoadTestPageSummaryDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestPerformanceCounter> LoadTestPerformanceCounters
        {
            get
            {
                if ((_LoadTestPerformanceCounters == null))
                {
                    _LoadTestPerformanceCounters = base.CreateObjectSet<LoadTestPerformanceCounter>("LoadTestPerformanceCounters");
                }
                return _LoadTestPerformanceCounters;
            }
        }
        private ObjectSet<LoadTestPerformanceCounter> _LoadTestPerformanceCounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestPerformanceCounterCategory> LoadTestPerformanceCounterCategories
        {
            get
            {
                if ((_LoadTestPerformanceCounterCategories == null))
                {
                    _LoadTestPerformanceCounterCategories = base.CreateObjectSet<LoadTestPerformanceCounterCategory>("LoadTestPerformanceCounterCategories");
                }
                return _LoadTestPerformanceCounterCategories;
            }
        }
        private ObjectSet<LoadTestPerformanceCounterCategory> _LoadTestPerformanceCounterCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestPerformanceCounterInstance> LoadTestPerformanceCounterInstances
        {
            get
            {
                if ((_LoadTestPerformanceCounterInstances == null))
                {
                    _LoadTestPerformanceCounterInstances = base.CreateObjectSet<LoadTestPerformanceCounterInstance>("LoadTestPerformanceCounterInstances");
                }
                return _LoadTestPerformanceCounterInstances;
            }
        }
        private ObjectSet<LoadTestPerformanceCounterInstance> _LoadTestPerformanceCounterInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestPerformanceCounterSample> LoadTestPerformanceCounterSamples
        {
            get
            {
                if ((_LoadTestPerformanceCounterSamples == null))
                {
                    _LoadTestPerformanceCounterSamples = base.CreateObjectSet<LoadTestPerformanceCounterSample>("LoadTestPerformanceCounterSamples");
                }
                return _LoadTestPerformanceCounterSamples;
            }
        }
        private ObjectSet<LoadTestPerformanceCounterSample> _LoadTestPerformanceCounterSamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestReport> LoadTestReports
        {
            get
            {
                if ((_LoadTestReports == null))
                {
                    _LoadTestReports = base.CreateObjectSet<LoadTestReport>("LoadTestReports");
                }
                return _LoadTestReports;
            }
        }
        private ObjectSet<LoadTestReport> _LoadTestReports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestReportPage> LoadTestReportPages
        {
            get
            {
                if ((_LoadTestReportPages == null))
                {
                    _LoadTestReportPages = base.CreateObjectSet<LoadTestReportPage>("LoadTestReportPages");
                }
                return _LoadTestReportPages;
            }
        }
        private ObjectSet<LoadTestReportPage> _LoadTestReportPages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestReportRun> LoadTestReportRuns
        {
            get
            {
                if ((_LoadTestReportRuns == null))
                {
                    _LoadTestReportRuns = base.CreateObjectSet<LoadTestReportRun>("LoadTestReportRuns");
                }
                return _LoadTestReportRuns;
            }
        }
        private ObjectSet<LoadTestReportRun> _LoadTestReportRuns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestRun> LoadTestRuns
        {
            get
            {
                if ((_LoadTestRuns == null))
                {
                    _LoadTestRuns = base.CreateObjectSet<LoadTestRun>("LoadTestRuns");
                }
                return _LoadTestRuns;
            }
        }
        private ObjectSet<LoadTestRun> _LoadTestRuns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestRunAgent> LoadTestRunAgents
        {
            get
            {
                if ((_LoadTestRunAgents == null))
                {
                    _LoadTestRunAgents = base.CreateObjectSet<LoadTestRunAgent>("LoadTestRunAgents");
                }
                return _LoadTestRunAgents;
            }
        }
        private ObjectSet<LoadTestRunAgent> _LoadTestRunAgents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestRunInterval> LoadTestRunIntervals
        {
            get
            {
                if ((_LoadTestRunIntervals == null))
                {
                    _LoadTestRunIntervals = base.CreateObjectSet<LoadTestRunInterval>("LoadTestRunIntervals");
                }
                return _LoadTestRunIntervals;
            }
        }
        private ObjectSet<LoadTestRunInterval> _LoadTestRunIntervals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestScenario> LoadTestScenarios
        {
            get
            {
                if ((_LoadTestScenarios == null))
                {
                    _LoadTestScenarios = base.CreateObjectSet<LoadTestScenario>("LoadTestScenarios");
                }
                return _LoadTestScenarios;
            }
        }
        private ObjectSet<LoadTestScenario> _LoadTestScenarios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestSchemaRevision> LoadTestSchemaRevisions
        {
            get
            {
                if ((_LoadTestSchemaRevisions == null))
                {
                    _LoadTestSchemaRevisions = base.CreateObjectSet<LoadTestSchemaRevision>("LoadTestSchemaRevisions");
                }
                return _LoadTestSchemaRevisions;
            }
        }
        private ObjectSet<LoadTestSchemaRevision> _LoadTestSchemaRevisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestSqlTrace> LoadTestSqlTraces
        {
            get
            {
                if ((_LoadTestSqlTraces == null))
                {
                    _LoadTestSqlTraces = base.CreateObjectSet<LoadTestSqlTrace>("LoadTestSqlTraces");
                }
                return _LoadTestSqlTraces;
            }
        }
        private ObjectSet<LoadTestSqlTrace> _LoadTestSqlTraces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestSystemUnderTest> LoadTestSystemUnderTests
        {
            get
            {
                if ((_LoadTestSystemUnderTests == null))
                {
                    _LoadTestSystemUnderTests = base.CreateObjectSet<LoadTestSystemUnderTest>("LoadTestSystemUnderTests");
                }
                return _LoadTestSystemUnderTests;
            }
        }
        private ObjectSet<LoadTestSystemUnderTest> _LoadTestSystemUnderTests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestSystemUnderTestTag> LoadTestSystemUnderTestTags
        {
            get
            {
                if ((_LoadTestSystemUnderTestTags == null))
                {
                    _LoadTestSystemUnderTestTags = base.CreateObjectSet<LoadTestSystemUnderTestTag>("LoadTestSystemUnderTestTags");
                }
                return _LoadTestSystemUnderTestTags;
            }
        }
        private ObjectSet<LoadTestSystemUnderTestTag> _LoadTestSystemUnderTestTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestTestDetail> LoadTestTestDetails
        {
            get
            {
                if ((_LoadTestTestDetails == null))
                {
                    _LoadTestTestDetails = base.CreateObjectSet<LoadTestTestDetail>("LoadTestTestDetails");
                }
                return _LoadTestTestDetails;
            }
        }
        private ObjectSet<LoadTestTestDetail> _LoadTestTestDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestTestLog> LoadTestTestLogs
        {
            get
            {
                if ((_LoadTestTestLogs == null))
                {
                    _LoadTestTestLogs = base.CreateObjectSet<LoadTestTestLog>("LoadTestTestLogs");
                }
                return _LoadTestTestLogs;
            }
        }
        private ObjectSet<LoadTestTestLog> _LoadTestTestLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestTestSummaryData> LoadTestTestSummaryDatas
        {
            get
            {
                if ((_LoadTestTestSummaryDatas == null))
                {
                    _LoadTestTestSummaryDatas = base.CreateObjectSet<LoadTestTestSummaryData>("LoadTestTestSummaryDatas");
                }
                return _LoadTestTestSummaryDatas;
            }
        }
        private ObjectSet<LoadTestTestSummaryData> _LoadTestTestSummaryDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestThresholdMessage> LoadTestThresholdMessages
        {
            get
            {
                if ((_LoadTestThresholdMessages == null))
                {
                    _LoadTestThresholdMessages = base.CreateObjectSet<LoadTestThresholdMessage>("LoadTestThresholdMessages");
                }
                return _LoadTestThresholdMessages;
            }
        }
        private ObjectSet<LoadTestThresholdMessage> _LoadTestThresholdMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestTransactionDetail> LoadTestTransactionDetails
        {
            get
            {
                if ((_LoadTestTransactionDetails == null))
                {
                    _LoadTestTransactionDetails = base.CreateObjectSet<LoadTestTransactionDetail>("LoadTestTransactionDetails");
                }
                return _LoadTestTransactionDetails;
            }
        }
        private ObjectSet<LoadTestTransactionDetail> _LoadTestTransactionDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestTransactionSummaryData> LoadTestTransactionSummaryDatas
        {
            get
            {
                if ((_LoadTestTransactionSummaryDatas == null))
                {
                    _LoadTestTransactionSummaryDatas = base.CreateObjectSet<LoadTestTransactionSummaryData>("LoadTestTransactionSummaryDatas");
                }
                return _LoadTestTransactionSummaryDatas;
            }
        }
        private ObjectSet<LoadTestTransactionSummaryData> _LoadTestTransactionSummaryDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PassportUserIDStatu> PassportUserIDStatus
        {
            get
            {
                if ((_PassportUserIDStatus == null))
                {
                    _PassportUserIDStatus = base.CreateObjectSet<PassportUserIDStatu>("PassportUserIDStatus");
                }
                return _PassportUserIDStatus;
            }
        }
        private ObjectSet<PassportUserIDStatu> _PassportUserIDStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebLoadTestErrorDetail> WebLoadTestErrorDetails
        {
            get
            {
                if ((_WebLoadTestErrorDetails == null))
                {
                    _WebLoadTestErrorDetails = base.CreateObjectSet<WebLoadTestErrorDetail>("WebLoadTestErrorDetails");
                }
                return _WebLoadTestErrorDetails;
            }
        }
        private ObjectSet<WebLoadTestErrorDetail> _WebLoadTestErrorDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebLoadTestRequestMap> WebLoadTestRequestMaps
        {
            get
            {
                if ((_WebLoadTestRequestMaps == null))
                {
                    _WebLoadTestRequestMaps = base.CreateObjectSet<WebLoadTestRequestMap>("WebLoadTestRequestMaps");
                }
                return _WebLoadTestRequestMaps;
            }
        }
        private ObjectSet<WebLoadTestRequestMap> _WebLoadTestRequestMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebLoadTestTransaction> WebLoadTestTransactions
        {
            get
            {
                if ((_WebLoadTestTransactions == null))
                {
                    _WebLoadTestTransactions = base.CreateObjectSet<WebLoadTestTransaction>("WebLoadTestTransactions");
                }
                return _WebLoadTestTransactions;
            }
        }
        private ObjectSet<WebLoadTestTransaction> _WebLoadTestTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestComputedCounterSample> LoadTestComputedCounterSamples
        {
            get
            {
                if ((_LoadTestComputedCounterSamples == null))
                {
                    _LoadTestComputedCounterSamples = base.CreateObjectSet<LoadTestComputedCounterSample>("LoadTestComputedCounterSamples");
                }
                return _LoadTestComputedCounterSamples;
            }
        }
        private ObjectSet<LoadTestComputedCounterSample> _LoadTestComputedCounterSamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestComputedCounterSummary> LoadTestComputedCounterSummaries
        {
            get
            {
                if ((_LoadTestComputedCounterSummaries == null))
                {
                    _LoadTestComputedCounterSummaries = base.CreateObjectSet<LoadTestComputedCounterSummary>("LoadTestComputedCounterSummaries");
                }
                return _LoadTestComputedCounterSummaries;
            }
        }
        private ObjectSet<LoadTestComputedCounterSummary> _LoadTestComputedCounterSummaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestMessageSummary> LoadTestMessageSummaries
        {
            get
            {
                if ((_LoadTestMessageSummaries == null))
                {
                    _LoadTestMessageSummaries = base.CreateObjectSet<LoadTestMessageSummary>("LoadTestMessageSummaries");
                }
                return _LoadTestMessageSummaries;
            }
        }
        private ObjectSet<LoadTestMessageSummary> _LoadTestMessageSummaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestMessageView> LoadTestMessageViews
        {
            get
            {
                if ((_LoadTestMessageViews == null))
                {
                    _LoadTestMessageViews = base.CreateObjectSet<LoadTestMessageView>("LoadTestMessageViews");
                }
                return _LoadTestMessageViews;
            }
        }
        private ObjectSet<LoadTestMessageView> _LoadTestMessageViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestMessageView2> LoadTestMessageView2
        {
            get
            {
                if ((_LoadTestMessageView2 == null))
                {
                    _LoadTestMessageView2 = base.CreateObjectSet<LoadTestMessageView2>("LoadTestMessageView2");
                }
                return _LoadTestMessageView2;
            }
        }
        private ObjectSet<LoadTestMessageView2> _LoadTestMessageView2;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestPageResult> LoadTestPageResults
        {
            get
            {
                if ((_LoadTestPageResults == null))
                {
                    _LoadTestPageResults = base.CreateObjectSet<LoadTestPageResult>("LoadTestPageResults");
                }
                return _LoadTestPageResults;
            }
        }
        private ObjectSet<LoadTestPageResult> _LoadTestPageResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestPageResultsByNetwork> LoadTestPageResultsByNetworks
        {
            get
            {
                if ((_LoadTestPageResultsByNetworks == null))
                {
                    _LoadTestPageResultsByNetworks = base.CreateObjectSet<LoadTestPageResultsByNetwork>("LoadTestPageResultsByNetworks");
                }
                return _LoadTestPageResultsByNetworks;
            }
        }
        private ObjectSet<LoadTestPageResultsByNetwork> _LoadTestPageResultsByNetworks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestPageResultsByNetwork2> LoadTestPageResultsByNetwork2
        {
            get
            {
                if ((_LoadTestPageResultsByNetwork2 == null))
                {
                    _LoadTestPageResultsByNetwork2 = base.CreateObjectSet<LoadTestPageResultsByNetwork2>("LoadTestPageResultsByNetwork2");
                }
                return _LoadTestPageResultsByNetwork2;
            }
        }
        private ObjectSet<LoadTestPageResultsByNetwork2> _LoadTestPageResultsByNetwork2;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestPageSample> LoadTestPageSamples
        {
            get
            {
                if ((_LoadTestPageSamples == null))
                {
                    _LoadTestPageSamples = base.CreateObjectSet<LoadTestPageSample>("LoadTestPageSamples");
                }
                return _LoadTestPageSamples;
            }
        }
        private ObjectSet<LoadTestPageSample> _LoadTestPageSamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestPageSummary> LoadTestPageSummaries
        {
            get
            {
                if ((_LoadTestPageSummaries == null))
                {
                    _LoadTestPageSummaries = base.CreateObjectSet<LoadTestPageSummary>("LoadTestPageSummaries");
                }
                return _LoadTestPageSummaries;
            }
        }
        private ObjectSet<LoadTestPageSummary> _LoadTestPageSummaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestRequestSummary> LoadTestRequestSummaries
        {
            get
            {
                if ((_LoadTestRequestSummaries == null))
                {
                    _LoadTestRequestSummaries = base.CreateObjectSet<LoadTestRequestSummary>("LoadTestRequestSummaries");
                }
                return _LoadTestRequestSummaries;
            }
        }
        private ObjectSet<LoadTestRequestSummary> _LoadTestRequestSummaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestScenarioSummary> LoadTestScenarioSummaries
        {
            get
            {
                if ((_LoadTestScenarioSummaries == null))
                {
                    _LoadTestScenarioSummaries = base.CreateObjectSet<LoadTestScenarioSummary>("LoadTestScenarioSummaries");
                }
                return _LoadTestScenarioSummaries;
            }
        }
        private ObjectSet<LoadTestScenarioSummary> _LoadTestScenarioSummaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestTestCaseSample> LoadTestTestCaseSamples
        {
            get
            {
                if ((_LoadTestTestCaseSamples == null))
                {
                    _LoadTestTestCaseSamples = base.CreateObjectSet<LoadTestTestCaseSample>("LoadTestTestCaseSamples");
                }
                return _LoadTestTestCaseSamples;
            }
        }
        private ObjectSet<LoadTestTestCaseSample> _LoadTestTestCaseSamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestTestCaseSummary> LoadTestTestCaseSummaries
        {
            get
            {
                if ((_LoadTestTestCaseSummaries == null))
                {
                    _LoadTestTestCaseSummaries = base.CreateObjectSet<LoadTestTestCaseSummary>("LoadTestTestCaseSummaries");
                }
                return _LoadTestTestCaseSummaries;
            }
        }
        private ObjectSet<LoadTestTestCaseSummary> _LoadTestTestCaseSummaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestTestResult> LoadTestTestResults
        {
            get
            {
                if ((_LoadTestTestResults == null))
                {
                    _LoadTestTestResults = base.CreateObjectSet<LoadTestTestResult>("LoadTestTestResults");
                }
                return _LoadTestTestResults;
            }
        }
        private ObjectSet<LoadTestTestResult> _LoadTestTestResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestTransactionResult> LoadTestTransactionResults
        {
            get
            {
                if ((_LoadTestTransactionResults == null))
                {
                    _LoadTestTransactionResults = base.CreateObjectSet<LoadTestTransactionResult>("LoadTestTransactionResults");
                }
                return _LoadTestTransactionResults;
            }
        }
        private ObjectSet<LoadTestTransactionResult> _LoadTestTransactionResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestTransactionResults2> LoadTestTransactionResults2
        {
            get
            {
                if ((_LoadTestTransactionResults2 == null))
                {
                    _LoadTestTransactionResults2 = base.CreateObjectSet<LoadTestTransactionResults2>("LoadTestTransactionResults2");
                }
                return _LoadTestTransactionResults2;
            }
        }
        private ObjectSet<LoadTestTransactionResults2> _LoadTestTransactionResults2;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestTransactionSample> LoadTestTransactionSamples
        {
            get
            {
                if ((_LoadTestTransactionSamples == null))
                {
                    _LoadTestTransactionSamples = base.CreateObjectSet<LoadTestTransactionSample>("LoadTestTransactionSamples");
                }
                return _LoadTestTransactionSamples;
            }
        }
        private ObjectSet<LoadTestTransactionSample> _LoadTestTransactionSamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestTransactionSummary> LoadTestTransactionSummaries
        {
            get
            {
                if ((_LoadTestTransactionSummaries == null))
                {
                    _LoadTestTransactionSummaries = base.CreateObjectSet<LoadTestTransactionSummary>("LoadTestTransactionSummaries");
                }
                return _LoadTestTransactionSummaries;
            }
        }
        private ObjectSet<LoadTestTransactionSummary> _LoadTestTransactionSummaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestWebPageAndUserLoadCounterSample> LoadTestWebPageAndUserLoadCounterSamples
        {
            get
            {
                if ((_LoadTestWebPageAndUserLoadCounterSamples == null))
                {
                    _LoadTestWebPageAndUserLoadCounterSamples = base.CreateObjectSet<LoadTestWebPageAndUserLoadCounterSample>("LoadTestWebPageAndUserLoadCounterSamples");
                }
                return _LoadTestWebPageAndUserLoadCounterSamples;
            }
        }
        private ObjectSet<LoadTestWebPageAndUserLoadCounterSample> _LoadTestWebPageAndUserLoadCounterSamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestWebRequestCounterSample> LoadTestWebRequestCounterSamples
        {
            get
            {
                if ((_LoadTestWebRequestCounterSamples == null))
                {
                    _LoadTestWebRequestCounterSamples = base.CreateObjectSet<LoadTestWebRequestCounterSample>("LoadTestWebRequestCounterSamples");
                }
                return _LoadTestWebRequestCounterSamples;
            }
        }
        private ObjectSet<LoadTestWebRequestCounterSample> _LoadTestWebRequestCounterSamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoadTestWebRequestCounterSummary> LoadTestWebRequestCounterSummaries
        {
            get
            {
                if ((_LoadTestWebRequestCounterSummaries == null))
                {
                    _LoadTestWebRequestCounterSummaries = base.CreateObjectSet<LoadTestWebRequestCounterSummary>("LoadTestWebRequestCounterSummaries");
                }
                return _LoadTestWebRequestCounterSummaries;
            }
        }
        private ObjectSet<LoadTestWebRequestCounterSummary> _LoadTestWebRequestCounterSummaries;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestBrowsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestBrowsers(LoadTestBrowser loadTestBrowser)
        {
            base.AddObject("LoadTestBrowsers", loadTestBrowser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestCases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestCases(LoadTestCase loadTestCase)
        {
            base.AddObject("LoadTestCases", loadTestCase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestDataCollectorLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestDataCollectorLogs(LoadTestDataCollectorLog loadTestDataCollectorLog)
        {
            base.AddObject("LoadTestDataCollectorLogs", loadTestDataCollectorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestDetailMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestDetailMessages(LoadTestDetailMessage loadTestDetailMessage)
        {
            base.AddObject("LoadTestDetailMessages", loadTestDetailMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestFileAttachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestFileAttachments(LoadTestFileAttachment loadTestFileAttachment)
        {
            base.AddObject("LoadTestFileAttachments", loadTestFileAttachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestFileAttachmentChunks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestFileAttachmentChunks(LoadTestFileAttachmentChunk loadTestFileAttachmentChunk)
        {
            base.AddObject("LoadTestFileAttachmentChunks", loadTestFileAttachmentChunk);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestMessages(LoadTestMessage loadTestMessage)
        {
            base.AddObject("LoadTestMessages", loadTestMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestMessageTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestMessageTypes(LoadTestMessageType loadTestMessageType)
        {
            base.AddObject("LoadTestMessageTypes", loadTestMessageType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestNetworks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestNetworks(LoadTestNetwork loadTestNetwork)
        {
            base.AddObject("LoadTestNetworks", loadTestNetwork);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestPageDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestPageDetails(LoadTestPageDetail loadTestPageDetail)
        {
            base.AddObject("LoadTestPageDetails", loadTestPageDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestPageSummaryByNetworks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestPageSummaryByNetworks(LoadTestPageSummaryByNetwork loadTestPageSummaryByNetwork)
        {
            base.AddObject("LoadTestPageSummaryByNetworks", loadTestPageSummaryByNetwork);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestPageSummaryDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestPageSummaryDatas(LoadTestPageSummaryData loadTestPageSummaryData)
        {
            base.AddObject("LoadTestPageSummaryDatas", loadTestPageSummaryData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestPerformanceCounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestPerformanceCounters(LoadTestPerformanceCounter loadTestPerformanceCounter)
        {
            base.AddObject("LoadTestPerformanceCounters", loadTestPerformanceCounter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestPerformanceCounterCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestPerformanceCounterCategories(LoadTestPerformanceCounterCategory loadTestPerformanceCounterCategory)
        {
            base.AddObject("LoadTestPerformanceCounterCategories", loadTestPerformanceCounterCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestPerformanceCounterInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestPerformanceCounterInstances(LoadTestPerformanceCounterInstance loadTestPerformanceCounterInstance)
        {
            base.AddObject("LoadTestPerformanceCounterInstances", loadTestPerformanceCounterInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestPerformanceCounterSamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestPerformanceCounterSamples(LoadTestPerformanceCounterSample loadTestPerformanceCounterSample)
        {
            base.AddObject("LoadTestPerformanceCounterSamples", loadTestPerformanceCounterSample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestReports(LoadTestReport loadTestReport)
        {
            base.AddObject("LoadTestReports", loadTestReport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestReportPages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestReportPages(LoadTestReportPage loadTestReportPage)
        {
            base.AddObject("LoadTestReportPages", loadTestReportPage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestReportRuns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestReportRuns(LoadTestReportRun loadTestReportRun)
        {
            base.AddObject("LoadTestReportRuns", loadTestReportRun);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestRuns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestRuns(LoadTestRun loadTestRun)
        {
            base.AddObject("LoadTestRuns", loadTestRun);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestRunAgents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestRunAgents(LoadTestRunAgent loadTestRunAgent)
        {
            base.AddObject("LoadTestRunAgents", loadTestRunAgent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestRunIntervals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestRunIntervals(LoadTestRunInterval loadTestRunInterval)
        {
            base.AddObject("LoadTestRunIntervals", loadTestRunInterval);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestScenarios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestScenarios(LoadTestScenario loadTestScenario)
        {
            base.AddObject("LoadTestScenarios", loadTestScenario);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestSchemaRevisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestSchemaRevisions(LoadTestSchemaRevision loadTestSchemaRevision)
        {
            base.AddObject("LoadTestSchemaRevisions", loadTestSchemaRevision);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestSqlTraces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestSqlTraces(LoadTestSqlTrace loadTestSqlTrace)
        {
            base.AddObject("LoadTestSqlTraces", loadTestSqlTrace);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestSystemUnderTests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestSystemUnderTests(LoadTestSystemUnderTest loadTestSystemUnderTest)
        {
            base.AddObject("LoadTestSystemUnderTests", loadTestSystemUnderTest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestSystemUnderTestTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestSystemUnderTestTags(LoadTestSystemUnderTestTag loadTestSystemUnderTestTag)
        {
            base.AddObject("LoadTestSystemUnderTestTags", loadTestSystemUnderTestTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestTestDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestTestDetails(LoadTestTestDetail loadTestTestDetail)
        {
            base.AddObject("LoadTestTestDetails", loadTestTestDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestTestLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestTestLogs(LoadTestTestLog loadTestTestLog)
        {
            base.AddObject("LoadTestTestLogs", loadTestTestLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestTestSummaryDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestTestSummaryDatas(LoadTestTestSummaryData loadTestTestSummaryData)
        {
            base.AddObject("LoadTestTestSummaryDatas", loadTestTestSummaryData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestThresholdMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestThresholdMessages(LoadTestThresholdMessage loadTestThresholdMessage)
        {
            base.AddObject("LoadTestThresholdMessages", loadTestThresholdMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestTransactionDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestTransactionDetails(LoadTestTransactionDetail loadTestTransactionDetail)
        {
            base.AddObject("LoadTestTransactionDetails", loadTestTransactionDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestTransactionSummaryDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestTransactionSummaryDatas(LoadTestTransactionSummaryData loadTestTransactionSummaryData)
        {
            base.AddObject("LoadTestTransactionSummaryDatas", loadTestTransactionSummaryData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PassportUserIDStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPassportUserIDStatus(PassportUserIDStatu passportUserIDStatu)
        {
            base.AddObject("PassportUserIDStatus", passportUserIDStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebLoadTestErrorDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebLoadTestErrorDetails(WebLoadTestErrorDetail webLoadTestErrorDetail)
        {
            base.AddObject("WebLoadTestErrorDetails", webLoadTestErrorDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebLoadTestRequestMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebLoadTestRequestMaps(WebLoadTestRequestMap webLoadTestRequestMap)
        {
            base.AddObject("WebLoadTestRequestMaps", webLoadTestRequestMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebLoadTestTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebLoadTestTransactions(WebLoadTestTransaction webLoadTestTransaction)
        {
            base.AddObject("WebLoadTestTransactions", webLoadTestTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestComputedCounterSamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestComputedCounterSamples(LoadTestComputedCounterSample loadTestComputedCounterSample)
        {
            base.AddObject("LoadTestComputedCounterSamples", loadTestComputedCounterSample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestComputedCounterSummaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestComputedCounterSummaries(LoadTestComputedCounterSummary loadTestComputedCounterSummary)
        {
            base.AddObject("LoadTestComputedCounterSummaries", loadTestComputedCounterSummary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestMessageSummaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestMessageSummaries(LoadTestMessageSummary loadTestMessageSummary)
        {
            base.AddObject("LoadTestMessageSummaries", loadTestMessageSummary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestMessageViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestMessageViews(LoadTestMessageView loadTestMessageView)
        {
            base.AddObject("LoadTestMessageViews", loadTestMessageView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestMessageView2 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestMessageView2(LoadTestMessageView2 loadTestMessageView2)
        {
            base.AddObject("LoadTestMessageView2", loadTestMessageView2);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestPageResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestPageResults(LoadTestPageResult loadTestPageResult)
        {
            base.AddObject("LoadTestPageResults", loadTestPageResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestPageResultsByNetworks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestPageResultsByNetworks(LoadTestPageResultsByNetwork loadTestPageResultsByNetwork)
        {
            base.AddObject("LoadTestPageResultsByNetworks", loadTestPageResultsByNetwork);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestPageResultsByNetwork2 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestPageResultsByNetwork2(LoadTestPageResultsByNetwork2 loadTestPageResultsByNetwork2)
        {
            base.AddObject("LoadTestPageResultsByNetwork2", loadTestPageResultsByNetwork2);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestPageSamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestPageSamples(LoadTestPageSample loadTestPageSample)
        {
            base.AddObject("LoadTestPageSamples", loadTestPageSample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestPageSummaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestPageSummaries(LoadTestPageSummary loadTestPageSummary)
        {
            base.AddObject("LoadTestPageSummaries", loadTestPageSummary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestRequestSummaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestRequestSummaries(LoadTestRequestSummary loadTestRequestSummary)
        {
            base.AddObject("LoadTestRequestSummaries", loadTestRequestSummary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestScenarioSummaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestScenarioSummaries(LoadTestScenarioSummary loadTestScenarioSummary)
        {
            base.AddObject("LoadTestScenarioSummaries", loadTestScenarioSummary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestTestCaseSamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestTestCaseSamples(LoadTestTestCaseSample loadTestTestCaseSample)
        {
            base.AddObject("LoadTestTestCaseSamples", loadTestTestCaseSample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestTestCaseSummaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestTestCaseSummaries(LoadTestTestCaseSummary loadTestTestCaseSummary)
        {
            base.AddObject("LoadTestTestCaseSummaries", loadTestTestCaseSummary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestTestResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestTestResults(LoadTestTestResult loadTestTestResult)
        {
            base.AddObject("LoadTestTestResults", loadTestTestResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestTransactionResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestTransactionResults(LoadTestTransactionResult loadTestTransactionResult)
        {
            base.AddObject("LoadTestTransactionResults", loadTestTransactionResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestTransactionResults2 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestTransactionResults2(LoadTestTransactionResults2 loadTestTransactionResults2)
        {
            base.AddObject("LoadTestTransactionResults2", loadTestTransactionResults2);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestTransactionSamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestTransactionSamples(LoadTestTransactionSample loadTestTransactionSample)
        {
            base.AddObject("LoadTestTransactionSamples", loadTestTransactionSample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestTransactionSummaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestTransactionSummaries(LoadTestTransactionSummary loadTestTransactionSummary)
        {
            base.AddObject("LoadTestTransactionSummaries", loadTestTransactionSummary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestWebPageAndUserLoadCounterSamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestWebPageAndUserLoadCounterSamples(LoadTestWebPageAndUserLoadCounterSample loadTestWebPageAndUserLoadCounterSample)
        {
            base.AddObject("LoadTestWebPageAndUserLoadCounterSamples", loadTestWebPageAndUserLoadCounterSample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestWebRequestCounterSamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestWebRequestCounterSamples(LoadTestWebRequestCounterSample loadTestWebRequestCounterSample)
        {
            base.AddObject("LoadTestWebRequestCounterSamples", loadTestWebRequestCounterSample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoadTestWebRequestCounterSummaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoadTestWebRequestCounterSummaries(LoadTestWebRequestCounterSummary loadTestWebRequestCounterSummary)
        {
            base.AddObject("LoadTestWebRequestCounterSummaries", loadTestWebRequestCounterSummary);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="loadTestRunId">No Metadata Documentation available.</param>
        public ObjectResult<GetAgents_Result> GetAgents(Nullable<global::System.Int32> loadTestRunId)
        {
            ObjectParameter loadTestRunIdParameter;
            if (loadTestRunId.HasValue)
            {
                loadTestRunIdParameter = new ObjectParameter("LoadTestRunId", loadTestRunId);
            }
            else
            {
                loadTestRunIdParameter = new ObjectParameter("LoadTestRunId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetAgents_Result>("GetAgents", loadTestRunIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="loadTestId">No Metadata Documentation available.</param>
        /// <param name="counterCategory">No Metadata Documentation available.</param>
        /// <param name="counterName">No Metadata Documentation available.</param>
        /// <param name="instanceName">No Metadata Documentation available.</param>
        /// <param name="filterAgents">No Metadata Documentation available.</param>
        public ObjectResult<Pbx_GetSamplesForTest_Result> PublixGetSamplesForTest(Nullable<global::System.Int32> loadTestId, global::System.String counterCategory, global::System.String counterName, global::System.String instanceName, Nullable<global::System.Boolean> filterAgents)
        {
            ObjectParameter loadTestIdParameter;
            if (loadTestId.HasValue)
            {
                loadTestIdParameter = new ObjectParameter("LoadTestId", loadTestId);
            }
            else
            {
                loadTestIdParameter = new ObjectParameter("LoadTestId", typeof(global::System.Int32));
            }
    
            ObjectParameter counterCategoryParameter;
            if (counterCategory != null)
            {
                counterCategoryParameter = new ObjectParameter("CounterCategory", counterCategory);
            }
            else
            {
                counterCategoryParameter = new ObjectParameter("CounterCategory", typeof(global::System.String));
            }
    
            ObjectParameter counterNameParameter;
            if (counterName != null)
            {
                counterNameParameter = new ObjectParameter("CounterName", counterName);
            }
            else
            {
                counterNameParameter = new ObjectParameter("CounterName", typeof(global::System.String));
            }
    
            ObjectParameter instanceNameParameter;
            if (instanceName != null)
            {
                instanceNameParameter = new ObjectParameter("InstanceName", instanceName);
            }
            else
            {
                instanceNameParameter = new ObjectParameter("InstanceName", typeof(global::System.String));
            }
    
            ObjectParameter filterAgentsParameter;
            if (filterAgents.HasValue)
            {
                filterAgentsParameter = new ObjectParameter("FilterAgents", filterAgents);
            }
            else
            {
                filterAgentsParameter = new ObjectParameter("FilterAgents", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Pbx_GetSamplesForTest_Result>("PublixGetSamplesForTest", loadTestIdParameter, counterCategoryParameter, counterNameParameter, instanceNameParameter, filterAgentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="loadTestRunId">No Metadata Documentation available.</param>
        public int DeleteLoadTestRun(Nullable<global::System.Int32> loadTestRunId)
        {
            ObjectParameter loadTestRunIdParameter;
            if (loadTestRunId.HasValue)
            {
                loadTestRunIdParameter = new ObjectParameter("LoadTestRunId", loadTestRunId);
            }
            else
            {
                loadTestRunIdParameter = new ObjectParameter("LoadTestRunId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteLoadTestRun", loadTestRunIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Pbx_GetLoadTestsHoggingAllTheSpace_Result> GetLargeLoadTests()
        {
            return base.ExecuteFunction<Pbx_GetLoadTestsHoggingAllTheSpace_Result>("GetLargeLoadTests");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Pbx_GetLoadTestRunsWithHighCounterSampleRecords_Result> GetLargeCounterSampleLoadTests()
        {
            return base.ExecuteFunction<Pbx_GetLoadTestRunsWithHighCounterSampleRecords_Result>("GetLargeCounterSampleLoadTests");
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestBrowser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestBrowser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestBrowser object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="browserId">Initial value of the BrowserId property.</param>
        public static LoadTestBrowser CreateLoadTestBrowser(global::System.Int32 loadTestRunId, global::System.Int32 browserId)
        {
            LoadTestBrowser loadTestBrowser = new LoadTestBrowser();
            loadTestBrowser.LoadTestRunId = loadTestRunId;
            loadTestBrowser.BrowserId = browserId;
            return loadTestBrowser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrowserId
        {
            get
            {
                return _BrowserId;
            }
            set
            {
                if (_BrowserId != value)
                {
                    OnBrowserIdChanging(value);
                    ReportPropertyChanging("BrowserId");
                    _BrowserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BrowserId");
                    OnBrowserIdChanged();
                }
            }
        }
        private global::System.Int32 _BrowserId;
        partial void OnBrowserIdChanging(global::System.Int32 value);
        partial void OnBrowserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BrowserName
        {
            get
            {
                return _BrowserName;
            }
            set
            {
                OnBrowserNameChanging(value);
                ReportPropertyChanging("BrowserName");
                _BrowserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BrowserName");
                OnBrowserNameChanged();
            }
        }
        private global::System.String _BrowserName;
        partial void OnBrowserNameChanging(global::System.String value);
        partial void OnBrowserNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestCase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestCase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestCase object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="scenarioId">Initial value of the ScenarioId property.</param>
        /// <param name="testCaseId">Initial value of the TestCaseId property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        public static LoadTestCase CreateLoadTestCase(global::System.Int32 loadTestRunId, global::System.Int32 scenarioId, global::System.Int32 testCaseId, global::System.String testCaseName)
        {
            LoadTestCase loadTestCase = new LoadTestCase();
            loadTestCase.LoadTestRunId = loadTestRunId;
            loadTestCase.ScenarioId = scenarioId;
            loadTestCase.TestCaseId = testCaseId;
            loadTestCase.TestCaseName = testCaseName;
            return loadTestCase;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScenarioId
        {
            get
            {
                return _ScenarioId;
            }
            set
            {
                OnScenarioIdChanging(value);
                ReportPropertyChanging("ScenarioId");
                _ScenarioId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScenarioId");
                OnScenarioIdChanged();
            }
        }
        private global::System.Int32 _ScenarioId;
        partial void OnScenarioIdChanging(global::System.Int32 value);
        partial void OnScenarioIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestCaseId
        {
            get
            {
                return _TestCaseId;
            }
            set
            {
                if (_TestCaseId != value)
                {
                    OnTestCaseIdChanging(value);
                    ReportPropertyChanging("TestCaseId");
                    _TestCaseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestCaseId");
                    OnTestCaseIdChanged();
                }
            }
        }
        private global::System.Int32 _TestCaseId;
        partial void OnTestCaseIdChanging(global::System.Int32 value);
        partial void OnTestCaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                OnTestCaseNameChanging(value);
                ReportPropertyChanging("TestCaseName");
                _TestCaseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TestCaseName");
                OnTestCaseNameChanged();
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] TestElement
        {
            get
            {
                return StructuralObject.GetValidValue(_TestElement);
            }
            set
            {
                OnTestElementChanging(value);
                ReportPropertyChanging("TestElement");
                _TestElement = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TestElement");
                OnTestElementChanged();
            }
        }
        private global::System.Byte[] _TestElement;
        partial void OnTestElementChanging(global::System.Byte[] value);
        partial void OnTestElementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TestType
        {
            get
            {
                return _TestType;
            }
            set
            {
                OnTestTypeChanging(value);
                ReportPropertyChanging("TestType");
                _TestType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TestType");
                OnTestTypeChanged();
            }
        }
        private global::System.String _TestType;
        partial void OnTestTypeChanging(global::System.String value);
        partial void OnTestTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestC__LoadT__72C60C4A", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestC__LoadT__72C60C4A", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestC__LoadT__72C60C4A", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestC__LoadT__72C60C4A", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestC__LoadT__72C60C4A", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestComputedCounterSample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestComputedCounterSample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestComputedCounterSample object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="instanceName">Initial value of the InstanceName property.</param>
        /// <param name="intervalStartTime">Initial value of the IntervalStartTime property.</param>
        /// <param name="intervalEndTime">Initial value of the IntervalEndTime property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        /// <param name="rawValue">Initial value of the RawValue property.</param>
        /// <param name="thresholdRuleResult">Initial value of the ThresholdRuleResult property.</param>
        public static LoadTestComputedCounterSample CreateLoadTestComputedCounterSample(global::System.Int32 loadTestRunId, global::System.String machineName, global::System.String categoryName, global::System.String counterName, global::System.String instanceName, global::System.DateTime intervalStartTime, global::System.DateTime intervalEndTime, global::System.Int32 counterType, global::System.Int64 rawValue, global::System.Byte thresholdRuleResult)
        {
            LoadTestComputedCounterSample loadTestComputedCounterSample = new LoadTestComputedCounterSample();
            loadTestComputedCounterSample.LoadTestRunId = loadTestRunId;
            loadTestComputedCounterSample.MachineName = machineName;
            loadTestComputedCounterSample.CategoryName = categoryName;
            loadTestComputedCounterSample.CounterName = counterName;
            loadTestComputedCounterSample.InstanceName = instanceName;
            loadTestComputedCounterSample.IntervalStartTime = intervalStartTime;
            loadTestComputedCounterSample.IntervalEndTime = intervalEndTime;
            loadTestComputedCounterSample.CounterType = counterType;
            loadTestComputedCounterSample.RawValue = rawValue;
            loadTestComputedCounterSample.ThresholdRuleResult = thresholdRuleResult;
            return loadTestComputedCounterSample;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                if (_MachineName != value)
                {
                    OnMachineNameChanging(value);
                    ReportPropertyChanging("MachineName");
                    _MachineName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MachineName");
                    OnMachineNameChanged();
                }
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                if (_CategoryName != value)
                {
                    OnCategoryNameChanging(value);
                    ReportPropertyChanging("CategoryName");
                    _CategoryName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CategoryName");
                    OnCategoryNameChanged();
                }
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                if (_CounterName != value)
                {
                    OnCounterNameChanging(value);
                    ReportPropertyChanging("CounterName");
                    _CounterName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CounterName");
                    OnCounterNameChanged();
                }
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceName
        {
            get
            {
                return _InstanceName;
            }
            set
            {
                if (_InstanceName != value)
                {
                    OnInstanceNameChanging(value);
                    ReportPropertyChanging("InstanceName");
                    _InstanceName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InstanceName");
                    OnInstanceNameChanged();
                }
            }
        }
        private global::System.String _InstanceName;
        partial void OnInstanceNameChanging(global::System.String value);
        partial void OnInstanceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalStartTime
        {
            get
            {
                return _IntervalStartTime;
            }
            set
            {
                if (_IntervalStartTime != value)
                {
                    OnIntervalStartTimeChanging(value);
                    ReportPropertyChanging("IntervalStartTime");
                    _IntervalStartTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntervalStartTime");
                    OnIntervalStartTimeChanged();
                }
            }
        }
        private global::System.DateTime _IntervalStartTime;
        partial void OnIntervalStartTimeChanging(global::System.DateTime value);
        partial void OnIntervalStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalEndTime
        {
            get
            {
                return _IntervalEndTime;
            }
            set
            {
                if (_IntervalEndTime != value)
                {
                    OnIntervalEndTimeChanging(value);
                    ReportPropertyChanging("IntervalEndTime");
                    _IntervalEndTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntervalEndTime");
                    OnIntervalEndTimeChanged();
                }
            }
        }
        private global::System.DateTime _IntervalEndTime;
        partial void OnIntervalEndTimeChanging(global::System.DateTime value);
        partial void OnIntervalEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                if (_CounterType != value)
                {
                    OnCounterTypeChanging(value);
                    ReportPropertyChanging("CounterType");
                    _CounterType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CounterType");
                    OnCounterTypeChanged();
                }
            }
        }
        private global::System.Int32 _CounterType;
        partial void OnCounterTypeChanging(global::System.Int32 value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ComputedValue
        {
            get
            {
                return _ComputedValue;
            }
            set
            {
                OnComputedValueChanging(value);
                ReportPropertyChanging("ComputedValue");
                _ComputedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputedValue");
                OnComputedValueChanged();
            }
        }
        private Nullable<global::System.Single> _ComputedValue;
        partial void OnComputedValueChanging(Nullable<global::System.Single> value);
        partial void OnComputedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RawValue
        {
            get
            {
                return _RawValue;
            }
            set
            {
                if (_RawValue != value)
                {
                    OnRawValueChanging(value);
                    ReportPropertyChanging("RawValue");
                    _RawValue = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RawValue");
                    OnRawValueChanged();
                }
            }
        }
        private global::System.Int64 _RawValue;
        partial void OnRawValueChanging(global::System.Int64 value);
        partial void OnRawValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ThresholdRuleResult
        {
            get
            {
                return _ThresholdRuleResult;
            }
            set
            {
                if (_ThresholdRuleResult != value)
                {
                    OnThresholdRuleResultChanging(value);
                    ReportPropertyChanging("ThresholdRuleResult");
                    _ThresholdRuleResult = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThresholdRuleResult");
                    OnThresholdRuleResultChanged();
                }
            }
        }
        private global::System.Byte _ThresholdRuleResult;
        partial void OnThresholdRuleResultChanging(global::System.Byte value);
        partial void OnThresholdRuleResultChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestComputedCounterSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestComputedCounterSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestComputedCounterSummary object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="instanceName">Initial value of the InstanceName property.</param>
        public static LoadTestComputedCounterSummary CreateLoadTestComputedCounterSummary(global::System.Int32 loadTestRunId, global::System.String machineName, global::System.String categoryName, global::System.String counterName, global::System.String instanceName)
        {
            LoadTestComputedCounterSummary loadTestComputedCounterSummary = new LoadTestComputedCounterSummary();
            loadTestComputedCounterSummary.LoadTestRunId = loadTestRunId;
            loadTestComputedCounterSummary.MachineName = machineName;
            loadTestComputedCounterSummary.CategoryName = categoryName;
            loadTestComputedCounterSummary.CounterName = counterName;
            loadTestComputedCounterSummary.InstanceName = instanceName;
            return loadTestComputedCounterSummary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoadTestName
        {
            get
            {
                return _LoadTestName;
            }
            set
            {
                OnLoadTestNameChanging(value);
                ReportPropertyChanging("LoadTestName");
                _LoadTestName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoadTestName");
                OnLoadTestNameChanged();
            }
        }
        private global::System.String _LoadTestName;
        partial void OnLoadTestNameChanging(global::System.String value);
        partial void OnLoadTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                if (_MachineName != value)
                {
                    OnMachineNameChanging(value);
                    ReportPropertyChanging("MachineName");
                    _MachineName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MachineName");
                    OnMachineNameChanged();
                }
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                if (_CategoryName != value)
                {
                    OnCategoryNameChanging(value);
                    ReportPropertyChanging("CategoryName");
                    _CategoryName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CategoryName");
                    OnCategoryNameChanged();
                }
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                if (_CounterName != value)
                {
                    OnCounterNameChanging(value);
                    ReportPropertyChanging("CounterName");
                    _CounterName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CounterName");
                    OnCounterNameChanged();
                }
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HigherIsBetter
        {
            get
            {
                return _HigherIsBetter;
            }
            set
            {
                OnHigherIsBetterChanging(value);
                ReportPropertyChanging("HigherIsBetter");
                _HigherIsBetter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HigherIsBetter");
                OnHigherIsBetterChanged();
            }
        }
        private Nullable<global::System.Boolean> _HigherIsBetter;
        partial void OnHigherIsBetterChanging(Nullable<global::System.Boolean> value);
        partial void OnHigherIsBetterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceName
        {
            get
            {
                return _InstanceName;
            }
            set
            {
                if (_InstanceName != value)
                {
                    OnInstanceNameChanging(value);
                    ReportPropertyChanging("InstanceName");
                    _InstanceName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InstanceName");
                    OnInstanceNameChanged();
                }
            }
        }
        private global::System.String _InstanceName;
        partial void OnInstanceNameChanging(global::System.String value);
        partial void OnInstanceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CumulativeValue
        {
            get
            {
                return _CumulativeValue;
            }
            set
            {
                OnCumulativeValueChanging(value);
                ReportPropertyChanging("CumulativeValue");
                _CumulativeValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CumulativeValue");
                OnCumulativeValueChanged();
            }
        }
        private Nullable<global::System.Single> _CumulativeValue;
        partial void OnCumulativeValueChanging(Nullable<global::System.Single> value);
        partial void OnCumulativeValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> OverallThresholdRuleResult
        {
            get
            {
                return _OverallThresholdRuleResult;
            }
            set
            {
                OnOverallThresholdRuleResultChanging(value);
                ReportPropertyChanging("OverallThresholdRuleResult");
                _OverallThresholdRuleResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverallThresholdRuleResult");
                OnOverallThresholdRuleResultChanged();
            }
        }
        private Nullable<global::System.Byte> _OverallThresholdRuleResult;
        partial void OnOverallThresholdRuleResultChanging(Nullable<global::System.Byte> value);
        partial void OnOverallThresholdRuleResultChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestDataCollectorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestDataCollectorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestDataCollectorLog object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="dataCollectorLogId">Initial value of the DataCollectorLogId property.</param>
        /// <param name="dataCollectorDisplayName">Initial value of the DataCollectorDisplayName property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        /// <param name="createTableFormatString">Initial value of the CreateTableFormatString property.</param>
        public static LoadTestDataCollectorLog CreateLoadTestDataCollectorLog(global::System.Int32 loadTestRunId, global::System.Int32 dataCollectorLogId, global::System.String dataCollectorDisplayName, global::System.String machineName, global::System.String createTableFormatString)
        {
            LoadTestDataCollectorLog loadTestDataCollectorLog = new LoadTestDataCollectorLog();
            loadTestDataCollectorLog.LoadTestRunId = loadTestRunId;
            loadTestDataCollectorLog.DataCollectorLogId = dataCollectorLogId;
            loadTestDataCollectorLog.DataCollectorDisplayName = dataCollectorDisplayName;
            loadTestDataCollectorLog.MachineName = machineName;
            loadTestDataCollectorLog.CreateTableFormatString = createTableFormatString;
            return loadTestDataCollectorLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataCollectorLogId
        {
            get
            {
                return _DataCollectorLogId;
            }
            set
            {
                if (_DataCollectorLogId != value)
                {
                    OnDataCollectorLogIdChanging(value);
                    ReportPropertyChanging("DataCollectorLogId");
                    _DataCollectorLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DataCollectorLogId");
                    OnDataCollectorLogIdChanged();
                }
            }
        }
        private global::System.Int32 _DataCollectorLogId;
        partial void OnDataCollectorLogIdChanging(global::System.Int32 value);
        partial void OnDataCollectorLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataCollectorDisplayName
        {
            get
            {
                return _DataCollectorDisplayName;
            }
            set
            {
                OnDataCollectorDisplayNameChanging(value);
                ReportPropertyChanging("DataCollectorDisplayName");
                _DataCollectorDisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataCollectorDisplayName");
                OnDataCollectorDisplayNameChanged();
            }
        }
        private global::System.String _DataCollectorDisplayName;
        partial void OnDataCollectorDisplayNameChanging(global::System.String value);
        partial void OnDataCollectorDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TimestampColumnName
        {
            get
            {
                return _TimestampColumnName;
            }
            set
            {
                OnTimestampColumnNameChanging(value);
                ReportPropertyChanging("TimestampColumnName");
                _TimestampColumnName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimestampColumnName");
                OnTimestampColumnNameChanged();
            }
        }
        private global::System.String _TimestampColumnName;
        partial void OnTimestampColumnNameChanging(global::System.String value);
        partial void OnTimestampColumnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DurationColumnName
        {
            get
            {
                return _DurationColumnName;
            }
            set
            {
                OnDurationColumnNameChanging(value);
                ReportPropertyChanging("DurationColumnName");
                _DurationColumnName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DurationColumnName");
                OnDurationColumnNameChanged();
            }
        }
        private global::System.String _DurationColumnName;
        partial void OnDurationColumnNameChanging(global::System.String value);
        partial void OnDurationColumnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateTableFormatString
        {
            get
            {
                return _CreateTableFormatString;
            }
            set
            {
                OnCreateTableFormatStringChanging(value);
                ReportPropertyChanging("CreateTableFormatString");
                _CreateTableFormatString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreateTableFormatString");
                OnCreateTableFormatStringChanged();
            }
        }
        private global::System.String _CreateTableFormatString;
        partial void OnCreateTableFormatStringChanging(global::System.String value);
        partial void OnCreateTableFormatStringChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestD__LoadT__02FC7413", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestD__LoadT__02FC7413", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestD__LoadT__02FC7413", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestD__LoadT__02FC7413", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestD__LoadT__02FC7413", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestDetailMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestDetailMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestDetailMessage object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="loadTestDetailMessageId">Initial value of the LoadTestDetailMessageId property.</param>
        /// <param name="testDetailId">Initial value of the TestDetailId property.</param>
        /// <param name="messageTypeId">Initial value of the MessageTypeId property.</param>
        public static LoadTestDetailMessage CreateLoadTestDetailMessage(global::System.Int32 loadTestRunId, global::System.Int32 loadTestDetailMessageId, global::System.Int32 testDetailId, global::System.Int32 messageTypeId)
        {
            LoadTestDetailMessage loadTestDetailMessage = new LoadTestDetailMessage();
            loadTestDetailMessage.LoadTestRunId = loadTestRunId;
            loadTestDetailMessage.LoadTestDetailMessageId = loadTestDetailMessageId;
            loadTestDetailMessage.TestDetailId = testDetailId;
            loadTestDetailMessage.MessageTypeId = messageTypeId;
            return loadTestDetailMessage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestDetailMessageId
        {
            get
            {
                return _LoadTestDetailMessageId;
            }
            set
            {
                if (_LoadTestDetailMessageId != value)
                {
                    OnLoadTestDetailMessageIdChanging(value);
                    ReportPropertyChanging("LoadTestDetailMessageId");
                    _LoadTestDetailMessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestDetailMessageId");
                    OnLoadTestDetailMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestDetailMessageId;
        partial void OnLoadTestDetailMessageIdChanging(global::System.Int32 value);
        partial void OnLoadTestDetailMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestDetailId
        {
            get
            {
                return _TestDetailId;
            }
            set
            {
                OnTestDetailIdChanging(value);
                ReportPropertyChanging("TestDetailId");
                _TestDetailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestDetailId");
                OnTestDetailIdChanged();
            }
        }
        private global::System.Int32 _TestDetailId;
        partial void OnTestDetailIdChanging(global::System.Int32 value);
        partial void OnTestDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PageDetailId
        {
            get
            {
                return _PageDetailId;
            }
            set
            {
                OnPageDetailIdChanging(value);
                ReportPropertyChanging("PageDetailId");
                _PageDetailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PageDetailId");
                OnPageDetailIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PageDetailId;
        partial void OnPageDetailIdChanging(Nullable<global::System.Int32> value);
        partial void OnPageDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageTypeId
        {
            get
            {
                return _MessageTypeId;
            }
            set
            {
                OnMessageTypeIdChanging(value);
                ReportPropertyChanging("MessageTypeId");
                _MessageTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageTypeId");
                OnMessageTypeIdChanged();
            }
        }
        private global::System.Int32 _MessageTypeId;
        partial void OnMessageTypeIdChanging(global::System.Int32 value);
        partial void OnMessageTypeIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestFileAttachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestFileAttachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestFileAttachment object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="fileAttachmentId">Initial value of the FileAttachmentId property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        /// <param name="fileSize">Initial value of the FileSize property.</param>
        public static LoadTestFileAttachment CreateLoadTestFileAttachment(global::System.Int32 loadTestRunId, global::System.Int32 fileAttachmentId, global::System.String machineName, global::System.String filename, global::System.Int64 fileSize)
        {
            LoadTestFileAttachment loadTestFileAttachment = new LoadTestFileAttachment();
            loadTestFileAttachment.LoadTestRunId = loadTestRunId;
            loadTestFileAttachment.FileAttachmentId = fileAttachmentId;
            loadTestFileAttachment.MachineName = machineName;
            loadTestFileAttachment.Filename = filename;
            loadTestFileAttachment.FileSize = fileSize;
            return loadTestFileAttachment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileAttachmentId
        {
            get
            {
                return _FileAttachmentId;
            }
            set
            {
                if (_FileAttachmentId != value)
                {
                    OnFileAttachmentIdChanging(value);
                    ReportPropertyChanging("FileAttachmentId");
                    _FileAttachmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileAttachmentId");
                    OnFileAttachmentIdChanged();
                }
            }
        }
        private global::System.Int32 _FileAttachmentId;
        partial void OnFileAttachmentIdChanging(global::System.Int32 value);
        partial void OnFileAttachmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FileSize
        {
            get
            {
                return _FileSize;
            }
            set
            {
                OnFileSizeChanging(value);
                ReportPropertyChanging("FileSize");
                _FileSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileSize");
                OnFileSizeChanged();
            }
        }
        private global::System.Int64 _FileSize;
        partial void OnFileSizeChanging(global::System.Int64 value);
        partial void OnFileSizeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestF__LoadT__03F0984C", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestF__LoadT__03F0984C", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestF__LoadT__03F0984C", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestF__LoadT__03F0984C", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestF__LoadT__03F0984C", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestFileAttachmentChunk")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestFileAttachmentChunk : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestFileAttachmentChunk object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="fileAttachmentId">Initial value of the FileAttachmentId property.</param>
        /// <param name="startOffset">Initial value of the StartOffset property.</param>
        /// <param name="endOffset">Initial value of the EndOffset property.</param>
        /// <param name="chunkLength">Initial value of the ChunkLength property.</param>
        /// <param name="chunkBytes">Initial value of the ChunkBytes property.</param>
        public static LoadTestFileAttachmentChunk CreateLoadTestFileAttachmentChunk(global::System.Int32 loadTestRunId, global::System.Int32 fileAttachmentId, global::System.Int64 startOffset, global::System.Int64 endOffset, global::System.Int64 chunkLength, global::System.Byte[] chunkBytes)
        {
            LoadTestFileAttachmentChunk loadTestFileAttachmentChunk = new LoadTestFileAttachmentChunk();
            loadTestFileAttachmentChunk.LoadTestRunId = loadTestRunId;
            loadTestFileAttachmentChunk.FileAttachmentId = fileAttachmentId;
            loadTestFileAttachmentChunk.StartOffset = startOffset;
            loadTestFileAttachmentChunk.EndOffset = endOffset;
            loadTestFileAttachmentChunk.ChunkLength = chunkLength;
            loadTestFileAttachmentChunk.ChunkBytes = chunkBytes;
            return loadTestFileAttachmentChunk;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileAttachmentId
        {
            get
            {
                return _FileAttachmentId;
            }
            set
            {
                if (_FileAttachmentId != value)
                {
                    OnFileAttachmentIdChanging(value);
                    ReportPropertyChanging("FileAttachmentId");
                    _FileAttachmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileAttachmentId");
                    OnFileAttachmentIdChanged();
                }
            }
        }
        private global::System.Int32 _FileAttachmentId;
        partial void OnFileAttachmentIdChanging(global::System.Int32 value);
        partial void OnFileAttachmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 StartOffset
        {
            get
            {
                return _StartOffset;
            }
            set
            {
                if (_StartOffset != value)
                {
                    OnStartOffsetChanging(value);
                    ReportPropertyChanging("StartOffset");
                    _StartOffset = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StartOffset");
                    OnStartOffsetChanged();
                }
            }
        }
        private global::System.Int64 _StartOffset;
        partial void OnStartOffsetChanging(global::System.Int64 value);
        partial void OnStartOffsetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EndOffset
        {
            get
            {
                return _EndOffset;
            }
            set
            {
                OnEndOffsetChanging(value);
                ReportPropertyChanging("EndOffset");
                _EndOffset = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndOffset");
                OnEndOffsetChanged();
            }
        }
        private global::System.Int64 _EndOffset;
        partial void OnEndOffsetChanging(global::System.Int64 value);
        partial void OnEndOffsetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ChunkLength
        {
            get
            {
                return _ChunkLength;
            }
            set
            {
                OnChunkLengthChanging(value);
                ReportPropertyChanging("ChunkLength");
                _ChunkLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChunkLength");
                OnChunkLengthChanged();
            }
        }
        private global::System.Int64 _ChunkLength;
        partial void OnChunkLengthChanging(global::System.Int64 value);
        partial void OnChunkLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ChunkBytes
        {
            get
            {
                return StructuralObject.GetValidValue(_ChunkBytes);
            }
            set
            {
                OnChunkBytesChanging(value);
                ReportPropertyChanging("ChunkBytes");
                _ChunkBytes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChunkBytes");
                OnChunkBytesChanged();
            }
        }
        private global::System.Byte[] _ChunkBytes;
        partial void OnChunkBytesChanging(global::System.Byte[] value);
        partial void OnChunkBytesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestF__LoadT__04E4BC85", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestF__LoadT__04E4BC85", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestF__LoadT__04E4BC85", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestF__LoadT__04E4BC85", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestF__LoadT__04E4BC85", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestMessage object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="agentId">Initial value of the AgentId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="messageType">Initial value of the MessageType property.</param>
        /// <param name="messageTimeStamp">Initial value of the MessageTimeStamp property.</param>
        public static LoadTestMessage CreateLoadTestMessage(global::System.Int32 loadTestRunId, global::System.Int32 agentId, global::System.Int32 messageId, global::System.Byte messageType, global::System.DateTime messageTimeStamp)
        {
            LoadTestMessage loadTestMessage = new LoadTestMessage();
            loadTestMessage.LoadTestRunId = loadTestRunId;
            loadTestMessage.AgentId = agentId;
            loadTestMessage.MessageId = messageId;
            loadTestMessage.MessageType = messageType;
            loadTestMessage.MessageTimeStamp = messageTimeStamp;
            return loadTestMessage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgentId
        {
            get
            {
                return _AgentId;
            }
            set
            {
                if (_AgentId != value)
                {
                    OnAgentIdChanging(value);
                    ReportPropertyChanging("AgentId");
                    _AgentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgentId");
                    OnAgentIdChanged();
                }
            }
        }
        private global::System.Int32 _AgentId;
        partial void OnAgentIdChanging(global::System.Int32 value);
        partial void OnAgentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte MessageType
        {
            get
            {
                return _MessageType;
            }
            set
            {
                OnMessageTypeChanging(value);
                ReportPropertyChanging("MessageType");
                _MessageType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageType");
                OnMessageTypeChanged();
            }
        }
        private global::System.Byte _MessageType;
        partial void OnMessageTypeChanging(global::System.Byte value);
        partial void OnMessageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageText
        {
            get
            {
                return _MessageText;
            }
            set
            {
                OnMessageTextChanging(value);
                ReportPropertyChanging("MessageText");
                _MessageText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MessageText");
                OnMessageTextChanged();
            }
        }
        private global::System.String _MessageText;
        partial void OnMessageTextChanging(global::System.String value);
        partial void OnMessageTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubType
        {
            get
            {
                return _SubType;
            }
            set
            {
                OnSubTypeChanging(value);
                ReportPropertyChanging("SubType");
                _SubType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubType");
                OnSubTypeChanged();
            }
        }
        private global::System.String _SubType;
        partial void OnSubTypeChanging(global::System.String value);
        partial void OnSubTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StackTrace
        {
            get
            {
                return _StackTrace;
            }
            set
            {
                OnStackTraceChanging(value);
                ReportPropertyChanging("StackTrace");
                _StackTrace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StackTrace");
                OnStackTraceChanged();
            }
        }
        private global::System.String _StackTrace;
        partial void OnStackTraceChanging(global::System.String value);
        partial void OnStackTraceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessageTimeStamp
        {
            get
            {
                return _MessageTimeStamp;
            }
            set
            {
                OnMessageTimeStampChanging(value);
                ReportPropertyChanging("MessageTimeStamp");
                _MessageTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageTimeStamp");
                OnMessageTimeStampChanged();
            }
        }
        private global::System.DateTime _MessageTimeStamp;
        partial void OnMessageTimeStampChanging(global::System.DateTime value);
        partial void OnMessageTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TestCaseId
        {
            get
            {
                return _TestCaseId;
            }
            set
            {
                OnTestCaseIdChanging(value);
                ReportPropertyChanging("TestCaseId");
                _TestCaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestCaseId");
                OnTestCaseIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TestCaseId;
        partial void OnTestCaseIdChanging(Nullable<global::System.Int32> value);
        partial void OnTestCaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RequestId;
        partial void OnRequestIdChanging(Nullable<global::System.Int32> value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TestLogId
        {
            get
            {
                return _TestLogId;
            }
            set
            {
                OnTestLogIdChanging(value);
                ReportPropertyChanging("TestLogId");
                _TestLogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestLogId");
                OnTestLogIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TestLogId;
        partial void OnTestLogIdChanging(Nullable<global::System.Int32> value);
        partial void OnTestLogIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestM__LoadT__73BA3083", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestM__LoadT__73BA3083", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestM__LoadT__73BA3083", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestM__LoadT__73BA3083", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestM__LoadT__73BA3083", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestMessageSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestMessageSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestMessageSummary object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="messageTimeStamp">Initial value of the MessageTimeStamp property.</param>
        /// <param name="messageType">Initial value of the MessageType property.</param>
        /// <param name="hasWebTestErrorDetail">Initial value of the HasWebTestErrorDetail property.</param>
        public static LoadTestMessageSummary CreateLoadTestMessageSummary(global::System.Int32 loadTestRunId, global::System.Int32 messageId, global::System.DateTime messageTimeStamp, global::System.String messageType, global::System.String hasWebTestErrorDetail)
        {
            LoadTestMessageSummary loadTestMessageSummary = new LoadTestMessageSummary();
            loadTestMessageSummary.LoadTestRunId = loadTestRunId;
            loadTestMessageSummary.MessageId = messageId;
            loadTestMessageSummary.MessageTimeStamp = messageTimeStamp;
            loadTestMessageSummary.MessageType = messageType;
            loadTestMessageSummary.HasWebTestErrorDetail = hasWebTestErrorDetail;
            return loadTestMessageSummary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AgentName
        {
            get
            {
                return _AgentName;
            }
            set
            {
                OnAgentNameChanging(value);
                ReportPropertyChanging("AgentName");
                _AgentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AgentName");
                OnAgentNameChanged();
            }
        }
        private global::System.String _AgentName;
        partial void OnAgentNameChanging(global::System.String value);
        partial void OnAgentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                OnScenarioNameChanging(value);
                ReportPropertyChanging("ScenarioName");
                _ScenarioName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScenarioName");
                OnScenarioNameChanged();
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                OnTestCaseNameChanging(value);
                ReportPropertyChanging("TestCaseName");
                _TestCaseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TestCaseName");
                OnTestCaseNameChanged();
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                OnRequestUriChanging(value);
                ReportPropertyChanging("RequestUri");
                _RequestUri = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequestUri");
                OnRequestUriChanged();
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessageTimeStamp
        {
            get
            {
                return _MessageTimeStamp;
            }
            set
            {
                if (_MessageTimeStamp != value)
                {
                    OnMessageTimeStampChanging(value);
                    ReportPropertyChanging("MessageTimeStamp");
                    _MessageTimeStamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageTimeStamp");
                    OnMessageTimeStampChanged();
                }
            }
        }
        private global::System.DateTime _MessageTimeStamp;
        partial void OnMessageTimeStampChanging(global::System.DateTime value);
        partial void OnMessageTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageType
        {
            get
            {
                return _MessageType;
            }
            set
            {
                if (_MessageType != value)
                {
                    OnMessageTypeChanging(value);
                    ReportPropertyChanging("MessageType");
                    _MessageType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MessageType");
                    OnMessageTypeChanged();
                }
            }
        }
        private global::System.String _MessageType;
        partial void OnMessageTypeChanging(global::System.String value);
        partial void OnMessageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubType
        {
            get
            {
                return _SubType;
            }
            set
            {
                OnSubTypeChanging(value);
                ReportPropertyChanging("SubType");
                _SubType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubType");
                OnSubTypeChanged();
            }
        }
        private global::System.String _SubType;
        partial void OnSubTypeChanging(global::System.String value);
        partial void OnSubTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageText
        {
            get
            {
                return _MessageText;
            }
            set
            {
                OnMessageTextChanging(value);
                ReportPropertyChanging("MessageText");
                _MessageText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MessageText");
                OnMessageTextChanged();
            }
        }
        private global::System.String _MessageText;
        partial void OnMessageTextChanging(global::System.String value);
        partial void OnMessageTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StackTrace
        {
            get
            {
                return _StackTrace;
            }
            set
            {
                OnStackTraceChanging(value);
                ReportPropertyChanging("StackTrace");
                _StackTrace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StackTrace");
                OnStackTraceChanged();
            }
        }
        private global::System.String _StackTrace;
        partial void OnStackTraceChanging(global::System.String value);
        partial void OnStackTraceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RequestId;
        partial void OnRequestIdChanging(Nullable<global::System.Int32> value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HasWebTestErrorDetail
        {
            get
            {
                return _HasWebTestErrorDetail;
            }
            set
            {
                if (_HasWebTestErrorDetail != value)
                {
                    OnHasWebTestErrorDetailChanging(value);
                    ReportPropertyChanging("HasWebTestErrorDetail");
                    _HasWebTestErrorDetail = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HasWebTestErrorDetail");
                    OnHasWebTestErrorDetailChanged();
                }
            }
        }
        private global::System.String _HasWebTestErrorDetail;
        partial void OnHasWebTestErrorDetailChanging(global::System.String value);
        partial void OnHasWebTestErrorDetailChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestMessageType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestMessageType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestMessageType object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="messageTypeId">Initial value of the MessageTypeId property.</param>
        /// <param name="messageType">Initial value of the MessageType property.</param>
        public static LoadTestMessageType CreateLoadTestMessageType(global::System.Int32 loadTestRunId, global::System.Int32 messageTypeId, global::System.Byte messageType)
        {
            LoadTestMessageType loadTestMessageType = new LoadTestMessageType();
            loadTestMessageType.LoadTestRunId = loadTestRunId;
            loadTestMessageType.MessageTypeId = messageTypeId;
            loadTestMessageType.MessageType = messageType;
            return loadTestMessageType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageTypeId
        {
            get
            {
                return _MessageTypeId;
            }
            set
            {
                if (_MessageTypeId != value)
                {
                    OnMessageTypeIdChanging(value);
                    ReportPropertyChanging("MessageTypeId");
                    _MessageTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageTypeId");
                    OnMessageTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageTypeId;
        partial void OnMessageTypeIdChanging(global::System.Int32 value);
        partial void OnMessageTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte MessageType
        {
            get
            {
                return _MessageType;
            }
            set
            {
                OnMessageTypeChanging(value);
                ReportPropertyChanging("MessageType");
                _MessageType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageType");
                OnMessageTypeChanged();
            }
        }
        private global::System.Byte _MessageType;
        partial void OnMessageTypeChanging(global::System.Byte value);
        partial void OnMessageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubType
        {
            get
            {
                return _SubType;
            }
            set
            {
                OnSubTypeChanging(value);
                ReportPropertyChanging("SubType");
                _SubType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubType");
                OnSubTypeChanged();
            }
        }
        private global::System.String _SubType;
        partial void OnSubTypeChanging(global::System.String value);
        partial void OnSubTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestMessageView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestMessageView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestMessageView object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="messageTimeStamp">Initial value of the MessageTimeStamp property.</param>
        /// <param name="messageType">Initial value of the MessageType property.</param>
        /// <param name="hasWebTestErrorDetail">Initial value of the HasWebTestErrorDetail property.</param>
        public static LoadTestMessageView CreateLoadTestMessageView(global::System.Int32 loadTestRunId, global::System.Int32 messageId, global::System.DateTime messageTimeStamp, global::System.Byte messageType, global::System.String hasWebTestErrorDetail)
        {
            LoadTestMessageView loadTestMessageView = new LoadTestMessageView();
            loadTestMessageView.LoadTestRunId = loadTestRunId;
            loadTestMessageView.MessageId = messageId;
            loadTestMessageView.MessageTimeStamp = messageTimeStamp;
            loadTestMessageView.MessageType = messageType;
            loadTestMessageView.HasWebTestErrorDetail = hasWebTestErrorDetail;
            return loadTestMessageView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AgentName
        {
            get
            {
                return _AgentName;
            }
            set
            {
                OnAgentNameChanging(value);
                ReportPropertyChanging("AgentName");
                _AgentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AgentName");
                OnAgentNameChanged();
            }
        }
        private global::System.String _AgentName;
        partial void OnAgentNameChanging(global::System.String value);
        partial void OnAgentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                OnScenarioNameChanging(value);
                ReportPropertyChanging("ScenarioName");
                _ScenarioName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScenarioName");
                OnScenarioNameChanged();
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                OnTestCaseNameChanging(value);
                ReportPropertyChanging("TestCaseName");
                _TestCaseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TestCaseName");
                OnTestCaseNameChanged();
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                OnRequestUriChanging(value);
                ReportPropertyChanging("RequestUri");
                _RequestUri = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequestUri");
                OnRequestUriChanged();
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessageTimeStamp
        {
            get
            {
                return _MessageTimeStamp;
            }
            set
            {
                if (_MessageTimeStamp != value)
                {
                    OnMessageTimeStampChanging(value);
                    ReportPropertyChanging("MessageTimeStamp");
                    _MessageTimeStamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageTimeStamp");
                    OnMessageTimeStampChanged();
                }
            }
        }
        private global::System.DateTime _MessageTimeStamp;
        partial void OnMessageTimeStampChanging(global::System.DateTime value);
        partial void OnMessageTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte MessageType
        {
            get
            {
                return _MessageType;
            }
            set
            {
                if (_MessageType != value)
                {
                    OnMessageTypeChanging(value);
                    ReportPropertyChanging("MessageType");
                    _MessageType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageType");
                    OnMessageTypeChanged();
                }
            }
        }
        private global::System.Byte _MessageType;
        partial void OnMessageTypeChanging(global::System.Byte value);
        partial void OnMessageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubType
        {
            get
            {
                return _SubType;
            }
            set
            {
                OnSubTypeChanging(value);
                ReportPropertyChanging("SubType");
                _SubType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubType");
                OnSubTypeChanged();
            }
        }
        private global::System.String _SubType;
        partial void OnSubTypeChanging(global::System.String value);
        partial void OnSubTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageText
        {
            get
            {
                return _MessageText;
            }
            set
            {
                OnMessageTextChanging(value);
                ReportPropertyChanging("MessageText");
                _MessageText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MessageText");
                OnMessageTextChanged();
            }
        }
        private global::System.String _MessageText;
        partial void OnMessageTextChanging(global::System.String value);
        partial void OnMessageTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StackTrace
        {
            get
            {
                return _StackTrace;
            }
            set
            {
                OnStackTraceChanging(value);
                ReportPropertyChanging("StackTrace");
                _StackTrace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StackTrace");
                OnStackTraceChanged();
            }
        }
        private global::System.String _StackTrace;
        partial void OnStackTraceChanging(global::System.String value);
        partial void OnStackTraceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RequestId;
        partial void OnRequestIdChanging(Nullable<global::System.Int32> value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HasWebTestErrorDetail
        {
            get
            {
                return _HasWebTestErrorDetail;
            }
            set
            {
                if (_HasWebTestErrorDetail != value)
                {
                    OnHasWebTestErrorDetailChanging(value);
                    ReportPropertyChanging("HasWebTestErrorDetail");
                    _HasWebTestErrorDetail = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HasWebTestErrorDetail");
                    OnHasWebTestErrorDetailChanged();
                }
            }
        }
        private global::System.String _HasWebTestErrorDetail;
        partial void OnHasWebTestErrorDetailChanging(global::System.String value);
        partial void OnHasWebTestErrorDetailChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestMessageView2")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestMessageView2 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestMessageView2 object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="messageTimeStamp">Initial value of the MessageTimeStamp property.</param>
        /// <param name="messageType">Initial value of the MessageType property.</param>
        /// <param name="hasWebTestErrorDetail">Initial value of the HasWebTestErrorDetail property.</param>
        public static LoadTestMessageView2 CreateLoadTestMessageView2(global::System.Int32 loadTestRunId, global::System.Int32 messageId, global::System.DateTime messageTimeStamp, global::System.Byte messageType, global::System.String hasWebTestErrorDetail)
        {
            LoadTestMessageView2 loadTestMessageView2 = new LoadTestMessageView2();
            loadTestMessageView2.LoadTestRunId = loadTestRunId;
            loadTestMessageView2.MessageId = messageId;
            loadTestMessageView2.MessageTimeStamp = messageTimeStamp;
            loadTestMessageView2.MessageType = messageType;
            loadTestMessageView2.HasWebTestErrorDetail = hasWebTestErrorDetail;
            return loadTestMessageView2;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AgentName
        {
            get
            {
                return _AgentName;
            }
            set
            {
                OnAgentNameChanging(value);
                ReportPropertyChanging("AgentName");
                _AgentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AgentName");
                OnAgentNameChanged();
            }
        }
        private global::System.String _AgentName;
        partial void OnAgentNameChanging(global::System.String value);
        partial void OnAgentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                OnScenarioNameChanging(value);
                ReportPropertyChanging("ScenarioName");
                _ScenarioName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScenarioName");
                OnScenarioNameChanged();
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                OnTestCaseNameChanging(value);
                ReportPropertyChanging("TestCaseName");
                _TestCaseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TestCaseName");
                OnTestCaseNameChanged();
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                OnRequestUriChanging(value);
                ReportPropertyChanging("RequestUri");
                _RequestUri = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequestUri");
                OnRequestUriChanged();
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessageTimeStamp
        {
            get
            {
                return _MessageTimeStamp;
            }
            set
            {
                if (_MessageTimeStamp != value)
                {
                    OnMessageTimeStampChanging(value);
                    ReportPropertyChanging("MessageTimeStamp");
                    _MessageTimeStamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageTimeStamp");
                    OnMessageTimeStampChanged();
                }
            }
        }
        private global::System.DateTime _MessageTimeStamp;
        partial void OnMessageTimeStampChanging(global::System.DateTime value);
        partial void OnMessageTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte MessageType
        {
            get
            {
                return _MessageType;
            }
            set
            {
                if (_MessageType != value)
                {
                    OnMessageTypeChanging(value);
                    ReportPropertyChanging("MessageType");
                    _MessageType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageType");
                    OnMessageTypeChanged();
                }
            }
        }
        private global::System.Byte _MessageType;
        partial void OnMessageTypeChanging(global::System.Byte value);
        partial void OnMessageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubType
        {
            get
            {
                return _SubType;
            }
            set
            {
                OnSubTypeChanging(value);
                ReportPropertyChanging("SubType");
                _SubType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubType");
                OnSubTypeChanged();
            }
        }
        private global::System.String _SubType;
        partial void OnSubTypeChanging(global::System.String value);
        partial void OnSubTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageText
        {
            get
            {
                return _MessageText;
            }
            set
            {
                OnMessageTextChanging(value);
                ReportPropertyChanging("MessageText");
                _MessageText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MessageText");
                OnMessageTextChanged();
            }
        }
        private global::System.String _MessageText;
        partial void OnMessageTextChanging(global::System.String value);
        partial void OnMessageTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StackTrace
        {
            get
            {
                return _StackTrace;
            }
            set
            {
                OnStackTraceChanging(value);
                ReportPropertyChanging("StackTrace");
                _StackTrace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StackTrace");
                OnStackTraceChanged();
            }
        }
        private global::System.String _StackTrace;
        partial void OnStackTraceChanging(global::System.String value);
        partial void OnStackTraceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RequestId;
        partial void OnRequestIdChanging(Nullable<global::System.Int32> value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HasWebTestErrorDetail
        {
            get
            {
                return _HasWebTestErrorDetail;
            }
            set
            {
                if (_HasWebTestErrorDetail != value)
                {
                    OnHasWebTestErrorDetailChanging(value);
                    ReportPropertyChanging("HasWebTestErrorDetail");
                    _HasWebTestErrorDetail = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HasWebTestErrorDetail");
                    OnHasWebTestErrorDetailChanged();
                }
            }
        }
        private global::System.String _HasWebTestErrorDetail;
        partial void OnHasWebTestErrorDetailChanging(global::System.String value);
        partial void OnHasWebTestErrorDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TestLogId
        {
            get
            {
                return _TestLogId;
            }
            set
            {
                OnTestLogIdChanging(value);
                ReportPropertyChanging("TestLogId");
                _TestLogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestLogId");
                OnTestLogIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TestLogId;
        partial void OnTestLogIdChanging(Nullable<global::System.Int32> value);
        partial void OnTestLogIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestNetwork")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestNetwork : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestNetwork object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="networkName">Initial value of the NetworkName property.</param>
        public static LoadTestNetwork CreateLoadTestNetwork(global::System.Int32 loadTestRunId, global::System.Int32 networkId, global::System.String networkName)
        {
            LoadTestNetwork loadTestNetwork = new LoadTestNetwork();
            loadTestNetwork.LoadTestRunId = loadTestRunId;
            loadTestNetwork.NetworkId = networkId;
            loadTestNetwork.NetworkName = networkName;
            return loadTestNetwork;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                if (_NetworkId != value)
                {
                    OnNetworkIdChanging(value);
                    ReportPropertyChanging("NetworkId");
                    _NetworkId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NetworkId");
                    OnNetworkIdChanged();
                }
            }
        }
        private global::System.Int32 _NetworkId;
        partial void OnNetworkIdChanging(global::System.Int32 value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NetworkName
        {
            get
            {
                return _NetworkName;
            }
            set
            {
                OnNetworkNameChanging(value);
                ReportPropertyChanging("NetworkName");
                _NetworkName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NetworkName");
                OnNetworkNameChanged();
            }
        }
        private global::System.String _NetworkName;
        partial void OnNetworkNameChanging(global::System.String value);
        partial void OnNetworkNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestPageDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestPageDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestPageDetail object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="pageDetailId">Initial value of the PageDetailId property.</param>
        /// <param name="testDetailId">Initial value of the TestDetailId property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="pageId">Initial value of the PageId property.</param>
        /// <param name="responseTime">Initial value of the ResponseTime property.</param>
        /// <param name="responseTimeGoal">Initial value of the ResponseTimeGoal property.</param>
        /// <param name="goalExceeded">Initial value of the GoalExceeded property.</param>
        public static LoadTestPageDetail CreateLoadTestPageDetail(global::System.Int32 loadTestRunId, global::System.Int32 pageDetailId, global::System.Int32 testDetailId, global::System.DateTime timeStamp, global::System.Int32 pageId, global::System.Double responseTime, global::System.Double responseTimeGoal, global::System.Boolean goalExceeded)
        {
            LoadTestPageDetail loadTestPageDetail = new LoadTestPageDetail();
            loadTestPageDetail.LoadTestRunId = loadTestRunId;
            loadTestPageDetail.PageDetailId = pageDetailId;
            loadTestPageDetail.TestDetailId = testDetailId;
            loadTestPageDetail.TimeStamp = timeStamp;
            loadTestPageDetail.PageId = pageId;
            loadTestPageDetail.ResponseTime = responseTime;
            loadTestPageDetail.ResponseTimeGoal = responseTimeGoal;
            loadTestPageDetail.GoalExceeded = goalExceeded;
            return loadTestPageDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageDetailId
        {
            get
            {
                return _PageDetailId;
            }
            set
            {
                if (_PageDetailId != value)
                {
                    OnPageDetailIdChanging(value);
                    ReportPropertyChanging("PageDetailId");
                    _PageDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PageDetailId");
                    OnPageDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _PageDetailId;
        partial void OnPageDetailIdChanging(global::System.Int32 value);
        partial void OnPageDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestDetailId
        {
            get
            {
                return _TestDetailId;
            }
            set
            {
                OnTestDetailIdChanging(value);
                ReportPropertyChanging("TestDetailId");
                _TestDetailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestDetailId");
                OnTestDetailIdChanged();
            }
        }
        private global::System.Int32 _TestDetailId;
        partial void OnTestDetailIdChanging(global::System.Int32 value);
        partial void OnTestDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageId
        {
            get
            {
                return _PageId;
            }
            set
            {
                OnPageIdChanging(value);
                ReportPropertyChanging("PageId");
                _PageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PageId");
                OnPageIdChanged();
            }
        }
        private global::System.Int32 _PageId;
        partial void OnPageIdChanging(global::System.Int32 value);
        partial void OnPageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ResponseTime
        {
            get
            {
                return _ResponseTime;
            }
            set
            {
                OnResponseTimeChanging(value);
                ReportPropertyChanging("ResponseTime");
                _ResponseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseTime");
                OnResponseTimeChanged();
            }
        }
        private global::System.Double _ResponseTime;
        partial void OnResponseTimeChanging(global::System.Double value);
        partial void OnResponseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ResponseTimeGoal
        {
            get
            {
                return _ResponseTimeGoal;
            }
            set
            {
                OnResponseTimeGoalChanging(value);
                ReportPropertyChanging("ResponseTimeGoal");
                _ResponseTimeGoal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseTimeGoal");
                OnResponseTimeGoalChanged();
            }
        }
        private global::System.Double _ResponseTimeGoal;
        partial void OnResponseTimeGoalChanging(global::System.Double value);
        partial void OnResponseTimeGoalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean GoalExceeded
        {
            get
            {
                return _GoalExceeded;
            }
            set
            {
                OnGoalExceededChanging(value);
                ReportPropertyChanging("GoalExceeded");
                _GoalExceeded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GoalExceeded");
                OnGoalExceededChanged();
            }
        }
        private global::System.Boolean _GoalExceeded;
        partial void OnGoalExceededChanging(global::System.Boolean value);
        partial void OnGoalExceededChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Outcome
        {
            get
            {
                return _Outcome;
            }
            set
            {
                OnOutcomeChanging(value);
                ReportPropertyChanging("Outcome");
                _Outcome = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Outcome");
                OnOutcomeChanged();
            }
        }
        private Nullable<global::System.Byte> _Outcome;
        partial void OnOutcomeChanging(Nullable<global::System.Byte> value);
        partial void OnOutcomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InMeasurementInterval
        {
            get
            {
                return _InMeasurementInterval;
            }
            set
            {
                OnInMeasurementIntervalChanging(value);
                ReportPropertyChanging("InMeasurementInterval");
                _InMeasurementInterval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InMeasurementInterval");
                OnInMeasurementIntervalChanged();
            }
        }
        private Nullable<global::System.Boolean> _InMeasurementInterval;
        partial void OnInMeasurementIntervalChanging(Nullable<global::System.Boolean> value);
        partial void OnInMeasurementIntervalChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestPageResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestPageResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestPageResult object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="requestUri">Initial value of the RequestUri property.</param>
        /// <param name="pageCount">Initial value of the PageCount property.</param>
        /// <param name="minimum">Initial value of the Minimum property.</param>
        /// <param name="average">Initial value of the Average property.</param>
        /// <param name="maximum">Initial value of the Maximum property.</param>
        public static LoadTestPageResult CreateLoadTestPageResult(global::System.Int32 loadTestRunId, global::System.String scenarioName, global::System.String testCaseName, global::System.String requestUri, global::System.Int32 pageCount, global::System.Double minimum, global::System.Double average, global::System.Double maximum)
        {
            LoadTestPageResult loadTestPageResult = new LoadTestPageResult();
            loadTestPageResult.LoadTestRunId = loadTestRunId;
            loadTestPageResult.ScenarioName = scenarioName;
            loadTestPageResult.TestCaseName = testCaseName;
            loadTestPageResult.RequestUri = requestUri;
            loadTestPageResult.PageCount = pageCount;
            loadTestPageResult.Minimum = minimum;
            loadTestPageResult.Average = average;
            loadTestPageResult.Maximum = maximum;
            return loadTestPageResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                if (_RequestUri != value)
                {
                    OnRequestUriChanging(value);
                    ReportPropertyChanging("RequestUri");
                    _RequestUri = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RequestUri");
                    OnRequestUriChanged();
                }
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageCount
        {
            get
            {
                return _PageCount;
            }
            set
            {
                if (_PageCount != value)
                {
                    OnPageCountChanging(value);
                    ReportPropertyChanging("PageCount");
                    _PageCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PageCount");
                    OnPageCountChanged();
                }
            }
        }
        private global::System.Int32 _PageCount;
        partial void OnPageCountChanging(global::System.Int32 value);
        partial void OnPageCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Minimum
        {
            get
            {
                return _Minimum;
            }
            set
            {
                if (_Minimum != value)
                {
                    OnMinimumChanging(value);
                    ReportPropertyChanging("Minimum");
                    _Minimum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Minimum");
                    OnMinimumChanged();
                }
            }
        }
        private global::System.Double _Minimum;
        partial void OnMinimumChanging(global::System.Double value);
        partial void OnMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Average
        {
            get
            {
                return _Average;
            }
            set
            {
                if (_Average != value)
                {
                    OnAverageChanging(value);
                    ReportPropertyChanging("Average");
                    _Average = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Average");
                    OnAverageChanged();
                }
            }
        }
        private global::System.Double _Average;
        partial void OnAverageChanging(global::System.Double value);
        partial void OnAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile90
        {
            get
            {
                return _Percentile90;
            }
            set
            {
                OnPercentile90Changing(value);
                ReportPropertyChanging("Percentile90");
                _Percentile90 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile90");
                OnPercentile90Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile90;
        partial void OnPercentile90Changing(Nullable<global::System.Double> value);
        partial void OnPercentile90Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile95
        {
            get
            {
                return _Percentile95;
            }
            set
            {
                OnPercentile95Changing(value);
                ReportPropertyChanging("Percentile95");
                _Percentile95 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile95");
                OnPercentile95Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile95;
        partial void OnPercentile95Changing(Nullable<global::System.Double> value);
        partial void OnPercentile95Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Maximum
        {
            get
            {
                return _Maximum;
            }
            set
            {
                if (_Maximum != value)
                {
                    OnMaximumChanging(value);
                    ReportPropertyChanging("Maximum");
                    _Maximum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Maximum");
                    OnMaximumChanged();
                }
            }
        }
        private global::System.Double _Maximum;
        partial void OnMaximumChanging(global::System.Double value);
        partial void OnMaximumChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestPageResultsByNetwork")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestPageResultsByNetwork : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestPageResultsByNetwork object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="requestUri">Initial value of the RequestUri property.</param>
        /// <param name="networkName">Initial value of the NetworkName property.</param>
        /// <param name="pageCount">Initial value of the PageCount property.</param>
        /// <param name="minimum">Initial value of the Minimum property.</param>
        /// <param name="average">Initial value of the Average property.</param>
        /// <param name="maximum">Initial value of the Maximum property.</param>
        public static LoadTestPageResultsByNetwork CreateLoadTestPageResultsByNetwork(global::System.Int32 loadTestRunId, global::System.String scenarioName, global::System.String testCaseName, global::System.String requestUri, global::System.String networkName, global::System.Int32 pageCount, global::System.Double minimum, global::System.Double average, global::System.Double maximum)
        {
            LoadTestPageResultsByNetwork loadTestPageResultsByNetwork = new LoadTestPageResultsByNetwork();
            loadTestPageResultsByNetwork.LoadTestRunId = loadTestRunId;
            loadTestPageResultsByNetwork.ScenarioName = scenarioName;
            loadTestPageResultsByNetwork.TestCaseName = testCaseName;
            loadTestPageResultsByNetwork.RequestUri = requestUri;
            loadTestPageResultsByNetwork.NetworkName = networkName;
            loadTestPageResultsByNetwork.PageCount = pageCount;
            loadTestPageResultsByNetwork.Minimum = minimum;
            loadTestPageResultsByNetwork.Average = average;
            loadTestPageResultsByNetwork.Maximum = maximum;
            return loadTestPageResultsByNetwork;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                if (_RequestUri != value)
                {
                    OnRequestUriChanging(value);
                    ReportPropertyChanging("RequestUri");
                    _RequestUri = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RequestUri");
                    OnRequestUriChanged();
                }
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NetworkName
        {
            get
            {
                return _NetworkName;
            }
            set
            {
                if (_NetworkName != value)
                {
                    OnNetworkNameChanging(value);
                    ReportPropertyChanging("NetworkName");
                    _NetworkName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NetworkName");
                    OnNetworkNameChanged();
                }
            }
        }
        private global::System.String _NetworkName;
        partial void OnNetworkNameChanging(global::System.String value);
        partial void OnNetworkNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageCount
        {
            get
            {
                return _PageCount;
            }
            set
            {
                if (_PageCount != value)
                {
                    OnPageCountChanging(value);
                    ReportPropertyChanging("PageCount");
                    _PageCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PageCount");
                    OnPageCountChanged();
                }
            }
        }
        private global::System.Int32 _PageCount;
        partial void OnPageCountChanging(global::System.Int32 value);
        partial void OnPageCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Minimum
        {
            get
            {
                return _Minimum;
            }
            set
            {
                if (_Minimum != value)
                {
                    OnMinimumChanging(value);
                    ReportPropertyChanging("Minimum");
                    _Minimum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Minimum");
                    OnMinimumChanged();
                }
            }
        }
        private global::System.Double _Minimum;
        partial void OnMinimumChanging(global::System.Double value);
        partial void OnMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Average
        {
            get
            {
                return _Average;
            }
            set
            {
                if (_Average != value)
                {
                    OnAverageChanging(value);
                    ReportPropertyChanging("Average");
                    _Average = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Average");
                    OnAverageChanged();
                }
            }
        }
        private global::System.Double _Average;
        partial void OnAverageChanging(global::System.Double value);
        partial void OnAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile90
        {
            get
            {
                return _Percentile90;
            }
            set
            {
                OnPercentile90Changing(value);
                ReportPropertyChanging("Percentile90");
                _Percentile90 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile90");
                OnPercentile90Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile90;
        partial void OnPercentile90Changing(Nullable<global::System.Double> value);
        partial void OnPercentile90Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile95
        {
            get
            {
                return _Percentile95;
            }
            set
            {
                OnPercentile95Changing(value);
                ReportPropertyChanging("Percentile95");
                _Percentile95 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile95");
                OnPercentile95Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile95;
        partial void OnPercentile95Changing(Nullable<global::System.Double> value);
        partial void OnPercentile95Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Maximum
        {
            get
            {
                return _Maximum;
            }
            set
            {
                if (_Maximum != value)
                {
                    OnMaximumChanging(value);
                    ReportPropertyChanging("Maximum");
                    _Maximum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Maximum");
                    OnMaximumChanged();
                }
            }
        }
        private global::System.Double _Maximum;
        partial void OnMaximumChanging(global::System.Double value);
        partial void OnMaximumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Goal
        {
            get
            {
                return _Goal;
            }
            set
            {
                OnGoalChanging(value);
                ReportPropertyChanging("Goal");
                _Goal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Goal");
                OnGoalChanged();
            }
        }
        private Nullable<global::System.Double> _Goal;
        partial void OnGoalChanging(Nullable<global::System.Double> value);
        partial void OnGoalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PagesMeetingGoal
        {
            get
            {
                return _PagesMeetingGoal;
            }
            set
            {
                OnPagesMeetingGoalChanging(value);
                ReportPropertyChanging("PagesMeetingGoal");
                _PagesMeetingGoal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PagesMeetingGoal");
                OnPagesMeetingGoalChanged();
            }
        }
        private Nullable<global::System.Int32> _PagesMeetingGoal;
        partial void OnPagesMeetingGoalChanging(Nullable<global::System.Int32> value);
        partial void OnPagesMeetingGoalChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestPageResultsByNetwork2")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestPageResultsByNetwork2 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestPageResultsByNetwork2 object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="requestUri">Initial value of the RequestUri property.</param>
        /// <param name="networkName">Initial value of the NetworkName property.</param>
        /// <param name="pageCount">Initial value of the PageCount property.</param>
        /// <param name="minimum">Initial value of the Minimum property.</param>
        /// <param name="average">Initial value of the Average property.</param>
        /// <param name="maximum">Initial value of the Maximum property.</param>
        public static LoadTestPageResultsByNetwork2 CreateLoadTestPageResultsByNetwork2(global::System.Int32 loadTestRunId, global::System.String scenarioName, global::System.String testCaseName, global::System.String requestUri, global::System.String networkName, global::System.Int32 pageCount, global::System.Double minimum, global::System.Double average, global::System.Double maximum)
        {
            LoadTestPageResultsByNetwork2 loadTestPageResultsByNetwork2 = new LoadTestPageResultsByNetwork2();
            loadTestPageResultsByNetwork2.LoadTestRunId = loadTestRunId;
            loadTestPageResultsByNetwork2.ScenarioName = scenarioName;
            loadTestPageResultsByNetwork2.TestCaseName = testCaseName;
            loadTestPageResultsByNetwork2.RequestUri = requestUri;
            loadTestPageResultsByNetwork2.NetworkName = networkName;
            loadTestPageResultsByNetwork2.PageCount = pageCount;
            loadTestPageResultsByNetwork2.Minimum = minimum;
            loadTestPageResultsByNetwork2.Average = average;
            loadTestPageResultsByNetwork2.Maximum = maximum;
            return loadTestPageResultsByNetwork2;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                if (_RequestUri != value)
                {
                    OnRequestUriChanging(value);
                    ReportPropertyChanging("RequestUri");
                    _RequestUri = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RequestUri");
                    OnRequestUriChanged();
                }
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NetworkName
        {
            get
            {
                return _NetworkName;
            }
            set
            {
                if (_NetworkName != value)
                {
                    OnNetworkNameChanging(value);
                    ReportPropertyChanging("NetworkName");
                    _NetworkName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NetworkName");
                    OnNetworkNameChanged();
                }
            }
        }
        private global::System.String _NetworkName;
        partial void OnNetworkNameChanging(global::System.String value);
        partial void OnNetworkNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageCount
        {
            get
            {
                return _PageCount;
            }
            set
            {
                if (_PageCount != value)
                {
                    OnPageCountChanging(value);
                    ReportPropertyChanging("PageCount");
                    _PageCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PageCount");
                    OnPageCountChanged();
                }
            }
        }
        private global::System.Int32 _PageCount;
        partial void OnPageCountChanging(global::System.Int32 value);
        partial void OnPageCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Minimum
        {
            get
            {
                return _Minimum;
            }
            set
            {
                if (_Minimum != value)
                {
                    OnMinimumChanging(value);
                    ReportPropertyChanging("Minimum");
                    _Minimum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Minimum");
                    OnMinimumChanged();
                }
            }
        }
        private global::System.Double _Minimum;
        partial void OnMinimumChanging(global::System.Double value);
        partial void OnMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Average
        {
            get
            {
                return _Average;
            }
            set
            {
                if (_Average != value)
                {
                    OnAverageChanging(value);
                    ReportPropertyChanging("Average");
                    _Average = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Average");
                    OnAverageChanged();
                }
            }
        }
        private global::System.Double _Average;
        partial void OnAverageChanging(global::System.Double value);
        partial void OnAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Median
        {
            get
            {
                return _Median;
            }
            set
            {
                OnMedianChanging(value);
                ReportPropertyChanging("Median");
                _Median = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Median");
                OnMedianChanged();
            }
        }
        private Nullable<global::System.Double> _Median;
        partial void OnMedianChanging(Nullable<global::System.Double> value);
        partial void OnMedianChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile90
        {
            get
            {
                return _Percentile90;
            }
            set
            {
                OnPercentile90Changing(value);
                ReportPropertyChanging("Percentile90");
                _Percentile90 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile90");
                OnPercentile90Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile90;
        partial void OnPercentile90Changing(Nullable<global::System.Double> value);
        partial void OnPercentile90Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile95
        {
            get
            {
                return _Percentile95;
            }
            set
            {
                OnPercentile95Changing(value);
                ReportPropertyChanging("Percentile95");
                _Percentile95 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile95");
                OnPercentile95Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile95;
        partial void OnPercentile95Changing(Nullable<global::System.Double> value);
        partial void OnPercentile95Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile99
        {
            get
            {
                return _Percentile99;
            }
            set
            {
                OnPercentile99Changing(value);
                ReportPropertyChanging("Percentile99");
                _Percentile99 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile99");
                OnPercentile99Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile99;
        partial void OnPercentile99Changing(Nullable<global::System.Double> value);
        partial void OnPercentile99Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Maximum
        {
            get
            {
                return _Maximum;
            }
            set
            {
                if (_Maximum != value)
                {
                    OnMaximumChanging(value);
                    ReportPropertyChanging("Maximum");
                    _Maximum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Maximum");
                    OnMaximumChanged();
                }
            }
        }
        private global::System.Double _Maximum;
        partial void OnMaximumChanging(global::System.Double value);
        partial void OnMaximumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> StandardDeviation
        {
            get
            {
                return _StandardDeviation;
            }
            set
            {
                OnStandardDeviationChanging(value);
                ReportPropertyChanging("StandardDeviation");
                _StandardDeviation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardDeviation");
                OnStandardDeviationChanged();
            }
        }
        private Nullable<global::System.Double> _StandardDeviation;
        partial void OnStandardDeviationChanging(Nullable<global::System.Double> value);
        partial void OnStandardDeviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Goal
        {
            get
            {
                return _Goal;
            }
            set
            {
                OnGoalChanging(value);
                ReportPropertyChanging("Goal");
                _Goal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Goal");
                OnGoalChanged();
            }
        }
        private Nullable<global::System.Double> _Goal;
        partial void OnGoalChanging(Nullable<global::System.Double> value);
        partial void OnGoalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PagesMeetingGoal
        {
            get
            {
                return _PagesMeetingGoal;
            }
            set
            {
                OnPagesMeetingGoalChanging(value);
                ReportPropertyChanging("PagesMeetingGoal");
                _PagesMeetingGoal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PagesMeetingGoal");
                OnPagesMeetingGoalChanged();
            }
        }
        private Nullable<global::System.Int32> _PagesMeetingGoal;
        partial void OnPagesMeetingGoalChanging(Nullable<global::System.Int32> value);
        partial void OnPagesMeetingGoalChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestPageSample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestPageSample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestPageSample object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="requestUri">Initial value of the RequestUri property.</param>
        /// <param name="intervalStartTime">Initial value of the IntervalStartTime property.</param>
        /// <param name="intervalEndTime">Initial value of the IntervalEndTime property.</param>
        public static LoadTestPageSample CreateLoadTestPageSample(global::System.Int32 loadTestRunId, global::System.String counterName, global::System.String scenarioName, global::System.String testCaseName, global::System.String requestUri, global::System.DateTime intervalStartTime, global::System.DateTime intervalEndTime)
        {
            LoadTestPageSample loadTestPageSample = new LoadTestPageSample();
            loadTestPageSample.LoadTestRunId = loadTestRunId;
            loadTestPageSample.CounterName = counterName;
            loadTestPageSample.ScenarioName = scenarioName;
            loadTestPageSample.TestCaseName = testCaseName;
            loadTestPageSample.RequestUri = requestUri;
            loadTestPageSample.IntervalStartTime = intervalStartTime;
            loadTestPageSample.IntervalEndTime = intervalEndTime;
            return loadTestPageSample;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                if (_CounterName != value)
                {
                    OnCounterNameChanging(value);
                    ReportPropertyChanging("CounterName");
                    _CounterName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CounterName");
                    OnCounterNameChanged();
                }
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                if (_RequestUri != value)
                {
                    OnRequestUriChanging(value);
                    ReportPropertyChanging("RequestUri");
                    _RequestUri = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RequestUri");
                    OnRequestUriChanged();
                }
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalStartTime
        {
            get
            {
                return _IntervalStartTime;
            }
            set
            {
                if (_IntervalStartTime != value)
                {
                    OnIntervalStartTimeChanging(value);
                    ReportPropertyChanging("IntervalStartTime");
                    _IntervalStartTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntervalStartTime");
                    OnIntervalStartTimeChanged();
                }
            }
        }
        private global::System.DateTime _IntervalStartTime;
        partial void OnIntervalStartTimeChanging(global::System.DateTime value);
        partial void OnIntervalStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalEndTime
        {
            get
            {
                return _IntervalEndTime;
            }
            set
            {
                if (_IntervalEndTime != value)
                {
                    OnIntervalEndTimeChanging(value);
                    ReportPropertyChanging("IntervalEndTime");
                    _IntervalEndTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntervalEndTime");
                    OnIntervalEndTimeChanged();
                }
            }
        }
        private global::System.DateTime _IntervalEndTime;
        partial void OnIntervalEndTimeChanging(global::System.DateTime value);
        partial void OnIntervalEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ComputedValue
        {
            get
            {
                return _ComputedValue;
            }
            set
            {
                OnComputedValueChanging(value);
                ReportPropertyChanging("ComputedValue");
                _ComputedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputedValue");
                OnComputedValueChanged();
            }
        }
        private Nullable<global::System.Single> _ComputedValue;
        partial void OnComputedValueChanging(Nullable<global::System.Single> value);
        partial void OnComputedValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestPageSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestPageSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestPageSummary object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="requestUri">Initial value of the RequestUri property.</param>
        /// <param name="responseTimeGoal">Initial value of the ResponseTimeGoal property.</param>
        public static LoadTestPageSummary CreateLoadTestPageSummary(global::System.Int32 loadTestRunId, global::System.String counterName, global::System.String scenarioName, global::System.String testCaseName, global::System.String requestUri, global::System.Double responseTimeGoal)
        {
            LoadTestPageSummary loadTestPageSummary = new LoadTestPageSummary();
            loadTestPageSummary.LoadTestRunId = loadTestRunId;
            loadTestPageSummary.CounterName = counterName;
            loadTestPageSummary.ScenarioName = scenarioName;
            loadTestPageSummary.TestCaseName = testCaseName;
            loadTestPageSummary.RequestUri = requestUri;
            loadTestPageSummary.ResponseTimeGoal = responseTimeGoal;
            return loadTestPageSummary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoadTestName
        {
            get
            {
                return _LoadTestName;
            }
            set
            {
                OnLoadTestNameChanging(value);
                ReportPropertyChanging("LoadTestName");
                _LoadTestName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoadTestName");
                OnLoadTestNameChanged();
            }
        }
        private global::System.String _LoadTestName;
        partial void OnLoadTestNameChanging(global::System.String value);
        partial void OnLoadTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                if (_CounterName != value)
                {
                    OnCounterNameChanging(value);
                    ReportPropertyChanging("CounterName");
                    _CounterName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CounterName");
                    OnCounterNameChanged();
                }
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                if (_RequestUri != value)
                {
                    OnRequestUriChanging(value);
                    ReportPropertyChanging("RequestUri");
                    _RequestUri = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RequestUri");
                    OnRequestUriChanged();
                }
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CumulativeValue
        {
            get
            {
                return _CumulativeValue;
            }
            set
            {
                OnCumulativeValueChanging(value);
                ReportPropertyChanging("CumulativeValue");
                _CumulativeValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CumulativeValue");
                OnCumulativeValueChanged();
            }
        }
        private Nullable<global::System.Single> _CumulativeValue;
        partial void OnCumulativeValueChanging(Nullable<global::System.Single> value);
        partial void OnCumulativeValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ResponseTimeGoal
        {
            get
            {
                return _ResponseTimeGoal;
            }
            set
            {
                if (_ResponseTimeGoal != value)
                {
                    OnResponseTimeGoalChanging(value);
                    ReportPropertyChanging("ResponseTimeGoal");
                    _ResponseTimeGoal = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResponseTimeGoal");
                    OnResponseTimeGoalChanged();
                }
            }
        }
        private global::System.Double _ResponseTimeGoal;
        partial void OnResponseTimeGoalChanging(global::System.Double value);
        partial void OnResponseTimeGoalChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestPageSummaryByNetwork")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestPageSummaryByNetwork : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestPageSummaryByNetwork object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="pageId">Initial value of the PageId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="pageCount">Initial value of the PageCount property.</param>
        /// <param name="average">Initial value of the Average property.</param>
        /// <param name="minimum">Initial value of the Minimum property.</param>
        /// <param name="maximum">Initial value of the Maximum property.</param>
        public static LoadTestPageSummaryByNetwork CreateLoadTestPageSummaryByNetwork(global::System.Int32 loadTestRunId, global::System.Int32 pageId, global::System.Int32 networkId, global::System.Int32 pageCount, global::System.Double average, global::System.Double minimum, global::System.Double maximum)
        {
            LoadTestPageSummaryByNetwork loadTestPageSummaryByNetwork = new LoadTestPageSummaryByNetwork();
            loadTestPageSummaryByNetwork.LoadTestRunId = loadTestRunId;
            loadTestPageSummaryByNetwork.PageId = pageId;
            loadTestPageSummaryByNetwork.NetworkId = networkId;
            loadTestPageSummaryByNetwork.PageCount = pageCount;
            loadTestPageSummaryByNetwork.Average = average;
            loadTestPageSummaryByNetwork.Minimum = minimum;
            loadTestPageSummaryByNetwork.Maximum = maximum;
            return loadTestPageSummaryByNetwork;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageId
        {
            get
            {
                return _PageId;
            }
            set
            {
                if (_PageId != value)
                {
                    OnPageIdChanging(value);
                    ReportPropertyChanging("PageId");
                    _PageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PageId");
                    OnPageIdChanged();
                }
            }
        }
        private global::System.Int32 _PageId;
        partial void OnPageIdChanging(global::System.Int32 value);
        partial void OnPageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                if (_NetworkId != value)
                {
                    OnNetworkIdChanging(value);
                    ReportPropertyChanging("NetworkId");
                    _NetworkId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NetworkId");
                    OnNetworkIdChanged();
                }
            }
        }
        private global::System.Int32 _NetworkId;
        partial void OnNetworkIdChanging(global::System.Int32 value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageCount
        {
            get
            {
                return _PageCount;
            }
            set
            {
                OnPageCountChanging(value);
                ReportPropertyChanging("PageCount");
                _PageCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PageCount");
                OnPageCountChanged();
            }
        }
        private global::System.Int32 _PageCount;
        partial void OnPageCountChanging(global::System.Int32 value);
        partial void OnPageCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Average
        {
            get
            {
                return _Average;
            }
            set
            {
                OnAverageChanging(value);
                ReportPropertyChanging("Average");
                _Average = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Average");
                OnAverageChanged();
            }
        }
        private global::System.Double _Average;
        partial void OnAverageChanging(global::System.Double value);
        partial void OnAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Minimum
        {
            get
            {
                return _Minimum;
            }
            set
            {
                OnMinimumChanging(value);
                ReportPropertyChanging("Minimum");
                _Minimum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Minimum");
                OnMinimumChanged();
            }
        }
        private global::System.Double _Minimum;
        partial void OnMinimumChanging(global::System.Double value);
        partial void OnMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Maximum
        {
            get
            {
                return _Maximum;
            }
            set
            {
                OnMaximumChanging(value);
                ReportPropertyChanging("Maximum");
                _Maximum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Maximum");
                OnMaximumChanged();
            }
        }
        private global::System.Double _Maximum;
        partial void OnMaximumChanging(global::System.Double value);
        partial void OnMaximumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile90
        {
            get
            {
                return _Percentile90;
            }
            set
            {
                OnPercentile90Changing(value);
                ReportPropertyChanging("Percentile90");
                _Percentile90 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile90");
                OnPercentile90Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile90;
        partial void OnPercentile90Changing(Nullable<global::System.Double> value);
        partial void OnPercentile90Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile95
        {
            get
            {
                return _Percentile95;
            }
            set
            {
                OnPercentile95Changing(value);
                ReportPropertyChanging("Percentile95");
                _Percentile95 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile95");
                OnPercentile95Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile95;
        partial void OnPercentile95Changing(Nullable<global::System.Double> value);
        partial void OnPercentile95Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile99
        {
            get
            {
                return _Percentile99;
            }
            set
            {
                OnPercentile99Changing(value);
                ReportPropertyChanging("Percentile99");
                _Percentile99 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile99");
                OnPercentile99Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile99;
        partial void OnPercentile99Changing(Nullable<global::System.Double> value);
        partial void OnPercentile99Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Goal
        {
            get
            {
                return _Goal;
            }
            set
            {
                OnGoalChanging(value);
                ReportPropertyChanging("Goal");
                _Goal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Goal");
                OnGoalChanged();
            }
        }
        private Nullable<global::System.Double> _Goal;
        partial void OnGoalChanging(Nullable<global::System.Double> value);
        partial void OnGoalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PagesMeetingGoal
        {
            get
            {
                return _PagesMeetingGoal;
            }
            set
            {
                OnPagesMeetingGoalChanging(value);
                ReportPropertyChanging("PagesMeetingGoal");
                _PagesMeetingGoal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PagesMeetingGoal");
                OnPagesMeetingGoalChanged();
            }
        }
        private Nullable<global::System.Int32> _PagesMeetingGoal;
        partial void OnPagesMeetingGoalChanging(Nullable<global::System.Int32> value);
        partial void OnPagesMeetingGoalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Median
        {
            get
            {
                return _Median;
            }
            set
            {
                OnMedianChanging(value);
                ReportPropertyChanging("Median");
                _Median = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Median");
                OnMedianChanged();
            }
        }
        private Nullable<global::System.Double> _Median;
        partial void OnMedianChanging(Nullable<global::System.Double> value);
        partial void OnMedianChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> StandardDeviation
        {
            get
            {
                return _StandardDeviation;
            }
            set
            {
                OnStandardDeviationChanging(value);
                ReportPropertyChanging("StandardDeviation");
                _StandardDeviation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardDeviation");
                OnStandardDeviationChanged();
            }
        }
        private Nullable<global::System.Double> _StandardDeviation;
        partial void OnStandardDeviationChanging(Nullable<global::System.Double> value);
        partial void OnStandardDeviationChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestPageSummaryData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestPageSummaryData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestPageSummaryData object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="pageId">Initial value of the PageId property.</param>
        /// <param name="pageCount">Initial value of the PageCount property.</param>
        /// <param name="average">Initial value of the Average property.</param>
        /// <param name="minimum">Initial value of the Minimum property.</param>
        /// <param name="maximum">Initial value of the Maximum property.</param>
        public static LoadTestPageSummaryData CreateLoadTestPageSummaryData(global::System.Int32 loadTestRunId, global::System.Int32 pageId, global::System.Int32 pageCount, global::System.Double average, global::System.Double minimum, global::System.Double maximum)
        {
            LoadTestPageSummaryData loadTestPageSummaryData = new LoadTestPageSummaryData();
            loadTestPageSummaryData.LoadTestRunId = loadTestRunId;
            loadTestPageSummaryData.PageId = pageId;
            loadTestPageSummaryData.PageCount = pageCount;
            loadTestPageSummaryData.Average = average;
            loadTestPageSummaryData.Minimum = minimum;
            loadTestPageSummaryData.Maximum = maximum;
            return loadTestPageSummaryData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageId
        {
            get
            {
                return _PageId;
            }
            set
            {
                if (_PageId != value)
                {
                    OnPageIdChanging(value);
                    ReportPropertyChanging("PageId");
                    _PageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PageId");
                    OnPageIdChanged();
                }
            }
        }
        private global::System.Int32 _PageId;
        partial void OnPageIdChanging(global::System.Int32 value);
        partial void OnPageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageCount
        {
            get
            {
                return _PageCount;
            }
            set
            {
                OnPageCountChanging(value);
                ReportPropertyChanging("PageCount");
                _PageCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PageCount");
                OnPageCountChanged();
            }
        }
        private global::System.Int32 _PageCount;
        partial void OnPageCountChanging(global::System.Int32 value);
        partial void OnPageCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Average
        {
            get
            {
                return _Average;
            }
            set
            {
                OnAverageChanging(value);
                ReportPropertyChanging("Average");
                _Average = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Average");
                OnAverageChanged();
            }
        }
        private global::System.Double _Average;
        partial void OnAverageChanging(global::System.Double value);
        partial void OnAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Minimum
        {
            get
            {
                return _Minimum;
            }
            set
            {
                OnMinimumChanging(value);
                ReportPropertyChanging("Minimum");
                _Minimum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Minimum");
                OnMinimumChanged();
            }
        }
        private global::System.Double _Minimum;
        partial void OnMinimumChanging(global::System.Double value);
        partial void OnMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Maximum
        {
            get
            {
                return _Maximum;
            }
            set
            {
                OnMaximumChanging(value);
                ReportPropertyChanging("Maximum");
                _Maximum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Maximum");
                OnMaximumChanged();
            }
        }
        private global::System.Double _Maximum;
        partial void OnMaximumChanging(global::System.Double value);
        partial void OnMaximumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile90
        {
            get
            {
                return _Percentile90;
            }
            set
            {
                OnPercentile90Changing(value);
                ReportPropertyChanging("Percentile90");
                _Percentile90 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile90");
                OnPercentile90Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile90;
        partial void OnPercentile90Changing(Nullable<global::System.Double> value);
        partial void OnPercentile90Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile95
        {
            get
            {
                return _Percentile95;
            }
            set
            {
                OnPercentile95Changing(value);
                ReportPropertyChanging("Percentile95");
                _Percentile95 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile95");
                OnPercentile95Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile95;
        partial void OnPercentile95Changing(Nullable<global::System.Double> value);
        partial void OnPercentile95Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile99
        {
            get
            {
                return _Percentile99;
            }
            set
            {
                OnPercentile99Changing(value);
                ReportPropertyChanging("Percentile99");
                _Percentile99 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile99");
                OnPercentile99Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile99;
        partial void OnPercentile99Changing(Nullable<global::System.Double> value);
        partial void OnPercentile99Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Median
        {
            get
            {
                return _Median;
            }
            set
            {
                OnMedianChanging(value);
                ReportPropertyChanging("Median");
                _Median = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Median");
                OnMedianChanged();
            }
        }
        private Nullable<global::System.Double> _Median;
        partial void OnMedianChanging(Nullable<global::System.Double> value);
        partial void OnMedianChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> StandardDeviation
        {
            get
            {
                return _StandardDeviation;
            }
            set
            {
                OnStandardDeviationChanging(value);
                ReportPropertyChanging("StandardDeviation");
                _StandardDeviation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardDeviation");
                OnStandardDeviationChanged();
            }
        }
        private Nullable<global::System.Double> _StandardDeviation;
        partial void OnStandardDeviationChanging(Nullable<global::System.Double> value);
        partial void OnStandardDeviationChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestPerformanceCounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestPerformanceCounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestPerformanceCounter object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterCategoryId">Initial value of the CounterCategoryId property.</param>
        /// <param name="counterId">Initial value of the CounterId property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        public static LoadTestPerformanceCounter CreateLoadTestPerformanceCounter(global::System.Int32 loadTestRunId, global::System.Int32 counterCategoryId, global::System.Int32 counterId, global::System.String counterName)
        {
            LoadTestPerformanceCounter loadTestPerformanceCounter = new LoadTestPerformanceCounter();
            loadTestPerformanceCounter.LoadTestRunId = loadTestRunId;
            loadTestPerformanceCounter.CounterCategoryId = counterCategoryId;
            loadTestPerformanceCounter.CounterId = counterId;
            loadTestPerformanceCounter.CounterName = counterName;
            return loadTestPerformanceCounter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CounterCategoryId
        {
            get
            {
                return _CounterCategoryId;
            }
            set
            {
                OnCounterCategoryIdChanging(value);
                ReportPropertyChanging("CounterCategoryId");
                _CounterCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterCategoryId");
                OnCounterCategoryIdChanged();
            }
        }
        private global::System.Int32 _CounterCategoryId;
        partial void OnCounterCategoryIdChanging(global::System.Int32 value);
        partial void OnCounterCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CounterId
        {
            get
            {
                return _CounterId;
            }
            set
            {
                if (_CounterId != value)
                {
                    OnCounterIdChanging(value);
                    ReportPropertyChanging("CounterId");
                    _CounterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CounterId");
                    OnCounterIdChanged();
                }
            }
        }
        private global::System.Int32 _CounterId;
        partial void OnCounterIdChanging(global::System.Int32 value);
        partial void OnCounterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                OnCounterNameChanging(value);
                ReportPropertyChanging("CounterName");
                _CounterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CounterName");
                OnCounterNameChanged();
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HigherIsBetter
        {
            get
            {
                return _HigherIsBetter;
            }
            set
            {
                OnHigherIsBetterChanging(value);
                ReportPropertyChanging("HigherIsBetter");
                _HigherIsBetter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HigherIsBetter");
                OnHigherIsBetterChanged();
            }
        }
        private Nullable<global::System.Boolean> _HigherIsBetter;
        partial void OnHigherIsBetterChanging(Nullable<global::System.Boolean> value);
        partial void OnHigherIsBetterChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestP__LoadT__75A278F5", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__75A278F5", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__75A278F5", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__75A278F5", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__75A278F5", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestPerformanceCounterCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestPerformanceCounterCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestPerformanceCounterCategory object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterCategoryId">Initial value of the CounterCategoryId property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        /// <param name="startTimeStamp100nSec">Initial value of the StartTimeStamp100nSec property.</param>
        public static LoadTestPerformanceCounterCategory CreateLoadTestPerformanceCounterCategory(global::System.Int32 loadTestRunId, global::System.Int32 counterCategoryId, global::System.String categoryName, global::System.String machineName, global::System.Int64 startTimeStamp100nSec)
        {
            LoadTestPerformanceCounterCategory loadTestPerformanceCounterCategory = new LoadTestPerformanceCounterCategory();
            loadTestPerformanceCounterCategory.LoadTestRunId = loadTestRunId;
            loadTestPerformanceCounterCategory.CounterCategoryId = counterCategoryId;
            loadTestPerformanceCounterCategory.CategoryName = categoryName;
            loadTestPerformanceCounterCategory.MachineName = machineName;
            loadTestPerformanceCounterCategory.StartTimeStamp100nSec = startTimeStamp100nSec;
            return loadTestPerformanceCounterCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CounterCategoryId
        {
            get
            {
                return _CounterCategoryId;
            }
            set
            {
                if (_CounterCategoryId != value)
                {
                    OnCounterCategoryIdChanging(value);
                    ReportPropertyChanging("CounterCategoryId");
                    _CounterCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CounterCategoryId");
                    OnCounterCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CounterCategoryId;
        partial void OnCounterCategoryIdChanging(global::System.Int32 value);
        partial void OnCounterCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 StartTimeStamp100nSec
        {
            get
            {
                return _StartTimeStamp100nSec;
            }
            set
            {
                OnStartTimeStamp100nSecChanging(value);
                ReportPropertyChanging("StartTimeStamp100nSec");
                _StartTimeStamp100nSec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTimeStamp100nSec");
                OnStartTimeStamp100nSecChanged();
            }
        }
        private global::System.Int64 _StartTimeStamp100nSec;
        partial void OnStartTimeStamp100nSecChanging(global::System.Int64 value);
        partial void OnStartTimeStamp100nSecChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestP__LoadT__76969D2E", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__76969D2E", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__76969D2E", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__76969D2E", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__76969D2E", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestPerformanceCounterInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestPerformanceCounterInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestPerformanceCounterInstance object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterId">Initial value of the CounterId property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="instanceName">Initial value of the InstanceName property.</param>
        public static LoadTestPerformanceCounterInstance CreateLoadTestPerformanceCounterInstance(global::System.Int32 loadTestRunId, global::System.Int32 counterId, global::System.Int32 instanceId, global::System.String instanceName)
        {
            LoadTestPerformanceCounterInstance loadTestPerformanceCounterInstance = new LoadTestPerformanceCounterInstance();
            loadTestPerformanceCounterInstance.LoadTestRunId = loadTestRunId;
            loadTestPerformanceCounterInstance.CounterId = counterId;
            loadTestPerformanceCounterInstance.InstanceId = instanceId;
            loadTestPerformanceCounterInstance.InstanceName = instanceName;
            return loadTestPerformanceCounterInstance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CounterId
        {
            get
            {
                return _CounterId;
            }
            set
            {
                OnCounterIdChanging(value);
                ReportPropertyChanging("CounterId");
                _CounterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterId");
                OnCounterIdChanged();
            }
        }
        private global::System.Int32 _CounterId;
        partial void OnCounterIdChanging(global::System.Int32 value);
        partial void OnCounterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                if (_InstanceId != value)
                {
                    OnInstanceIdChanging(value);
                    ReportPropertyChanging("InstanceId");
                    _InstanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstanceId");
                    OnInstanceIdChanged();
                }
            }
        }
        private global::System.Int32 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int32 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LoadTestItemId
        {
            get
            {
                return _LoadTestItemId;
            }
            set
            {
                OnLoadTestItemIdChanging(value);
                ReportPropertyChanging("LoadTestItemId");
                _LoadTestItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoadTestItemId");
                OnLoadTestItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LoadTestItemId;
        partial void OnLoadTestItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnLoadTestItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceName
        {
            get
            {
                return _InstanceName;
            }
            set
            {
                OnInstanceNameChanging(value);
                ReportPropertyChanging("InstanceName");
                _InstanceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstanceName");
                OnInstanceNameChanged();
            }
        }
        private global::System.String _InstanceName;
        partial void OnInstanceNameChanging(global::System.String value);
        partial void OnInstanceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CumulativeValue
        {
            get
            {
                return _CumulativeValue;
            }
            set
            {
                OnCumulativeValueChanging(value);
                ReportPropertyChanging("CumulativeValue");
                _CumulativeValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CumulativeValue");
                OnCumulativeValueChanged();
            }
        }
        private Nullable<global::System.Single> _CumulativeValue;
        partial void OnCumulativeValueChanging(Nullable<global::System.Single> value);
        partial void OnCumulativeValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> OverallThresholdRuleResult
        {
            get
            {
                return _OverallThresholdRuleResult;
            }
            set
            {
                OnOverallThresholdRuleResultChanging(value);
                ReportPropertyChanging("OverallThresholdRuleResult");
                _OverallThresholdRuleResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverallThresholdRuleResult");
                OnOverallThresholdRuleResultChanged();
            }
        }
        private Nullable<global::System.Byte> _OverallThresholdRuleResult;
        partial void OnOverallThresholdRuleResultChanging(Nullable<global::System.Byte> value);
        partial void OnOverallThresholdRuleResultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestP__LoadT__778AC167", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__778AC167", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__778AC167", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__778AC167", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__778AC167", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestPerformanceCounterSample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestPerformanceCounterSample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestPerformanceCounterSample object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="testRunIntervalId">Initial value of the TestRunIntervalId property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="rawValue">Initial value of the RawValue property.</param>
        /// <param name="baseValue">Initial value of the BaseValue property.</param>
        /// <param name="counterFrequency">Initial value of the CounterFrequency property.</param>
        /// <param name="systemFrequency">Initial value of the SystemFrequency property.</param>
        /// <param name="sampleTimeStamp">Initial value of the SampleTimeStamp property.</param>
        /// <param name="sampleTimeStamp100nSec">Initial value of the SampleTimeStamp100nSec property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        /// <param name="thresholdRuleResult">Initial value of the ThresholdRuleResult property.</param>
        public static LoadTestPerformanceCounterSample CreateLoadTestPerformanceCounterSample(global::System.Int32 loadTestRunId, global::System.Int32 testRunIntervalId, global::System.Int32 instanceId, global::System.Int64 rawValue, global::System.Int64 baseValue, global::System.Int64 counterFrequency, global::System.Int64 systemFrequency, global::System.Int64 sampleTimeStamp, global::System.Int64 sampleTimeStamp100nSec, global::System.Int32 counterType, global::System.Byte thresholdRuleResult)
        {
            LoadTestPerformanceCounterSample loadTestPerformanceCounterSample = new LoadTestPerformanceCounterSample();
            loadTestPerformanceCounterSample.LoadTestRunId = loadTestRunId;
            loadTestPerformanceCounterSample.TestRunIntervalId = testRunIntervalId;
            loadTestPerformanceCounterSample.InstanceId = instanceId;
            loadTestPerformanceCounterSample.RawValue = rawValue;
            loadTestPerformanceCounterSample.BaseValue = baseValue;
            loadTestPerformanceCounterSample.CounterFrequency = counterFrequency;
            loadTestPerformanceCounterSample.SystemFrequency = systemFrequency;
            loadTestPerformanceCounterSample.SampleTimeStamp = sampleTimeStamp;
            loadTestPerformanceCounterSample.SampleTimeStamp100nSec = sampleTimeStamp100nSec;
            loadTestPerformanceCounterSample.CounterType = counterType;
            loadTestPerformanceCounterSample.ThresholdRuleResult = thresholdRuleResult;
            return loadTestPerformanceCounterSample;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestRunIntervalId
        {
            get
            {
                return _TestRunIntervalId;
            }
            set
            {
                if (_TestRunIntervalId != value)
                {
                    OnTestRunIntervalIdChanging(value);
                    ReportPropertyChanging("TestRunIntervalId");
                    _TestRunIntervalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestRunIntervalId");
                    OnTestRunIntervalIdChanged();
                }
            }
        }
        private global::System.Int32 _TestRunIntervalId;
        partial void OnTestRunIntervalIdChanging(global::System.Int32 value);
        partial void OnTestRunIntervalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                if (_InstanceId != value)
                {
                    OnInstanceIdChanging(value);
                    ReportPropertyChanging("InstanceId");
                    _InstanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstanceId");
                    OnInstanceIdChanged();
                }
            }
        }
        private global::System.Int32 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int32 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ComputedValue
        {
            get
            {
                return _ComputedValue;
            }
            set
            {
                OnComputedValueChanging(value);
                ReportPropertyChanging("ComputedValue");
                _ComputedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputedValue");
                OnComputedValueChanged();
            }
        }
        private Nullable<global::System.Single> _ComputedValue;
        partial void OnComputedValueChanging(Nullable<global::System.Single> value);
        partial void OnComputedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RawValue
        {
            get
            {
                return _RawValue;
            }
            set
            {
                OnRawValueChanging(value);
                ReportPropertyChanging("RawValue");
                _RawValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RawValue");
                OnRawValueChanged();
            }
        }
        private global::System.Int64 _RawValue;
        partial void OnRawValueChanging(global::System.Int64 value);
        partial void OnRawValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BaseValue
        {
            get
            {
                return _BaseValue;
            }
            set
            {
                OnBaseValueChanging(value);
                ReportPropertyChanging("BaseValue");
                _BaseValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaseValue");
                OnBaseValueChanged();
            }
        }
        private global::System.Int64 _BaseValue;
        partial void OnBaseValueChanging(global::System.Int64 value);
        partial void OnBaseValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CounterFrequency
        {
            get
            {
                return _CounterFrequency;
            }
            set
            {
                OnCounterFrequencyChanging(value);
                ReportPropertyChanging("CounterFrequency");
                _CounterFrequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterFrequency");
                OnCounterFrequencyChanged();
            }
        }
        private global::System.Int64 _CounterFrequency;
        partial void OnCounterFrequencyChanging(global::System.Int64 value);
        partial void OnCounterFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SystemFrequency
        {
            get
            {
                return _SystemFrequency;
            }
            set
            {
                OnSystemFrequencyChanging(value);
                ReportPropertyChanging("SystemFrequency");
                _SystemFrequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemFrequency");
                OnSystemFrequencyChanged();
            }
        }
        private global::System.Int64 _SystemFrequency;
        partial void OnSystemFrequencyChanging(global::System.Int64 value);
        partial void OnSystemFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SampleTimeStamp
        {
            get
            {
                return _SampleTimeStamp;
            }
            set
            {
                OnSampleTimeStampChanging(value);
                ReportPropertyChanging("SampleTimeStamp");
                _SampleTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SampleTimeStamp");
                OnSampleTimeStampChanged();
            }
        }
        private global::System.Int64 _SampleTimeStamp;
        partial void OnSampleTimeStampChanging(global::System.Int64 value);
        partial void OnSampleTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SampleTimeStamp100nSec
        {
            get
            {
                return _SampleTimeStamp100nSec;
            }
            set
            {
                OnSampleTimeStamp100nSecChanging(value);
                ReportPropertyChanging("SampleTimeStamp100nSec");
                _SampleTimeStamp100nSec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SampleTimeStamp100nSec");
                OnSampleTimeStamp100nSecChanged();
            }
        }
        private global::System.Int64 _SampleTimeStamp100nSec;
        partial void OnSampleTimeStamp100nSecChanging(global::System.Int64 value);
        partial void OnSampleTimeStamp100nSecChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                OnCounterTypeChanging(value);
                ReportPropertyChanging("CounterType");
                _CounterType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterType");
                OnCounterTypeChanged();
            }
        }
        private global::System.Int32 _CounterType;
        partial void OnCounterTypeChanging(global::System.Int32 value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ThresholdRuleResult
        {
            get
            {
                return _ThresholdRuleResult;
            }
            set
            {
                OnThresholdRuleResultChanging(value);
                ReportPropertyChanging("ThresholdRuleResult");
                _ThresholdRuleResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThresholdRuleResult");
                OnThresholdRuleResultChanged();
            }
        }
        private global::System.Byte _ThresholdRuleResult;
        partial void OnThresholdRuleResultChanging(global::System.Byte value);
        partial void OnThresholdRuleResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ThresholdRuleMessageId
        {
            get
            {
                return _ThresholdRuleMessageId;
            }
            set
            {
                OnThresholdRuleMessageIdChanging(value);
                ReportPropertyChanging("ThresholdRuleMessageId");
                _ThresholdRuleMessageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThresholdRuleMessageId");
                OnThresholdRuleMessageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ThresholdRuleMessageId;
        partial void OnThresholdRuleMessageIdChanging(Nullable<global::System.Int32> value);
        partial void OnThresholdRuleMessageIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestP__LoadT__787EE5A0", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__787EE5A0", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__787EE5A0", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__787EE5A0", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestP__LoadT__787EE5A0", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestReport object.
        /// </summary>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="loadTestName">Initial value of the LoadTestName property.</param>
        /// <param name="lastRunId">Initial value of the LastRunId property.</param>
        /// <param name="selectNewRuns">Initial value of the SelectNewRuns property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        /// <param name="lastModifiedBy">Initial value of the LastModifiedBy property.</param>
        /// <param name="reportType">Initial value of the ReportType property.</param>
        public static LoadTestReport CreateLoadTestReport(global::System.Int32 reportId, global::System.String name, global::System.String loadTestName, global::System.Int32 lastRunId, global::System.Boolean selectNewRuns, global::System.DateTime lastModified, global::System.String lastModifiedBy, global::System.Byte reportType)
        {
            LoadTestReport loadTestReport = new LoadTestReport();
            loadTestReport.ReportId = reportId;
            loadTestReport.Name = name;
            loadTestReport.LoadTestName = loadTestName;
            loadTestReport.LastRunId = lastRunId;
            loadTestReport.SelectNewRuns = selectNewRuns;
            loadTestReport.LastModified = lastModified;
            loadTestReport.LastModifiedBy = lastModifiedBy;
            loadTestReport.ReportType = reportType;
            return loadTestReport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                if (_ReportId != value)
                {
                    OnReportIdChanging(value);
                    ReportPropertyChanging("ReportId");
                    _ReportId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportId");
                    OnReportIdChanged();
                }
            }
        }
        private global::System.Int32 _ReportId;
        partial void OnReportIdChanging(global::System.Int32 value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoadTestName
        {
            get
            {
                return _LoadTestName;
            }
            set
            {
                OnLoadTestNameChanging(value);
                ReportPropertyChanging("LoadTestName");
                _LoadTestName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoadTestName");
                OnLoadTestNameChanged();
            }
        }
        private global::System.String _LoadTestName;
        partial void OnLoadTestNameChanging(global::System.String value);
        partial void OnLoadTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastRunId
        {
            get
            {
                return _LastRunId;
            }
            set
            {
                OnLastRunIdChanging(value);
                ReportPropertyChanging("LastRunId");
                _LastRunId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastRunId");
                OnLastRunIdChanged();
            }
        }
        private global::System.Int32 _LastRunId;
        partial void OnLastRunIdChanging(global::System.Int32 value);
        partial void OnLastRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SelectNewRuns
        {
            get
            {
                return _SelectNewRuns;
            }
            set
            {
                OnSelectNewRunsChanging(value);
                ReportPropertyChanging("SelectNewRuns");
                _SelectNewRuns = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SelectNewRuns");
                OnSelectNewRunsChanged();
            }
        }
        private global::System.Boolean _SelectNewRuns;
        partial void OnSelectNewRunsChanging(global::System.Boolean value);
        partial void OnSelectNewRunsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private global::System.String _LastModifiedBy;
        partial void OnLastModifiedByChanging(global::System.String value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ReportType
        {
            get
            {
                return _ReportType;
            }
            set
            {
                OnReportTypeChanging(value);
                ReportPropertyChanging("ReportType");
                _ReportType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportType");
                OnReportTypeChanged();
            }
        }
        private global::System.Byte _ReportType;
        partial void OnReportTypeChanging(global::System.Byte value);
        partial void OnReportTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestReportPage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestReportPage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestReportPage object.
        /// </summary>
        /// <param name="pageId">Initial value of the PageId property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        public static LoadTestReportPage CreateLoadTestReportPage(global::System.Int32 pageId, global::System.Int32 reportId, global::System.String categoryName, global::System.String counterName)
        {
            LoadTestReportPage loadTestReportPage = new LoadTestReportPage();
            loadTestReportPage.PageId = pageId;
            loadTestReportPage.ReportId = reportId;
            loadTestReportPage.CategoryName = categoryName;
            loadTestReportPage.CounterName = counterName;
            return loadTestReportPage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageId
        {
            get
            {
                return _PageId;
            }
            set
            {
                if (_PageId != value)
                {
                    OnPageIdChanging(value);
                    ReportPropertyChanging("PageId");
                    _PageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PageId");
                    OnPageIdChanged();
                }
            }
        }
        private global::System.Int32 _PageId;
        partial void OnPageIdChanging(global::System.Int32 value);
        partial void OnPageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Int32 _ReportId;
        partial void OnReportIdChanging(global::System.Int32 value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                OnCounterNameChanging(value);
                ReportPropertyChanging("CounterName");
                _CounterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CounterName");
                OnCounterNameChanged();
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestReportRun")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestReportRun : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestReportRun object.
        /// </summary>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        public static LoadTestReportRun CreateLoadTestReportRun(global::System.Int32 reportId, global::System.Int32 loadTestRunId)
        {
            LoadTestReportRun loadTestReportRun = new LoadTestReportRun();
            loadTestReportRun.ReportId = reportId;
            loadTestReportRun.LoadTestRunId = loadTestRunId;
            return loadTestReportRun;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                if (_ReportId != value)
                {
                    OnReportIdChanging(value);
                    ReportPropertyChanging("ReportId");
                    _ReportId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportId");
                    OnReportIdChanged();
                }
            }
        }
        private global::System.Int32 _ReportId;
        partial void OnReportIdChanging(global::System.Int32 value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestRequestSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestRequestSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestRequestSummary object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="requestUri">Initial value of the RequestUri property.</param>
        public static LoadTestRequestSummary CreateLoadTestRequestSummary(global::System.Int32 loadTestRunId, global::System.String counterName, global::System.String scenarioName, global::System.String testCaseName, global::System.String requestUri)
        {
            LoadTestRequestSummary loadTestRequestSummary = new LoadTestRequestSummary();
            loadTestRequestSummary.LoadTestRunId = loadTestRunId;
            loadTestRequestSummary.CounterName = counterName;
            loadTestRequestSummary.ScenarioName = scenarioName;
            loadTestRequestSummary.TestCaseName = testCaseName;
            loadTestRequestSummary.RequestUri = requestUri;
            return loadTestRequestSummary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoadTestName
        {
            get
            {
                return _LoadTestName;
            }
            set
            {
                OnLoadTestNameChanging(value);
                ReportPropertyChanging("LoadTestName");
                _LoadTestName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoadTestName");
                OnLoadTestNameChanged();
            }
        }
        private global::System.String _LoadTestName;
        partial void OnLoadTestNameChanging(global::System.String value);
        partial void OnLoadTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                if (_CounterName != value)
                {
                    OnCounterNameChanging(value);
                    ReportPropertyChanging("CounterName");
                    _CounterName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CounterName");
                    OnCounterNameChanged();
                }
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                if (_RequestUri != value)
                {
                    OnRequestUriChanging(value);
                    ReportPropertyChanging("RequestUri");
                    _RequestUri = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RequestUri");
                    OnRequestUriChanged();
                }
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CumulativeValue
        {
            get
            {
                return _CumulativeValue;
            }
            set
            {
                OnCumulativeValueChanging(value);
                ReportPropertyChanging("CumulativeValue");
                _CumulativeValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CumulativeValue");
                OnCumulativeValueChanged();
            }
        }
        private Nullable<global::System.Single> _CumulativeValue;
        partial void OnCumulativeValueChanging(Nullable<global::System.Single> value);
        partial void OnCumulativeValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestRun")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestRun : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestRun object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="runId">Initial value of the RunId property.</param>
        /// <param name="runDuration">Initial value of the RunDuration property.</param>
        /// <param name="warmupTime">Initial value of the WarmupTime property.</param>
        /// <param name="runSettingUsed">Initial value of the RunSettingUsed property.</param>
        /// <param name="isLocalRun">Initial value of the IsLocalRun property.</param>
        /// <param name="outcome">Initial value of the Outcome property.</param>
        public static LoadTestRun CreateLoadTestRun(global::System.Int32 loadTestRunId, global::System.String runId, global::System.Int32 runDuration, global::System.Int32 warmupTime, global::System.String runSettingUsed, global::System.Boolean isLocalRun, global::System.String outcome)
        {
            LoadTestRun loadTestRun = new LoadTestRun();
            loadTestRun.LoadTestRunId = loadTestRunId;
            loadTestRun.RunId = runId;
            loadTestRun.RunDuration = runDuration;
            loadTestRun.WarmupTime = warmupTime;
            loadTestRun.RunSettingUsed = runSettingUsed;
            loadTestRun.IsLocalRun = isLocalRun;
            loadTestRun.Outcome = outcome;
            return loadTestRun;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoadTestName
        {
            get
            {
                return _LoadTestName;
            }
            set
            {
                OnLoadTestNameChanging(value);
                ReportPropertyChanging("LoadTestName");
                _LoadTestName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoadTestName");
                OnLoadTestNameChanged();
            }
        }
        private global::System.String _LoadTestName;
        partial void OnLoadTestNameChanging(global::System.String value);
        partial void OnLoadTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RunId
        {
            get
            {
                return _RunId;
            }
            set
            {
                OnRunIdChanging(value);
                ReportPropertyChanging("RunId");
                _RunId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RunId");
                OnRunIdChanged();
            }
        }
        private global::System.String _RunId;
        partial void OnRunIdChanging(global::System.String value);
        partial void OnRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RunDuration
        {
            get
            {
                return _RunDuration;
            }
            set
            {
                OnRunDurationChanging(value);
                ReportPropertyChanging("RunDuration");
                _RunDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunDuration");
                OnRunDurationChanged();
            }
        }
        private global::System.Int32 _RunDuration;
        partial void OnRunDurationChanging(global::System.Int32 value);
        partial void OnRunDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarmupTime
        {
            get
            {
                return _WarmupTime;
            }
            set
            {
                OnWarmupTimeChanging(value);
                ReportPropertyChanging("WarmupTime");
                _WarmupTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarmupTime");
                OnWarmupTimeChanged();
            }
        }
        private global::System.Int32 _WarmupTime;
        partial void OnWarmupTimeChanging(global::System.Int32 value);
        partial void OnWarmupTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RunSettingUsed
        {
            get
            {
                return _RunSettingUsed;
            }
            set
            {
                OnRunSettingUsedChanging(value);
                ReportPropertyChanging("RunSettingUsed");
                _RunSettingUsed = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RunSettingUsed");
                OnRunSettingUsedChanged();
            }
        }
        private global::System.String _RunSettingUsed;
        partial void OnRunSettingUsedChanging(global::System.String value);
        partial void OnRunSettingUsedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLocalRun
        {
            get
            {
                return _IsLocalRun;
            }
            set
            {
                OnIsLocalRunChanging(value);
                ReportPropertyChanging("IsLocalRun");
                _IsLocalRun = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLocalRun");
                OnIsLocalRunChanged();
            }
        }
        private global::System.Boolean _IsLocalRun;
        partial void OnIsLocalRunChanging(global::System.Boolean value);
        partial void OnIsLocalRunChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ControllerName
        {
            get
            {
                return _ControllerName;
            }
            set
            {
                OnControllerNameChanging(value);
                ReportPropertyChanging("ControllerName");
                _ControllerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ControllerName");
                OnControllerNameChanged();
            }
        }
        private global::System.String _ControllerName;
        partial void OnControllerNameChanging(global::System.String value);
        partial void OnControllerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Outcome
        {
            get
            {
                return _Outcome;
            }
            set
            {
                OnOutcomeChanging(value);
                ReportPropertyChanging("Outcome");
                _Outcome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Outcome");
                OnOutcomeChanged();
            }
        }
        private global::System.String _Outcome;
        partial void OnOutcomeChanging(global::System.String value);
        partial void OnOutcomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] LoadTest
        {
            get
            {
                return StructuralObject.GetValidValue(_LoadTest);
            }
            set
            {
                OnLoadTestChanging(value);
                ReportPropertyChanging("LoadTest");
                _LoadTest = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoadTest");
                OnLoadTestChanged();
            }
        }
        private global::System.Byte[] _LoadTest;
        partial void OnLoadTestChanging(global::System.Byte[] value);
        partial void OnLoadTestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LoadTestSchemaRev
        {
            get
            {
                return _LoadTestSchemaRev;
            }
            set
            {
                OnLoadTestSchemaRevChanging(value);
                ReportPropertyChanging("LoadTestSchemaRev");
                _LoadTestSchemaRev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoadTestSchemaRev");
                OnLoadTestSchemaRevChanged();
            }
        }
        private Nullable<global::System.Int32> _LoadTestSchemaRev;
        partial void OnLoadTestSchemaRevChanging(Nullable<global::System.Int32> value);
        partial void OnLoadTestSchemaRevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CooldownTime
        {
            get
            {
                return _CooldownTime;
            }
            set
            {
                OnCooldownTimeChanging(value);
                ReportPropertyChanging("CooldownTime");
                _CooldownTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CooldownTime");
                OnCooldownTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _CooldownTime;
        partial void OnCooldownTimeChanging(Nullable<global::System.Int32> value);
        partial void OnCooldownTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestC__LoadT__72C60C4A", "LoadTestCase")]
        public EntityCollection<LoadTestCase> LoadTestCases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestCase>("LoadTest2010Model.FK__LoadTestC__LoadT__72C60C4A", "LoadTestCase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestCase>("LoadTest2010Model.FK__LoadTestC__LoadT__72C60C4A", "LoadTestCase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestD__LoadT__02FC7413", "LoadTestDataCollectorLog")]
        public EntityCollection<LoadTestDataCollectorLog> LoadTestDataCollectorLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestDataCollectorLog>("LoadTest2010Model.FK__LoadTestD__LoadT__02FC7413", "LoadTestDataCollectorLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestDataCollectorLog>("LoadTest2010Model.FK__LoadTestD__LoadT__02FC7413", "LoadTestDataCollectorLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestF__LoadT__03F0984C", "LoadTestFileAttachment")]
        public EntityCollection<LoadTestFileAttachment> LoadTestFileAttachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestFileAttachment>("LoadTest2010Model.FK__LoadTestF__LoadT__03F0984C", "LoadTestFileAttachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestFileAttachment>("LoadTest2010Model.FK__LoadTestF__LoadT__03F0984C", "LoadTestFileAttachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestF__LoadT__04E4BC85", "LoadTestFileAttachmentChunk")]
        public EntityCollection<LoadTestFileAttachmentChunk> LoadTestFileAttachmentChunks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestFileAttachmentChunk>("LoadTest2010Model.FK__LoadTestF__LoadT__04E4BC85", "LoadTestFileAttachmentChunk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestFileAttachmentChunk>("LoadTest2010Model.FK__LoadTestF__LoadT__04E4BC85", "LoadTestFileAttachmentChunk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestM__LoadT__73BA3083", "LoadTestMessage")]
        public EntityCollection<LoadTestMessage> LoadTestMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestMessage>("LoadTest2010Model.FK__LoadTestM__LoadT__73BA3083", "LoadTestMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestMessage>("LoadTest2010Model.FK__LoadTestM__LoadT__73BA3083", "LoadTestMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestP__LoadT__75A278F5", "LoadTestPerformanceCounter")]
        public EntityCollection<LoadTestPerformanceCounter> LoadTestPerformanceCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestPerformanceCounter>("LoadTest2010Model.FK__LoadTestP__LoadT__75A278F5", "LoadTestPerformanceCounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestPerformanceCounter>("LoadTest2010Model.FK__LoadTestP__LoadT__75A278F5", "LoadTestPerformanceCounter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestP__LoadT__76969D2E", "LoadTestPerformanceCounterCategory")]
        public EntityCollection<LoadTestPerformanceCounterCategory> LoadTestPerformanceCounterCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestPerformanceCounterCategory>("LoadTest2010Model.FK__LoadTestP__LoadT__76969D2E", "LoadTestPerformanceCounterCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestPerformanceCounterCategory>("LoadTest2010Model.FK__LoadTestP__LoadT__76969D2E", "LoadTestPerformanceCounterCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestP__LoadT__778AC167", "LoadTestPerformanceCounterInstance")]
        public EntityCollection<LoadTestPerformanceCounterInstance> LoadTestPerformanceCounterInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestPerformanceCounterInstance>("LoadTest2010Model.FK__LoadTestP__LoadT__778AC167", "LoadTestPerformanceCounterInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestPerformanceCounterInstance>("LoadTest2010Model.FK__LoadTestP__LoadT__778AC167", "LoadTestPerformanceCounterInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestP__LoadT__787EE5A0", "LoadTestPerformanceCounterSample")]
        public EntityCollection<LoadTestPerformanceCounterSample> LoadTestPerformanceCounterSamples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestPerformanceCounterSample>("LoadTest2010Model.FK__LoadTestP__LoadT__787EE5A0", "LoadTestPerformanceCounterSample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestPerformanceCounterSample>("LoadTest2010Model.FK__LoadTestP__LoadT__787EE5A0", "LoadTestPerformanceCounterSample", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestR__LoadT__797309D9", "LoadTestRunAgent")]
        public EntityCollection<LoadTestRunAgent> LoadTestRunAgents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestRunAgent>("LoadTest2010Model.FK__LoadTestR__LoadT__797309D9", "LoadTestRunAgent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestRunAgent>("LoadTest2010Model.FK__LoadTestR__LoadT__797309D9", "LoadTestRunAgent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestR__LoadT__7A672E12", "LoadTestRunInterval")]
        public EntityCollection<LoadTestRunInterval> LoadTestRunIntervals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestRunInterval>("LoadTest2010Model.FK__LoadTestR__LoadT__7A672E12", "LoadTestRunInterval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestRunInterval>("LoadTest2010Model.FK__LoadTestR__LoadT__7A672E12", "LoadTestRunInterval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestS__LoadT__00200768", "LoadTestSystemUnderTest")]
        public EntityCollection<LoadTestSystemUnderTest> LoadTestSystemUnderTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestSystemUnderTest>("LoadTest2010Model.FK__LoadTestS__LoadT__00200768", "LoadTestSystemUnderTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestSystemUnderTest>("LoadTest2010Model.FK__LoadTestS__LoadT__00200768", "LoadTestSystemUnderTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestS__LoadT__01142BA1", "LoadTestSystemUnderTestTag")]
        public EntityCollection<LoadTestSystemUnderTestTag> LoadTestSystemUnderTestTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestSystemUnderTestTag>("LoadTest2010Model.FK__LoadTestS__LoadT__01142BA1", "LoadTestSystemUnderTestTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestSystemUnderTestTag>("LoadTest2010Model.FK__LoadTestS__LoadT__01142BA1", "LoadTestSystemUnderTestTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestS__LoadT__7B5B524B", "LoadTestScenario")]
        public EntityCollection<LoadTestScenario> LoadTestScenarios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestScenario>("LoadTest2010Model.FK__LoadTestS__LoadT__7B5B524B", "LoadTestScenario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestScenario>("LoadTest2010Model.FK__LoadTestS__LoadT__7B5B524B", "LoadTestScenario", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestS__LoadT__7F2BE32F", "LoadTestSqlTrace")]
        public EntityCollection<LoadTestSqlTrace> LoadTestSqlTraces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestSqlTrace>("LoadTest2010Model.FK__LoadTestS__LoadT__7F2BE32F", "LoadTestSqlTrace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestSqlTrace>("LoadTest2010Model.FK__LoadTestS__LoadT__7F2BE32F", "LoadTestSqlTrace", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestT__LoadT__02084FDA", "LoadTestTestLog")]
        public EntityCollection<LoadTestTestLog> LoadTestTestLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestTestLog>("LoadTest2010Model.FK__LoadTestT__LoadT__02084FDA", "LoadTestTestLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestTestLog>("LoadTest2010Model.FK__LoadTestT__LoadT__02084FDA", "LoadTestTestLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestT__LoadT__74AE54BC", "LoadTestThresholdMessage")]
        public EntityCollection<LoadTestThresholdMessage> LoadTestThresholdMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoadTestThresholdMessage>("LoadTest2010Model.FK__LoadTestT__LoadT__74AE54BC", "LoadTestThresholdMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoadTestThresholdMessage>("LoadTest2010Model.FK__LoadTestT__LoadT__74AE54BC", "LoadTestThresholdMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__WebLoadTe__LoadT__7C4F7684", "WebLoadTestErrorDetail")]
        public EntityCollection<WebLoadTestErrorDetail> WebLoadTestErrorDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebLoadTestErrorDetail>("LoadTest2010Model.FK__WebLoadTe__LoadT__7C4F7684", "WebLoadTestErrorDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebLoadTestErrorDetail>("LoadTest2010Model.FK__WebLoadTe__LoadT__7C4F7684", "WebLoadTestErrorDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__WebLoadTe__LoadT__7D439ABD", "WebLoadTestRequestMap")]
        public EntityCollection<WebLoadTestRequestMap> WebLoadTestRequestMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebLoadTestRequestMap>("LoadTest2010Model.FK__WebLoadTe__LoadT__7D439ABD", "WebLoadTestRequestMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebLoadTestRequestMap>("LoadTest2010Model.FK__WebLoadTe__LoadT__7D439ABD", "WebLoadTestRequestMap", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__WebLoadTe__LoadT__7E37BEF6", "WebLoadTestTransaction")]
        public EntityCollection<WebLoadTestTransaction> WebLoadTestTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebLoadTestTransaction>("LoadTest2010Model.FK__WebLoadTe__LoadT__7E37BEF6", "WebLoadTestTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebLoadTestTransaction>("LoadTest2010Model.FK__WebLoadTe__LoadT__7E37BEF6", "WebLoadTestTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestRunAgent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestRunAgent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestRunAgent object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="agentId">Initial value of the AgentId property.</param>
        /// <param name="agentName">Initial value of the AgentName property.</param>
        public static LoadTestRunAgent CreateLoadTestRunAgent(global::System.Int32 loadTestRunId, global::System.Int32 agentId, global::System.String agentName)
        {
            LoadTestRunAgent loadTestRunAgent = new LoadTestRunAgent();
            loadTestRunAgent.LoadTestRunId = loadTestRunId;
            loadTestRunAgent.AgentId = agentId;
            loadTestRunAgent.AgentName = agentName;
            return loadTestRunAgent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgentId
        {
            get
            {
                return _AgentId;
            }
            set
            {
                if (_AgentId != value)
                {
                    OnAgentIdChanging(value);
                    ReportPropertyChanging("AgentId");
                    _AgentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgentId");
                    OnAgentIdChanged();
                }
            }
        }
        private global::System.Int32 _AgentId;
        partial void OnAgentIdChanging(global::System.Int32 value);
        partial void OnAgentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AgentName
        {
            get
            {
                return _AgentName;
            }
            set
            {
                OnAgentNameChanging(value);
                ReportPropertyChanging("AgentName");
                _AgentName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AgentName");
                OnAgentNameChanged();
            }
        }
        private global::System.String _AgentName;
        partial void OnAgentNameChanging(global::System.String value);
        partial void OnAgentNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestR__LoadT__797309D9", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestR__LoadT__797309D9", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestR__LoadT__797309D9", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestR__LoadT__797309D9", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestR__LoadT__797309D9", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestRunInterval")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestRunInterval : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestRunInterval object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="testRunIntervalId">Initial value of the TestRunIntervalId property.</param>
        /// <param name="intervalStartTime">Initial value of the IntervalStartTime property.</param>
        /// <param name="intervalEndTime">Initial value of the IntervalEndTime property.</param>
        public static LoadTestRunInterval CreateLoadTestRunInterval(global::System.Int32 loadTestRunId, global::System.Int32 testRunIntervalId, global::System.DateTime intervalStartTime, global::System.DateTime intervalEndTime)
        {
            LoadTestRunInterval loadTestRunInterval = new LoadTestRunInterval();
            loadTestRunInterval.LoadTestRunId = loadTestRunId;
            loadTestRunInterval.TestRunIntervalId = testRunIntervalId;
            loadTestRunInterval.IntervalStartTime = intervalStartTime;
            loadTestRunInterval.IntervalEndTime = intervalEndTime;
            return loadTestRunInterval;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestRunIntervalId
        {
            get
            {
                return _TestRunIntervalId;
            }
            set
            {
                if (_TestRunIntervalId != value)
                {
                    OnTestRunIntervalIdChanging(value);
                    ReportPropertyChanging("TestRunIntervalId");
                    _TestRunIntervalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestRunIntervalId");
                    OnTestRunIntervalIdChanged();
                }
            }
        }
        private global::System.Int32 _TestRunIntervalId;
        partial void OnTestRunIntervalIdChanging(global::System.Int32 value);
        partial void OnTestRunIntervalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalStartTime
        {
            get
            {
                return _IntervalStartTime;
            }
            set
            {
                OnIntervalStartTimeChanging(value);
                ReportPropertyChanging("IntervalStartTime");
                _IntervalStartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntervalStartTime");
                OnIntervalStartTimeChanged();
            }
        }
        private global::System.DateTime _IntervalStartTime;
        partial void OnIntervalStartTimeChanging(global::System.DateTime value);
        partial void OnIntervalStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalEndTime
        {
            get
            {
                return _IntervalEndTime;
            }
            set
            {
                OnIntervalEndTimeChanging(value);
                ReportPropertyChanging("IntervalEndTime");
                _IntervalEndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntervalEndTime");
                OnIntervalEndTimeChanged();
            }
        }
        private global::System.DateTime _IntervalEndTime;
        partial void OnIntervalEndTimeChanging(global::System.DateTime value);
        partial void OnIntervalEndTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestR__LoadT__7A672E12", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestR__LoadT__7A672E12", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestR__LoadT__7A672E12", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestR__LoadT__7A672E12", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestR__LoadT__7A672E12", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestScenario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestScenario : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestScenario object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="scenarioId">Initial value of the ScenarioId property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        public static LoadTestScenario CreateLoadTestScenario(global::System.Int32 loadTestRunId, global::System.Int32 scenarioId, global::System.String scenarioName)
        {
            LoadTestScenario loadTestScenario = new LoadTestScenario();
            loadTestScenario.LoadTestRunId = loadTestRunId;
            loadTestScenario.ScenarioId = scenarioId;
            loadTestScenario.ScenarioName = scenarioName;
            return loadTestScenario;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScenarioId
        {
            get
            {
                return _ScenarioId;
            }
            set
            {
                if (_ScenarioId != value)
                {
                    OnScenarioIdChanging(value);
                    ReportPropertyChanging("ScenarioId");
                    _ScenarioId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScenarioId");
                    OnScenarioIdChanged();
                }
            }
        }
        private global::System.Int32 _ScenarioId;
        partial void OnScenarioIdChanging(global::System.Int32 value);
        partial void OnScenarioIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                OnScenarioNameChanging(value);
                ReportPropertyChanging("ScenarioName");
                _ScenarioName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScenarioName");
                OnScenarioNameChanged();
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestS__LoadT__7B5B524B", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__7B5B524B", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__7B5B524B", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__7B5B524B", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__7B5B524B", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestScenarioSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestScenarioSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestScenarioSummary object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        public static LoadTestScenarioSummary CreateLoadTestScenarioSummary(global::System.Int32 loadTestRunId, global::System.String counterName, global::System.String scenarioName)
        {
            LoadTestScenarioSummary loadTestScenarioSummary = new LoadTestScenarioSummary();
            loadTestScenarioSummary.LoadTestRunId = loadTestRunId;
            loadTestScenarioSummary.CounterName = counterName;
            loadTestScenarioSummary.ScenarioName = scenarioName;
            return loadTestScenarioSummary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoadTestName
        {
            get
            {
                return _LoadTestName;
            }
            set
            {
                OnLoadTestNameChanging(value);
                ReportPropertyChanging("LoadTestName");
                _LoadTestName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoadTestName");
                OnLoadTestNameChanged();
            }
        }
        private global::System.String _LoadTestName;
        partial void OnLoadTestNameChanging(global::System.String value);
        partial void OnLoadTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                if (_CounterName != value)
                {
                    OnCounterNameChanging(value);
                    ReportPropertyChanging("CounterName");
                    _CounterName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CounterName");
                    OnCounterNameChanged();
                }
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CumulativeValue
        {
            get
            {
                return _CumulativeValue;
            }
            set
            {
                OnCumulativeValueChanging(value);
                ReportPropertyChanging("CumulativeValue");
                _CumulativeValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CumulativeValue");
                OnCumulativeValueChanged();
            }
        }
        private Nullable<global::System.Single> _CumulativeValue;
        partial void OnCumulativeValueChanging(Nullable<global::System.Single> value);
        partial void OnCumulativeValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestSchemaRevision")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestSchemaRevision : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestSchemaRevision object.
        /// </summary>
        /// <param name="loadTestSchemaRev">Initial value of the LoadTestSchemaRev property.</param>
        public static LoadTestSchemaRevision CreateLoadTestSchemaRevision(global::System.Int32 loadTestSchemaRev)
        {
            LoadTestSchemaRevision loadTestSchemaRevision = new LoadTestSchemaRevision();
            loadTestSchemaRevision.LoadTestSchemaRev = loadTestSchemaRev;
            return loadTestSchemaRevision;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestSchemaRev
        {
            get
            {
                return _LoadTestSchemaRev;
            }
            set
            {
                if (_LoadTestSchemaRev != value)
                {
                    OnLoadTestSchemaRevChanging(value);
                    ReportPropertyChanging("LoadTestSchemaRev");
                    _LoadTestSchemaRev = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestSchemaRev");
                    OnLoadTestSchemaRevChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestSchemaRev;
        partial void OnLoadTestSchemaRevChanging(global::System.Int32 value);
        partial void OnLoadTestSchemaRevChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestSqlTrace")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestSqlTrace : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestSqlTrace object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="eventClass">Initial value of the EventClass property.</param>
        public static LoadTestSqlTrace CreateLoadTestSqlTrace(global::System.Int32 loadTestRunId, global::System.Int32 eventClass)
        {
            LoadTestSqlTrace loadTestSqlTrace = new LoadTestSqlTrace();
            loadTestSqlTrace.LoadTestRunId = loadTestRunId;
            loadTestSqlTrace.EventClass = eventClass;
            return loadTestSqlTrace;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TextData
        {
            get
            {
                return _TextData;
            }
            set
            {
                OnTextDataChanging(value);
                ReportPropertyChanging("TextData");
                _TextData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TextData");
                OnTextDataChanged();
            }
        }
        private global::System.String _TextData;
        partial void OnTextDataChanging(global::System.String value);
        partial void OnTextDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int64> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int64> value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Reads
        {
            get
            {
                return _Reads;
            }
            set
            {
                OnReadsChanging(value);
                ReportPropertyChanging("Reads");
                _Reads = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reads");
                OnReadsChanged();
            }
        }
        private Nullable<global::System.Int64> _Reads;
        partial void OnReadsChanging(Nullable<global::System.Int64> value);
        partial void OnReadsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Writes
        {
            get
            {
                return _Writes;
            }
            set
            {
                OnWritesChanging(value);
                ReportPropertyChanging("Writes");
                _Writes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Writes");
                OnWritesChanged();
            }
        }
        private Nullable<global::System.Int64> _Writes;
        partial void OnWritesChanging(Nullable<global::System.Int64> value);
        partial void OnWritesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CPU
        {
            get
            {
                return _CPU;
            }
            set
            {
                OnCPUChanging(value);
                ReportPropertyChanging("CPU");
                _CPU = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CPU");
                OnCPUChanged();
            }
        }
        private Nullable<global::System.Int32> _CPU;
        partial void OnCPUChanging(Nullable<global::System.Int32> value);
        partial void OnCPUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventClass
        {
            get
            {
                return _EventClass;
            }
            set
            {
                if (_EventClass != value)
                {
                    OnEventClassChanging(value);
                    ReportPropertyChanging("EventClass");
                    _EventClass = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventClass");
                    OnEventClassChanged();
                }
            }
        }
        private global::System.Int32 _EventClass;
        partial void OnEventClassChanging(global::System.Int32 value);
        partial void OnEventClassChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestS__LoadT__7F2BE32F", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__7F2BE32F", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__7F2BE32F", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__7F2BE32F", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__7F2BE32F", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestSystemUnderTest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestSystemUnderTest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestSystemUnderTest object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="systemUnderTestId">Initial value of the SystemUnderTestId property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        public static LoadTestSystemUnderTest CreateLoadTestSystemUnderTest(global::System.Int32 loadTestRunId, global::System.Int32 systemUnderTestId, global::System.String machineName)
        {
            LoadTestSystemUnderTest loadTestSystemUnderTest = new LoadTestSystemUnderTest();
            loadTestSystemUnderTest.LoadTestRunId = loadTestRunId;
            loadTestSystemUnderTest.SystemUnderTestId = systemUnderTestId;
            loadTestSystemUnderTest.MachineName = machineName;
            return loadTestSystemUnderTest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemUnderTestId
        {
            get
            {
                return _SystemUnderTestId;
            }
            set
            {
                if (_SystemUnderTestId != value)
                {
                    OnSystemUnderTestIdChanging(value);
                    ReportPropertyChanging("SystemUnderTestId");
                    _SystemUnderTestId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemUnderTestId");
                    OnSystemUnderTestIdChanged();
                }
            }
        }
        private global::System.Int32 _SystemUnderTestId;
        partial void OnSystemUnderTestIdChanging(global::System.Int32 value);
        partial void OnSystemUnderTestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestS__LoadT__00200768", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__00200768", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__00200768", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__00200768", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__00200768", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestSystemUnderTestTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestSystemUnderTestTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestSystemUnderTestTag object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="systemUnderTestId">Initial value of the SystemUnderTestId property.</param>
        /// <param name="machineTag">Initial value of the MachineTag property.</param>
        public static LoadTestSystemUnderTestTag CreateLoadTestSystemUnderTestTag(global::System.Int32 loadTestRunId, global::System.Int32 systemUnderTestId, global::System.String machineTag)
        {
            LoadTestSystemUnderTestTag loadTestSystemUnderTestTag = new LoadTestSystemUnderTestTag();
            loadTestSystemUnderTestTag.LoadTestRunId = loadTestRunId;
            loadTestSystemUnderTestTag.SystemUnderTestId = systemUnderTestId;
            loadTestSystemUnderTestTag.MachineTag = machineTag;
            return loadTestSystemUnderTestTag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemUnderTestId
        {
            get
            {
                return _SystemUnderTestId;
            }
            set
            {
                if (_SystemUnderTestId != value)
                {
                    OnSystemUnderTestIdChanging(value);
                    ReportPropertyChanging("SystemUnderTestId");
                    _SystemUnderTestId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemUnderTestId");
                    OnSystemUnderTestIdChanged();
                }
            }
        }
        private global::System.Int32 _SystemUnderTestId;
        partial void OnSystemUnderTestIdChanging(global::System.Int32 value);
        partial void OnSystemUnderTestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineTag
        {
            get
            {
                return _MachineTag;
            }
            set
            {
                if (_MachineTag != value)
                {
                    OnMachineTagChanging(value);
                    ReportPropertyChanging("MachineTag");
                    _MachineTag = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MachineTag");
                    OnMachineTagChanged();
                }
            }
        }
        private global::System.String _MachineTag;
        partial void OnMachineTagChanging(global::System.String value);
        partial void OnMachineTagChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestS__LoadT__01142BA1", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__01142BA1", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__01142BA1", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__01142BA1", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestS__LoadT__01142BA1", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestTestCaseSample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestTestCaseSample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestTestCaseSample object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="intervalStartTime">Initial value of the IntervalStartTime property.</param>
        /// <param name="intervalEndTime">Initial value of the IntervalEndTime property.</param>
        public static LoadTestTestCaseSample CreateLoadTestTestCaseSample(global::System.Int32 loadTestRunId, global::System.String counterName, global::System.String scenarioName, global::System.String testCaseName, global::System.DateTime intervalStartTime, global::System.DateTime intervalEndTime)
        {
            LoadTestTestCaseSample loadTestTestCaseSample = new LoadTestTestCaseSample();
            loadTestTestCaseSample.LoadTestRunId = loadTestRunId;
            loadTestTestCaseSample.CounterName = counterName;
            loadTestTestCaseSample.ScenarioName = scenarioName;
            loadTestTestCaseSample.TestCaseName = testCaseName;
            loadTestTestCaseSample.IntervalStartTime = intervalStartTime;
            loadTestTestCaseSample.IntervalEndTime = intervalEndTime;
            return loadTestTestCaseSample;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                if (_CounterName != value)
                {
                    OnCounterNameChanging(value);
                    ReportPropertyChanging("CounterName");
                    _CounterName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CounterName");
                    OnCounterNameChanged();
                }
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalStartTime
        {
            get
            {
                return _IntervalStartTime;
            }
            set
            {
                if (_IntervalStartTime != value)
                {
                    OnIntervalStartTimeChanging(value);
                    ReportPropertyChanging("IntervalStartTime");
                    _IntervalStartTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntervalStartTime");
                    OnIntervalStartTimeChanged();
                }
            }
        }
        private global::System.DateTime _IntervalStartTime;
        partial void OnIntervalStartTimeChanging(global::System.DateTime value);
        partial void OnIntervalStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalEndTime
        {
            get
            {
                return _IntervalEndTime;
            }
            set
            {
                if (_IntervalEndTime != value)
                {
                    OnIntervalEndTimeChanging(value);
                    ReportPropertyChanging("IntervalEndTime");
                    _IntervalEndTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntervalEndTime");
                    OnIntervalEndTimeChanged();
                }
            }
        }
        private global::System.DateTime _IntervalEndTime;
        partial void OnIntervalEndTimeChanging(global::System.DateTime value);
        partial void OnIntervalEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ComputedValue
        {
            get
            {
                return _ComputedValue;
            }
            set
            {
                OnComputedValueChanging(value);
                ReportPropertyChanging("ComputedValue");
                _ComputedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputedValue");
                OnComputedValueChanged();
            }
        }
        private Nullable<global::System.Single> _ComputedValue;
        partial void OnComputedValueChanging(Nullable<global::System.Single> value);
        partial void OnComputedValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestTestCaseSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestTestCaseSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestTestCaseSummary object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        public static LoadTestTestCaseSummary CreateLoadTestTestCaseSummary(global::System.Int32 loadTestRunId, global::System.String counterName, global::System.String scenarioName, global::System.String testCaseName)
        {
            LoadTestTestCaseSummary loadTestTestCaseSummary = new LoadTestTestCaseSummary();
            loadTestTestCaseSummary.LoadTestRunId = loadTestRunId;
            loadTestTestCaseSummary.CounterName = counterName;
            loadTestTestCaseSummary.ScenarioName = scenarioName;
            loadTestTestCaseSummary.TestCaseName = testCaseName;
            return loadTestTestCaseSummary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoadTestName
        {
            get
            {
                return _LoadTestName;
            }
            set
            {
                OnLoadTestNameChanging(value);
                ReportPropertyChanging("LoadTestName");
                _LoadTestName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoadTestName");
                OnLoadTestNameChanged();
            }
        }
        private global::System.String _LoadTestName;
        partial void OnLoadTestNameChanging(global::System.String value);
        partial void OnLoadTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                if (_CounterName != value)
                {
                    OnCounterNameChanging(value);
                    ReportPropertyChanging("CounterName");
                    _CounterName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CounterName");
                    OnCounterNameChanged();
                }
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CumulativeValue
        {
            get
            {
                return _CumulativeValue;
            }
            set
            {
                OnCumulativeValueChanging(value);
                ReportPropertyChanging("CumulativeValue");
                _CumulativeValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CumulativeValue");
                OnCumulativeValueChanged();
            }
        }
        private Nullable<global::System.Single> _CumulativeValue;
        partial void OnCumulativeValueChanging(Nullable<global::System.Single> value);
        partial void OnCumulativeValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestTestDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestTestDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestTestDetail object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="testDetailId">Initial value of the TestDetailId property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="testCaseId">Initial value of the TestCaseId property.</param>
        /// <param name="elapsedTime">Initial value of the ElapsedTime property.</param>
        /// <param name="agentId">Initial value of the AgentId property.</param>
        public static LoadTestTestDetail CreateLoadTestTestDetail(global::System.Int32 loadTestRunId, global::System.Int32 testDetailId, global::System.DateTime timeStamp, global::System.Int32 testCaseId, global::System.Double elapsedTime, global::System.Int32 agentId)
        {
            LoadTestTestDetail loadTestTestDetail = new LoadTestTestDetail();
            loadTestTestDetail.LoadTestRunId = loadTestRunId;
            loadTestTestDetail.TestDetailId = testDetailId;
            loadTestTestDetail.TimeStamp = timeStamp;
            loadTestTestDetail.TestCaseId = testCaseId;
            loadTestTestDetail.ElapsedTime = elapsedTime;
            loadTestTestDetail.AgentId = agentId;
            return loadTestTestDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestDetailId
        {
            get
            {
                return _TestDetailId;
            }
            set
            {
                if (_TestDetailId != value)
                {
                    OnTestDetailIdChanging(value);
                    ReportPropertyChanging("TestDetailId");
                    _TestDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestDetailId");
                    OnTestDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _TestDetailId;
        partial void OnTestDetailIdChanging(global::System.Int32 value);
        partial void OnTestDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestCaseId
        {
            get
            {
                return _TestCaseId;
            }
            set
            {
                OnTestCaseIdChanging(value);
                ReportPropertyChanging("TestCaseId");
                _TestCaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestCaseId");
                OnTestCaseIdChanged();
            }
        }
        private global::System.Int32 _TestCaseId;
        partial void OnTestCaseIdChanging(global::System.Int32 value);
        partial void OnTestCaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ElapsedTime
        {
            get
            {
                return _ElapsedTime;
            }
            set
            {
                OnElapsedTimeChanging(value);
                ReportPropertyChanging("ElapsedTime");
                _ElapsedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ElapsedTime");
                OnElapsedTimeChanged();
            }
        }
        private global::System.Double _ElapsedTime;
        partial void OnElapsedTimeChanging(global::System.Double value);
        partial void OnElapsedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgentId
        {
            get
            {
                return _AgentId;
            }
            set
            {
                OnAgentIdChanging(value);
                ReportPropertyChanging("AgentId");
                _AgentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgentId");
                OnAgentIdChanged();
            }
        }
        private global::System.Int32 _AgentId;
        partial void OnAgentIdChanging(global::System.Int32 value);
        partial void OnAgentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BrowserId
        {
            get
            {
                return _BrowserId;
            }
            set
            {
                OnBrowserIdChanging(value);
                ReportPropertyChanging("BrowserId");
                _BrowserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrowserId");
                OnBrowserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BrowserId;
        partial void OnBrowserIdChanging(Nullable<global::System.Int32> value);
        partial void OnBrowserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NetworkId;
        partial void OnNetworkIdChanging(Nullable<global::System.Int32> value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Outcome
        {
            get
            {
                return _Outcome;
            }
            set
            {
                OnOutcomeChanging(value);
                ReportPropertyChanging("Outcome");
                _Outcome = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Outcome");
                OnOutcomeChanged();
            }
        }
        private Nullable<global::System.Byte> _Outcome;
        partial void OnOutcomeChanging(Nullable<global::System.Byte> value);
        partial void OnOutcomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TestLogId
        {
            get
            {
                return _TestLogId;
            }
            set
            {
                OnTestLogIdChanging(value);
                ReportPropertyChanging("TestLogId");
                _TestLogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestLogId");
                OnTestLogIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TestLogId;
        partial void OnTestLogIdChanging(Nullable<global::System.Int32> value);
        partial void OnTestLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InMeasurementInterval
        {
            get
            {
                return _InMeasurementInterval;
            }
            set
            {
                OnInMeasurementIntervalChanging(value);
                ReportPropertyChanging("InMeasurementInterval");
                _InMeasurementInterval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InMeasurementInterval");
                OnInMeasurementIntervalChanged();
            }
        }
        private Nullable<global::System.Boolean> _InMeasurementInterval;
        partial void OnInMeasurementIntervalChanging(Nullable<global::System.Boolean> value);
        partial void OnInMeasurementIntervalChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestTestLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestTestLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestTestLog object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="agentId">Initial value of the AgentId property.</param>
        /// <param name="testCaseId">Initial value of the TestCaseId property.</param>
        /// <param name="testLogId">Initial value of the TestLogId property.</param>
        /// <param name="testLog">Initial value of the TestLog property.</param>
        public static LoadTestTestLog CreateLoadTestTestLog(global::System.Int32 loadTestRunId, global::System.Int32 agentId, global::System.Int32 testCaseId, global::System.Int32 testLogId, global::System.Byte[] testLog)
        {
            LoadTestTestLog loadTestTestLog = new LoadTestTestLog();
            loadTestTestLog.LoadTestRunId = loadTestRunId;
            loadTestTestLog.AgentId = agentId;
            loadTestTestLog.TestCaseId = testCaseId;
            loadTestTestLog.TestLogId = testLogId;
            loadTestTestLog.TestLog = testLog;
            return loadTestTestLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgentId
        {
            get
            {
                return _AgentId;
            }
            set
            {
                if (_AgentId != value)
                {
                    OnAgentIdChanging(value);
                    ReportPropertyChanging("AgentId");
                    _AgentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgentId");
                    OnAgentIdChanged();
                }
            }
        }
        private global::System.Int32 _AgentId;
        partial void OnAgentIdChanging(global::System.Int32 value);
        partial void OnAgentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestCaseId
        {
            get
            {
                return _TestCaseId;
            }
            set
            {
                OnTestCaseIdChanging(value);
                ReportPropertyChanging("TestCaseId");
                _TestCaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestCaseId");
                OnTestCaseIdChanged();
            }
        }
        private global::System.Int32 _TestCaseId;
        partial void OnTestCaseIdChanging(global::System.Int32 value);
        partial void OnTestCaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestLogId
        {
            get
            {
                return _TestLogId;
            }
            set
            {
                if (_TestLogId != value)
                {
                    OnTestLogIdChanging(value);
                    ReportPropertyChanging("TestLogId");
                    _TestLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestLogId");
                    OnTestLogIdChanged();
                }
            }
        }
        private global::System.Int32 _TestLogId;
        partial void OnTestLogIdChanging(global::System.Int32 value);
        partial void OnTestLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TestLog
        {
            get
            {
                return StructuralObject.GetValidValue(_TestLog);
            }
            set
            {
                OnTestLogChanging(value);
                ReportPropertyChanging("TestLog");
                _TestLog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TestLog");
                OnTestLogChanged();
            }
        }
        private global::System.Byte[] _TestLog;
        partial void OnTestLogChanging(global::System.Byte[] value);
        partial void OnTestLogChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestT__LoadT__02084FDA", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestT__LoadT__02084FDA", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestT__LoadT__02084FDA", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestT__LoadT__02084FDA", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestT__LoadT__02084FDA", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestTestResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestTestResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestTestResult object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="testsRun">Initial value of the TestsRun property.</param>
        /// <param name="minimum">Initial value of the Minimum property.</param>
        /// <param name="average">Initial value of the Average property.</param>
        /// <param name="maximum">Initial value of the Maximum property.</param>
        public static LoadTestTestResult CreateLoadTestTestResult(global::System.Int32 loadTestRunId, global::System.String scenarioName, global::System.String testCaseName, global::System.Int32 testsRun, global::System.Double minimum, global::System.Double average, global::System.Double maximum)
        {
            LoadTestTestResult loadTestTestResult = new LoadTestTestResult();
            loadTestTestResult.LoadTestRunId = loadTestRunId;
            loadTestTestResult.ScenarioName = scenarioName;
            loadTestTestResult.TestCaseName = testCaseName;
            loadTestTestResult.TestsRun = testsRun;
            loadTestTestResult.Minimum = minimum;
            loadTestTestResult.Average = average;
            loadTestTestResult.Maximum = maximum;
            return loadTestTestResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestsRun
        {
            get
            {
                return _TestsRun;
            }
            set
            {
                if (_TestsRun != value)
                {
                    OnTestsRunChanging(value);
                    ReportPropertyChanging("TestsRun");
                    _TestsRun = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestsRun");
                    OnTestsRunChanged();
                }
            }
        }
        private global::System.Int32 _TestsRun;
        partial void OnTestsRunChanging(global::System.Int32 value);
        partial void OnTestsRunChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Minimum
        {
            get
            {
                return _Minimum;
            }
            set
            {
                if (_Minimum != value)
                {
                    OnMinimumChanging(value);
                    ReportPropertyChanging("Minimum");
                    _Minimum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Minimum");
                    OnMinimumChanged();
                }
            }
        }
        private global::System.Double _Minimum;
        partial void OnMinimumChanging(global::System.Double value);
        partial void OnMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Average
        {
            get
            {
                return _Average;
            }
            set
            {
                if (_Average != value)
                {
                    OnAverageChanging(value);
                    ReportPropertyChanging("Average");
                    _Average = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Average");
                    OnAverageChanged();
                }
            }
        }
        private global::System.Double _Average;
        partial void OnAverageChanging(global::System.Double value);
        partial void OnAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile90
        {
            get
            {
                return _Percentile90;
            }
            set
            {
                OnPercentile90Changing(value);
                ReportPropertyChanging("Percentile90");
                _Percentile90 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile90");
                OnPercentile90Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile90;
        partial void OnPercentile90Changing(Nullable<global::System.Double> value);
        partial void OnPercentile90Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile95
        {
            get
            {
                return _Percentile95;
            }
            set
            {
                OnPercentile95Changing(value);
                ReportPropertyChanging("Percentile95");
                _Percentile95 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile95");
                OnPercentile95Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile95;
        partial void OnPercentile95Changing(Nullable<global::System.Double> value);
        partial void OnPercentile95Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Maximum
        {
            get
            {
                return _Maximum;
            }
            set
            {
                if (_Maximum != value)
                {
                    OnMaximumChanging(value);
                    ReportPropertyChanging("Maximum");
                    _Maximum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Maximum");
                    OnMaximumChanged();
                }
            }
        }
        private global::System.Double _Maximum;
        partial void OnMaximumChanging(global::System.Double value);
        partial void OnMaximumChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestTestSummaryData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestTestSummaryData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestTestSummaryData object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="testCaseId">Initial value of the TestCaseId property.</param>
        /// <param name="testsRun">Initial value of the TestsRun property.</param>
        /// <param name="average">Initial value of the Average property.</param>
        /// <param name="minimum">Initial value of the Minimum property.</param>
        /// <param name="maximum">Initial value of the Maximum property.</param>
        public static LoadTestTestSummaryData CreateLoadTestTestSummaryData(global::System.Int32 loadTestRunId, global::System.Int32 testCaseId, global::System.Int32 testsRun, global::System.Double average, global::System.Double minimum, global::System.Double maximum)
        {
            LoadTestTestSummaryData loadTestTestSummaryData = new LoadTestTestSummaryData();
            loadTestTestSummaryData.LoadTestRunId = loadTestRunId;
            loadTestTestSummaryData.TestCaseId = testCaseId;
            loadTestTestSummaryData.TestsRun = testsRun;
            loadTestTestSummaryData.Average = average;
            loadTestTestSummaryData.Minimum = minimum;
            loadTestTestSummaryData.Maximum = maximum;
            return loadTestTestSummaryData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestCaseId
        {
            get
            {
                return _TestCaseId;
            }
            set
            {
                if (_TestCaseId != value)
                {
                    OnTestCaseIdChanging(value);
                    ReportPropertyChanging("TestCaseId");
                    _TestCaseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestCaseId");
                    OnTestCaseIdChanged();
                }
            }
        }
        private global::System.Int32 _TestCaseId;
        partial void OnTestCaseIdChanging(global::System.Int32 value);
        partial void OnTestCaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestsRun
        {
            get
            {
                return _TestsRun;
            }
            set
            {
                OnTestsRunChanging(value);
                ReportPropertyChanging("TestsRun");
                _TestsRun = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestsRun");
                OnTestsRunChanged();
            }
        }
        private global::System.Int32 _TestsRun;
        partial void OnTestsRunChanging(global::System.Int32 value);
        partial void OnTestsRunChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Average
        {
            get
            {
                return _Average;
            }
            set
            {
                OnAverageChanging(value);
                ReportPropertyChanging("Average");
                _Average = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Average");
                OnAverageChanged();
            }
        }
        private global::System.Double _Average;
        partial void OnAverageChanging(global::System.Double value);
        partial void OnAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Minimum
        {
            get
            {
                return _Minimum;
            }
            set
            {
                OnMinimumChanging(value);
                ReportPropertyChanging("Minimum");
                _Minimum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Minimum");
                OnMinimumChanged();
            }
        }
        private global::System.Double _Minimum;
        partial void OnMinimumChanging(global::System.Double value);
        partial void OnMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Maximum
        {
            get
            {
                return _Maximum;
            }
            set
            {
                OnMaximumChanging(value);
                ReportPropertyChanging("Maximum");
                _Maximum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Maximum");
                OnMaximumChanged();
            }
        }
        private global::System.Double _Maximum;
        partial void OnMaximumChanging(global::System.Double value);
        partial void OnMaximumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile90
        {
            get
            {
                return _Percentile90;
            }
            set
            {
                OnPercentile90Changing(value);
                ReportPropertyChanging("Percentile90");
                _Percentile90 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile90");
                OnPercentile90Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile90;
        partial void OnPercentile90Changing(Nullable<global::System.Double> value);
        partial void OnPercentile90Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile95
        {
            get
            {
                return _Percentile95;
            }
            set
            {
                OnPercentile95Changing(value);
                ReportPropertyChanging("Percentile95");
                _Percentile95 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile95");
                OnPercentile95Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile95;
        partial void OnPercentile95Changing(Nullable<global::System.Double> value);
        partial void OnPercentile95Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile99
        {
            get
            {
                return _Percentile99;
            }
            set
            {
                OnPercentile99Changing(value);
                ReportPropertyChanging("Percentile99");
                _Percentile99 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile99");
                OnPercentile99Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile99;
        partial void OnPercentile99Changing(Nullable<global::System.Double> value);
        partial void OnPercentile99Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Median
        {
            get
            {
                return _Median;
            }
            set
            {
                OnMedianChanging(value);
                ReportPropertyChanging("Median");
                _Median = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Median");
                OnMedianChanged();
            }
        }
        private Nullable<global::System.Double> _Median;
        partial void OnMedianChanging(Nullable<global::System.Double> value);
        partial void OnMedianChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> StandardDeviation
        {
            get
            {
                return _StandardDeviation;
            }
            set
            {
                OnStandardDeviationChanging(value);
                ReportPropertyChanging("StandardDeviation");
                _StandardDeviation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardDeviation");
                OnStandardDeviationChanged();
            }
        }
        private Nullable<global::System.Double> _StandardDeviation;
        partial void OnStandardDeviationChanging(Nullable<global::System.Double> value);
        partial void OnStandardDeviationChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestThresholdMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestThresholdMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestThresholdMessage object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="testRunIntervalId">Initial value of the TestRunIntervalId property.</param>
        /// <param name="counterInstanceId">Initial value of the CounterInstanceId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        public static LoadTestThresholdMessage CreateLoadTestThresholdMessage(global::System.Int32 loadTestRunId, global::System.Int32 testRunIntervalId, global::System.Int32 counterInstanceId, global::System.Int32 messageId)
        {
            LoadTestThresholdMessage loadTestThresholdMessage = new LoadTestThresholdMessage();
            loadTestThresholdMessage.LoadTestRunId = loadTestRunId;
            loadTestThresholdMessage.TestRunIntervalId = testRunIntervalId;
            loadTestThresholdMessage.CounterInstanceId = counterInstanceId;
            loadTestThresholdMessage.MessageId = messageId;
            return loadTestThresholdMessage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestRunIntervalId
        {
            get
            {
                return _TestRunIntervalId;
            }
            set
            {
                OnTestRunIntervalIdChanging(value);
                ReportPropertyChanging("TestRunIntervalId");
                _TestRunIntervalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestRunIntervalId");
                OnTestRunIntervalIdChanged();
            }
        }
        private global::System.Int32 _TestRunIntervalId;
        partial void OnTestRunIntervalIdChanging(global::System.Int32 value);
        partial void OnTestRunIntervalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CounterInstanceId
        {
            get
            {
                return _CounterInstanceId;
            }
            set
            {
                OnCounterInstanceIdChanging(value);
                ReportPropertyChanging("CounterInstanceId");
                _CounterInstanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterInstanceId");
                OnCounterInstanceIdChanged();
            }
        }
        private global::System.Int32 _CounterInstanceId;
        partial void OnCounterInstanceIdChanging(global::System.Int32 value);
        partial void OnCounterInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageText
        {
            get
            {
                return _MessageText;
            }
            set
            {
                OnMessageTextChanging(value);
                ReportPropertyChanging("MessageText");
                _MessageText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MessageText");
                OnMessageTextChanged();
            }
        }
        private global::System.String _MessageText;
        partial void OnMessageTextChanging(global::System.String value);
        partial void OnMessageTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__LoadTestT__LoadT__74AE54BC", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestT__LoadT__74AE54BC", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestT__LoadT__74AE54BC", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestT__LoadT__74AE54BC", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__LoadTestT__LoadT__74AE54BC", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestTransactionDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestTransactionDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestTransactionDetail object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="transactionDetailId">Initial value of the TransactionDetailId property.</param>
        /// <param name="testDetailId">Initial value of the TestDetailId property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="elapsedTime">Initial value of the ElapsedTime property.</param>
        public static LoadTestTransactionDetail CreateLoadTestTransactionDetail(global::System.Int32 loadTestRunId, global::System.Int32 transactionDetailId, global::System.Int32 testDetailId, global::System.DateTime timeStamp, global::System.Int32 transactionId, global::System.Double elapsedTime)
        {
            LoadTestTransactionDetail loadTestTransactionDetail = new LoadTestTransactionDetail();
            loadTestTransactionDetail.LoadTestRunId = loadTestRunId;
            loadTestTransactionDetail.TransactionDetailId = transactionDetailId;
            loadTestTransactionDetail.TestDetailId = testDetailId;
            loadTestTransactionDetail.TimeStamp = timeStamp;
            loadTestTransactionDetail.TransactionId = transactionId;
            loadTestTransactionDetail.ElapsedTime = elapsedTime;
            return loadTestTransactionDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionDetailId
        {
            get
            {
                return _TransactionDetailId;
            }
            set
            {
                if (_TransactionDetailId != value)
                {
                    OnTransactionDetailIdChanging(value);
                    ReportPropertyChanging("TransactionDetailId");
                    _TransactionDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionDetailId");
                    OnTransactionDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionDetailId;
        partial void OnTransactionDetailIdChanging(global::System.Int32 value);
        partial void OnTransactionDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestDetailId
        {
            get
            {
                return _TestDetailId;
            }
            set
            {
                OnTestDetailIdChanging(value);
                ReportPropertyChanging("TestDetailId");
                _TestDetailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestDetailId");
                OnTestDetailIdChanged();
            }
        }
        private global::System.Int32 _TestDetailId;
        partial void OnTestDetailIdChanging(global::System.Int32 value);
        partial void OnTestDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private global::System.Int32 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int32 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ElapsedTime
        {
            get
            {
                return _ElapsedTime;
            }
            set
            {
                OnElapsedTimeChanging(value);
                ReportPropertyChanging("ElapsedTime");
                _ElapsedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ElapsedTime");
                OnElapsedTimeChanged();
            }
        }
        private global::System.Double _ElapsedTime;
        partial void OnElapsedTimeChanging(global::System.Double value);
        partial void OnElapsedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InMeasurementInterval
        {
            get
            {
                return _InMeasurementInterval;
            }
            set
            {
                OnInMeasurementIntervalChanging(value);
                ReportPropertyChanging("InMeasurementInterval");
                _InMeasurementInterval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InMeasurementInterval");
                OnInMeasurementIntervalChanged();
            }
        }
        private Nullable<global::System.Boolean> _InMeasurementInterval;
        partial void OnInMeasurementIntervalChanging(Nullable<global::System.Boolean> value);
        partial void OnInMeasurementIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ResponseTime
        {
            get
            {
                return _ResponseTime;
            }
            set
            {
                OnResponseTimeChanging(value);
                ReportPropertyChanging("ResponseTime");
                _ResponseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseTime");
                OnResponseTimeChanged();
            }
        }
        private Nullable<global::System.Double> _ResponseTime;
        partial void OnResponseTimeChanging(Nullable<global::System.Double> value);
        partial void OnResponseTimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestTransactionResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestTransactionResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestTransactionResult object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="transactionName">Initial value of the TransactionName property.</param>
        /// <param name="transactionCount">Initial value of the TransactionCount property.</param>
        /// <param name="minimum">Initial value of the Minimum property.</param>
        /// <param name="average">Initial value of the Average property.</param>
        /// <param name="maximum">Initial value of the Maximum property.</param>
        public static LoadTestTransactionResult CreateLoadTestTransactionResult(global::System.Int32 loadTestRunId, global::System.String scenarioName, global::System.String testCaseName, global::System.String transactionName, global::System.Int32 transactionCount, global::System.Double minimum, global::System.Double average, global::System.Double maximum)
        {
            LoadTestTransactionResult loadTestTransactionResult = new LoadTestTransactionResult();
            loadTestTransactionResult.LoadTestRunId = loadTestRunId;
            loadTestTransactionResult.ScenarioName = scenarioName;
            loadTestTransactionResult.TestCaseName = testCaseName;
            loadTestTransactionResult.TransactionName = transactionName;
            loadTestTransactionResult.TransactionCount = transactionCount;
            loadTestTransactionResult.Minimum = minimum;
            loadTestTransactionResult.Average = average;
            loadTestTransactionResult.Maximum = maximum;
            return loadTestTransactionResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionName
        {
            get
            {
                return _TransactionName;
            }
            set
            {
                if (_TransactionName != value)
                {
                    OnTransactionNameChanging(value);
                    ReportPropertyChanging("TransactionName");
                    _TransactionName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionName");
                    OnTransactionNameChanged();
                }
            }
        }
        private global::System.String _TransactionName;
        partial void OnTransactionNameChanging(global::System.String value);
        partial void OnTransactionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionCount
        {
            get
            {
                return _TransactionCount;
            }
            set
            {
                if (_TransactionCount != value)
                {
                    OnTransactionCountChanging(value);
                    ReportPropertyChanging("TransactionCount");
                    _TransactionCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionCount");
                    OnTransactionCountChanged();
                }
            }
        }
        private global::System.Int32 _TransactionCount;
        partial void OnTransactionCountChanging(global::System.Int32 value);
        partial void OnTransactionCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Minimum
        {
            get
            {
                return _Minimum;
            }
            set
            {
                if (_Minimum != value)
                {
                    OnMinimumChanging(value);
                    ReportPropertyChanging("Minimum");
                    _Minimum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Minimum");
                    OnMinimumChanged();
                }
            }
        }
        private global::System.Double _Minimum;
        partial void OnMinimumChanging(global::System.Double value);
        partial void OnMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Average
        {
            get
            {
                return _Average;
            }
            set
            {
                if (_Average != value)
                {
                    OnAverageChanging(value);
                    ReportPropertyChanging("Average");
                    _Average = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Average");
                    OnAverageChanged();
                }
            }
        }
        private global::System.Double _Average;
        partial void OnAverageChanging(global::System.Double value);
        partial void OnAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile90
        {
            get
            {
                return _Percentile90;
            }
            set
            {
                OnPercentile90Changing(value);
                ReportPropertyChanging("Percentile90");
                _Percentile90 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile90");
                OnPercentile90Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile90;
        partial void OnPercentile90Changing(Nullable<global::System.Double> value);
        partial void OnPercentile90Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile95
        {
            get
            {
                return _Percentile95;
            }
            set
            {
                OnPercentile95Changing(value);
                ReportPropertyChanging("Percentile95");
                _Percentile95 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile95");
                OnPercentile95Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile95;
        partial void OnPercentile95Changing(Nullable<global::System.Double> value);
        partial void OnPercentile95Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Maximum
        {
            get
            {
                return _Maximum;
            }
            set
            {
                if (_Maximum != value)
                {
                    OnMaximumChanging(value);
                    ReportPropertyChanging("Maximum");
                    _Maximum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Maximum");
                    OnMaximumChanged();
                }
            }
        }
        private global::System.Double _Maximum;
        partial void OnMaximumChanging(global::System.Double value);
        partial void OnMaximumChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestTransactionResults2")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestTransactionResults2 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestTransactionResults2 object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="transactionName">Initial value of the TransactionName property.</param>
        /// <param name="transactionCount">Initial value of the TransactionCount property.</param>
        /// <param name="minimum">Initial value of the Minimum property.</param>
        /// <param name="average">Initial value of the Average property.</param>
        /// <param name="maximum">Initial value of the Maximum property.</param>
        public static LoadTestTransactionResults2 CreateLoadTestTransactionResults2(global::System.Int32 loadTestRunId, global::System.String scenarioName, global::System.String testCaseName, global::System.String transactionName, global::System.Int32 transactionCount, global::System.Double minimum, global::System.Double average, global::System.Double maximum)
        {
            LoadTestTransactionResults2 loadTestTransactionResults2 = new LoadTestTransactionResults2();
            loadTestTransactionResults2.LoadTestRunId = loadTestRunId;
            loadTestTransactionResults2.ScenarioName = scenarioName;
            loadTestTransactionResults2.TestCaseName = testCaseName;
            loadTestTransactionResults2.TransactionName = transactionName;
            loadTestTransactionResults2.TransactionCount = transactionCount;
            loadTestTransactionResults2.Minimum = minimum;
            loadTestTransactionResults2.Average = average;
            loadTestTransactionResults2.Maximum = maximum;
            return loadTestTransactionResults2;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionName
        {
            get
            {
                return _TransactionName;
            }
            set
            {
                if (_TransactionName != value)
                {
                    OnTransactionNameChanging(value);
                    ReportPropertyChanging("TransactionName");
                    _TransactionName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionName");
                    OnTransactionNameChanged();
                }
            }
        }
        private global::System.String _TransactionName;
        partial void OnTransactionNameChanging(global::System.String value);
        partial void OnTransactionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionCount
        {
            get
            {
                return _TransactionCount;
            }
            set
            {
                if (_TransactionCount != value)
                {
                    OnTransactionCountChanging(value);
                    ReportPropertyChanging("TransactionCount");
                    _TransactionCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionCount");
                    OnTransactionCountChanged();
                }
            }
        }
        private global::System.Int32 _TransactionCount;
        partial void OnTransactionCountChanging(global::System.Int32 value);
        partial void OnTransactionCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Minimum
        {
            get
            {
                return _Minimum;
            }
            set
            {
                if (_Minimum != value)
                {
                    OnMinimumChanging(value);
                    ReportPropertyChanging("Minimum");
                    _Minimum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Minimum");
                    OnMinimumChanged();
                }
            }
        }
        private global::System.Double _Minimum;
        partial void OnMinimumChanging(global::System.Double value);
        partial void OnMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Average
        {
            get
            {
                return _Average;
            }
            set
            {
                if (_Average != value)
                {
                    OnAverageChanging(value);
                    ReportPropertyChanging("Average");
                    _Average = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Average");
                    OnAverageChanged();
                }
            }
        }
        private global::System.Double _Average;
        partial void OnAverageChanging(global::System.Double value);
        partial void OnAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile90
        {
            get
            {
                return _Percentile90;
            }
            set
            {
                OnPercentile90Changing(value);
                ReportPropertyChanging("Percentile90");
                _Percentile90 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile90");
                OnPercentile90Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile90;
        partial void OnPercentile90Changing(Nullable<global::System.Double> value);
        partial void OnPercentile90Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile95
        {
            get
            {
                return _Percentile95;
            }
            set
            {
                OnPercentile95Changing(value);
                ReportPropertyChanging("Percentile95");
                _Percentile95 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile95");
                OnPercentile95Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile95;
        partial void OnPercentile95Changing(Nullable<global::System.Double> value);
        partial void OnPercentile95Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Maximum
        {
            get
            {
                return _Maximum;
            }
            set
            {
                if (_Maximum != value)
                {
                    OnMaximumChanging(value);
                    ReportPropertyChanging("Maximum");
                    _Maximum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Maximum");
                    OnMaximumChanged();
                }
            }
        }
        private global::System.Double _Maximum;
        partial void OnMaximumChanging(global::System.Double value);
        partial void OnMaximumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Median
        {
            get
            {
                return _Median;
            }
            set
            {
                OnMedianChanging(value);
                ReportPropertyChanging("Median");
                _Median = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Median");
                OnMedianChanged();
            }
        }
        private Nullable<global::System.Double> _Median;
        partial void OnMedianChanging(Nullable<global::System.Double> value);
        partial void OnMedianChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile99
        {
            get
            {
                return _Percentile99;
            }
            set
            {
                OnPercentile99Changing(value);
                ReportPropertyChanging("Percentile99");
                _Percentile99 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile99");
                OnPercentile99Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile99;
        partial void OnPercentile99Changing(Nullable<global::System.Double> value);
        partial void OnPercentile99Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> StandardDeviation
        {
            get
            {
                return _StandardDeviation;
            }
            set
            {
                OnStandardDeviationChanging(value);
                ReportPropertyChanging("StandardDeviation");
                _StandardDeviation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardDeviation");
                OnStandardDeviationChanged();
            }
        }
        private Nullable<global::System.Double> _StandardDeviation;
        partial void OnStandardDeviationChanging(Nullable<global::System.Double> value);
        partial void OnStandardDeviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AvgTransactionTime
        {
            get
            {
                return _AvgTransactionTime;
            }
            set
            {
                OnAvgTransactionTimeChanging(value);
                ReportPropertyChanging("AvgTransactionTime");
                _AvgTransactionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AvgTransactionTime");
                OnAvgTransactionTimeChanged();
            }
        }
        private Nullable<global::System.Double> _AvgTransactionTime;
        partial void OnAvgTransactionTimeChanging(Nullable<global::System.Double> value);
        partial void OnAvgTransactionTimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestTransactionSample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestTransactionSample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestTransactionSample object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="transactionName">Initial value of the TransactionName property.</param>
        /// <param name="intervalStartTime">Initial value of the IntervalStartTime property.</param>
        /// <param name="intervalEndTime">Initial value of the IntervalEndTime property.</param>
        public static LoadTestTransactionSample CreateLoadTestTransactionSample(global::System.Int32 loadTestRunId, global::System.String counterName, global::System.String scenarioName, global::System.String testCaseName, global::System.String transactionName, global::System.DateTime intervalStartTime, global::System.DateTime intervalEndTime)
        {
            LoadTestTransactionSample loadTestTransactionSample = new LoadTestTransactionSample();
            loadTestTransactionSample.LoadTestRunId = loadTestRunId;
            loadTestTransactionSample.CounterName = counterName;
            loadTestTransactionSample.ScenarioName = scenarioName;
            loadTestTransactionSample.TestCaseName = testCaseName;
            loadTestTransactionSample.TransactionName = transactionName;
            loadTestTransactionSample.IntervalStartTime = intervalStartTime;
            loadTestTransactionSample.IntervalEndTime = intervalEndTime;
            return loadTestTransactionSample;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                if (_CounterName != value)
                {
                    OnCounterNameChanging(value);
                    ReportPropertyChanging("CounterName");
                    _CounterName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CounterName");
                    OnCounterNameChanged();
                }
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionName
        {
            get
            {
                return _TransactionName;
            }
            set
            {
                if (_TransactionName != value)
                {
                    OnTransactionNameChanging(value);
                    ReportPropertyChanging("TransactionName");
                    _TransactionName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionName");
                    OnTransactionNameChanged();
                }
            }
        }
        private global::System.String _TransactionName;
        partial void OnTransactionNameChanging(global::System.String value);
        partial void OnTransactionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalStartTime
        {
            get
            {
                return _IntervalStartTime;
            }
            set
            {
                if (_IntervalStartTime != value)
                {
                    OnIntervalStartTimeChanging(value);
                    ReportPropertyChanging("IntervalStartTime");
                    _IntervalStartTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntervalStartTime");
                    OnIntervalStartTimeChanged();
                }
            }
        }
        private global::System.DateTime _IntervalStartTime;
        partial void OnIntervalStartTimeChanging(global::System.DateTime value);
        partial void OnIntervalStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalEndTime
        {
            get
            {
                return _IntervalEndTime;
            }
            set
            {
                if (_IntervalEndTime != value)
                {
                    OnIntervalEndTimeChanging(value);
                    ReportPropertyChanging("IntervalEndTime");
                    _IntervalEndTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntervalEndTime");
                    OnIntervalEndTimeChanged();
                }
            }
        }
        private global::System.DateTime _IntervalEndTime;
        partial void OnIntervalEndTimeChanging(global::System.DateTime value);
        partial void OnIntervalEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ComputedValue
        {
            get
            {
                return _ComputedValue;
            }
            set
            {
                OnComputedValueChanging(value);
                ReportPropertyChanging("ComputedValue");
                _ComputedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputedValue");
                OnComputedValueChanged();
            }
        }
        private Nullable<global::System.Single> _ComputedValue;
        partial void OnComputedValueChanging(Nullable<global::System.Single> value);
        partial void OnComputedValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestTransactionSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestTransactionSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestTransactionSummary object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="transactionName">Initial value of the TransactionName property.</param>
        public static LoadTestTransactionSummary CreateLoadTestTransactionSummary(global::System.Int32 loadTestRunId, global::System.String counterName, global::System.String scenarioName, global::System.String testCaseName, global::System.String transactionName)
        {
            LoadTestTransactionSummary loadTestTransactionSummary = new LoadTestTransactionSummary();
            loadTestTransactionSummary.LoadTestRunId = loadTestRunId;
            loadTestTransactionSummary.CounterName = counterName;
            loadTestTransactionSummary.ScenarioName = scenarioName;
            loadTestTransactionSummary.TestCaseName = testCaseName;
            loadTestTransactionSummary.TransactionName = transactionName;
            return loadTestTransactionSummary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoadTestName
        {
            get
            {
                return _LoadTestName;
            }
            set
            {
                OnLoadTestNameChanging(value);
                ReportPropertyChanging("LoadTestName");
                _LoadTestName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoadTestName");
                OnLoadTestNameChanged();
            }
        }
        private global::System.String _LoadTestName;
        partial void OnLoadTestNameChanging(global::System.String value);
        partial void OnLoadTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                if (_CounterName != value)
                {
                    OnCounterNameChanging(value);
                    ReportPropertyChanging("CounterName");
                    _CounterName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CounterName");
                    OnCounterNameChanged();
                }
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionName
        {
            get
            {
                return _TransactionName;
            }
            set
            {
                if (_TransactionName != value)
                {
                    OnTransactionNameChanging(value);
                    ReportPropertyChanging("TransactionName");
                    _TransactionName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionName");
                    OnTransactionNameChanged();
                }
            }
        }
        private global::System.String _TransactionName;
        partial void OnTransactionNameChanging(global::System.String value);
        partial void OnTransactionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CumulativeValue
        {
            get
            {
                return _CumulativeValue;
            }
            set
            {
                OnCumulativeValueChanging(value);
                ReportPropertyChanging("CumulativeValue");
                _CumulativeValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CumulativeValue");
                OnCumulativeValueChanged();
            }
        }
        private Nullable<global::System.Single> _CumulativeValue;
        partial void OnCumulativeValueChanging(Nullable<global::System.Single> value);
        partial void OnCumulativeValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestTransactionSummaryData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestTransactionSummaryData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestTransactionSummaryData object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="transactionCount">Initial value of the TransactionCount property.</param>
        /// <param name="average">Initial value of the Average property.</param>
        /// <param name="minimum">Initial value of the Minimum property.</param>
        /// <param name="maximum">Initial value of the Maximum property.</param>
        public static LoadTestTransactionSummaryData CreateLoadTestTransactionSummaryData(global::System.Int32 loadTestRunId, global::System.Int32 transactionId, global::System.Int32 transactionCount, global::System.Double average, global::System.Double minimum, global::System.Double maximum)
        {
            LoadTestTransactionSummaryData loadTestTransactionSummaryData = new LoadTestTransactionSummaryData();
            loadTestTransactionSummaryData.LoadTestRunId = loadTestRunId;
            loadTestTransactionSummaryData.TransactionId = transactionId;
            loadTestTransactionSummaryData.TransactionCount = transactionCount;
            loadTestTransactionSummaryData.Average = average;
            loadTestTransactionSummaryData.Minimum = minimum;
            loadTestTransactionSummaryData.Maximum = maximum;
            return loadTestTransactionSummaryData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int32 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionCount
        {
            get
            {
                return _TransactionCount;
            }
            set
            {
                OnTransactionCountChanging(value);
                ReportPropertyChanging("TransactionCount");
                _TransactionCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionCount");
                OnTransactionCountChanged();
            }
        }
        private global::System.Int32 _TransactionCount;
        partial void OnTransactionCountChanging(global::System.Int32 value);
        partial void OnTransactionCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Average
        {
            get
            {
                return _Average;
            }
            set
            {
                OnAverageChanging(value);
                ReportPropertyChanging("Average");
                _Average = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Average");
                OnAverageChanged();
            }
        }
        private global::System.Double _Average;
        partial void OnAverageChanging(global::System.Double value);
        partial void OnAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Minimum
        {
            get
            {
                return _Minimum;
            }
            set
            {
                OnMinimumChanging(value);
                ReportPropertyChanging("Minimum");
                _Minimum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Minimum");
                OnMinimumChanged();
            }
        }
        private global::System.Double _Minimum;
        partial void OnMinimumChanging(global::System.Double value);
        partial void OnMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Maximum
        {
            get
            {
                return _Maximum;
            }
            set
            {
                OnMaximumChanging(value);
                ReportPropertyChanging("Maximum");
                _Maximum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Maximum");
                OnMaximumChanged();
            }
        }
        private global::System.Double _Maximum;
        partial void OnMaximumChanging(global::System.Double value);
        partial void OnMaximumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile90
        {
            get
            {
                return _Percentile90;
            }
            set
            {
                OnPercentile90Changing(value);
                ReportPropertyChanging("Percentile90");
                _Percentile90 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile90");
                OnPercentile90Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile90;
        partial void OnPercentile90Changing(Nullable<global::System.Double> value);
        partial void OnPercentile90Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile95
        {
            get
            {
                return _Percentile95;
            }
            set
            {
                OnPercentile95Changing(value);
                ReportPropertyChanging("Percentile95");
                _Percentile95 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile95");
                OnPercentile95Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile95;
        partial void OnPercentile95Changing(Nullable<global::System.Double> value);
        partial void OnPercentile95Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percentile99
        {
            get
            {
                return _Percentile99;
            }
            set
            {
                OnPercentile99Changing(value);
                ReportPropertyChanging("Percentile99");
                _Percentile99 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentile99");
                OnPercentile99Changed();
            }
        }
        private Nullable<global::System.Double> _Percentile99;
        partial void OnPercentile99Changing(Nullable<global::System.Double> value);
        partial void OnPercentile99Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Median
        {
            get
            {
                return _Median;
            }
            set
            {
                OnMedianChanging(value);
                ReportPropertyChanging("Median");
                _Median = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Median");
                OnMedianChanged();
            }
        }
        private Nullable<global::System.Double> _Median;
        partial void OnMedianChanging(Nullable<global::System.Double> value);
        partial void OnMedianChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> StandardDeviation
        {
            get
            {
                return _StandardDeviation;
            }
            set
            {
                OnStandardDeviationChanging(value);
                ReportPropertyChanging("StandardDeviation");
                _StandardDeviation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardDeviation");
                OnStandardDeviationChanged();
            }
        }
        private Nullable<global::System.Double> _StandardDeviation;
        partial void OnStandardDeviationChanging(Nullable<global::System.Double> value);
        partial void OnStandardDeviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AvgTransactionTime
        {
            get
            {
                return _AvgTransactionTime;
            }
            set
            {
                OnAvgTransactionTimeChanging(value);
                ReportPropertyChanging("AvgTransactionTime");
                _AvgTransactionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AvgTransactionTime");
                OnAvgTransactionTimeChanged();
            }
        }
        private Nullable<global::System.Double> _AvgTransactionTime;
        partial void OnAvgTransactionTimeChanging(Nullable<global::System.Double> value);
        partial void OnAvgTransactionTimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestWebPageAndUserLoadCounterSample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestWebPageAndUserLoadCounterSample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestWebPageAndUserLoadCounterSample object.
        /// </summary>
        /// <param name="loadtestrunid">Initial value of the loadtestrunid property.</param>
        /// <param name="instanceName">Initial value of the instanceName property.</param>
        /// <param name="requestUri">Initial value of the RequestUri property.</param>
        /// <param name="intervalStartTime">Initial value of the IntervalStartTime property.</param>
        public static LoadTestWebPageAndUserLoadCounterSample CreateLoadTestWebPageAndUserLoadCounterSample(global::System.Int32 loadtestrunid, global::System.String instanceName, global::System.String requestUri, global::System.DateTime intervalStartTime)
        {
            LoadTestWebPageAndUserLoadCounterSample loadTestWebPageAndUserLoadCounterSample = new LoadTestWebPageAndUserLoadCounterSample();
            loadTestWebPageAndUserLoadCounterSample.loadtestrunid = loadtestrunid;
            loadTestWebPageAndUserLoadCounterSample.instanceName = instanceName;
            loadTestWebPageAndUserLoadCounterSample.RequestUri = requestUri;
            loadTestWebPageAndUserLoadCounterSample.IntervalStartTime = intervalStartTime;
            return loadTestWebPageAndUserLoadCounterSample;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 loadtestrunid
        {
            get
            {
                return _loadtestrunid;
            }
            set
            {
                if (_loadtestrunid != value)
                {
                    OnloadtestrunidChanging(value);
                    ReportPropertyChanging("loadtestrunid");
                    _loadtestrunid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("loadtestrunid");
                    OnloadtestrunidChanged();
                }
            }
        }
        private global::System.Int32 _loadtestrunid;
        partial void OnloadtestrunidChanging(global::System.Int32 value);
        partial void OnloadtestrunidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String instanceName
        {
            get
            {
                return _instanceName;
            }
            set
            {
                if (_instanceName != value)
                {
                    OninstanceNameChanging(value);
                    ReportPropertyChanging("instanceName");
                    _instanceName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("instanceName");
                    OninstanceNameChanged();
                }
            }
        }
        private global::System.String _instanceName;
        partial void OninstanceNameChanging(global::System.String value);
        partial void OninstanceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                if (_RequestUri != value)
                {
                    OnRequestUriChanging(value);
                    ReportPropertyChanging("RequestUri");
                    _RequestUri = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RequestUri");
                    OnRequestUriChanged();
                }
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalStartTime
        {
            get
            {
                return _IntervalStartTime;
            }
            set
            {
                if (_IntervalStartTime != value)
                {
                    OnIntervalStartTimeChanging(value);
                    ReportPropertyChanging("IntervalStartTime");
                    _IntervalStartTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntervalStartTime");
                    OnIntervalStartTimeChanged();
                }
            }
        }
        private global::System.DateTime _IntervalStartTime;
        partial void OnIntervalStartTimeChanging(global::System.DateTime value);
        partial void OnIntervalStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> UserLoad
        {
            get
            {
                return _UserLoad;
            }
            set
            {
                OnUserLoadChanging(value);
                ReportPropertyChanging("UserLoad");
                _UserLoad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserLoad");
                OnUserLoadChanged();
            }
        }
        private Nullable<global::System.Single> _UserLoad;
        partial void OnUserLoadChanging(Nullable<global::System.Single> value);
        partial void OnUserLoadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ResponseTime
        {
            get
            {
                return _ResponseTime;
            }
            set
            {
                OnResponseTimeChanging(value);
                ReportPropertyChanging("ResponseTime");
                _ResponseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseTime");
                OnResponseTimeChanged();
            }
        }
        private Nullable<global::System.Single> _ResponseTime;
        partial void OnResponseTimeChanging(Nullable<global::System.Single> value);
        partial void OnResponseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> RPS
        {
            get
            {
                return _RPS;
            }
            set
            {
                OnRPSChanging(value);
                ReportPropertyChanging("RPS");
                _RPS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RPS");
                OnRPSChanged();
            }
        }
        private Nullable<global::System.Single> _RPS;
        partial void OnRPSChanging(Nullable<global::System.Single> value);
        partial void OnRPSChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestWebRequestCounterSample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestWebRequestCounterSample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestWebRequestCounterSample object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="requestUri">Initial value of the RequestUri property.</param>
        /// <param name="intervalStartTime">Initial value of the IntervalStartTime property.</param>
        /// <param name="intervalEndTime">Initial value of the IntervalEndTime property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        public static LoadTestWebRequestCounterSample CreateLoadTestWebRequestCounterSample(global::System.Int32 loadTestRunId, global::System.String counterName, global::System.String scenarioName, global::System.String testCaseName, global::System.String requestUri, global::System.DateTime intervalStartTime, global::System.DateTime intervalEndTime, global::System.Int32 counterType)
        {
            LoadTestWebRequestCounterSample loadTestWebRequestCounterSample = new LoadTestWebRequestCounterSample();
            loadTestWebRequestCounterSample.LoadTestRunId = loadTestRunId;
            loadTestWebRequestCounterSample.CounterName = counterName;
            loadTestWebRequestCounterSample.ScenarioName = scenarioName;
            loadTestWebRequestCounterSample.TestCaseName = testCaseName;
            loadTestWebRequestCounterSample.RequestUri = requestUri;
            loadTestWebRequestCounterSample.IntervalStartTime = intervalStartTime;
            loadTestWebRequestCounterSample.IntervalEndTime = intervalEndTime;
            loadTestWebRequestCounterSample.CounterType = counterType;
            return loadTestWebRequestCounterSample;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                if (_CounterName != value)
                {
                    OnCounterNameChanging(value);
                    ReportPropertyChanging("CounterName");
                    _CounterName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CounterName");
                    OnCounterNameChanged();
                }
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                if (_RequestUri != value)
                {
                    OnRequestUriChanging(value);
                    ReportPropertyChanging("RequestUri");
                    _RequestUri = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RequestUri");
                    OnRequestUriChanged();
                }
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalStartTime
        {
            get
            {
                return _IntervalStartTime;
            }
            set
            {
                if (_IntervalStartTime != value)
                {
                    OnIntervalStartTimeChanging(value);
                    ReportPropertyChanging("IntervalStartTime");
                    _IntervalStartTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntervalStartTime");
                    OnIntervalStartTimeChanged();
                }
            }
        }
        private global::System.DateTime _IntervalStartTime;
        partial void OnIntervalStartTimeChanging(global::System.DateTime value);
        partial void OnIntervalStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IntervalEndTime
        {
            get
            {
                return _IntervalEndTime;
            }
            set
            {
                if (_IntervalEndTime != value)
                {
                    OnIntervalEndTimeChanging(value);
                    ReportPropertyChanging("IntervalEndTime");
                    _IntervalEndTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntervalEndTime");
                    OnIntervalEndTimeChanged();
                }
            }
        }
        private global::System.DateTime _IntervalEndTime;
        partial void OnIntervalEndTimeChanging(global::System.DateTime value);
        partial void OnIntervalEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                if (_CounterType != value)
                {
                    OnCounterTypeChanging(value);
                    ReportPropertyChanging("CounterType");
                    _CounterType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CounterType");
                    OnCounterTypeChanged();
                }
            }
        }
        private global::System.Int32 _CounterType;
        partial void OnCounterTypeChanging(global::System.Int32 value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ComputedValue
        {
            get
            {
                return _ComputedValue;
            }
            set
            {
                OnComputedValueChanging(value);
                ReportPropertyChanging("ComputedValue");
                _ComputedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputedValue");
                OnComputedValueChanged();
            }
        }
        private Nullable<global::System.Single> _ComputedValue;
        partial void OnComputedValueChanging(Nullable<global::System.Single> value);
        partial void OnComputedValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="LoadTestWebRequestCounterSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoadTestWebRequestCounterSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoadTestWebRequestCounterSummary object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="testCaseName">Initial value of the TestCaseName property.</param>
        /// <param name="requestUri">Initial value of the RequestUri property.</param>
        public static LoadTestWebRequestCounterSummary CreateLoadTestWebRequestCounterSummary(global::System.Int32 loadTestRunId, global::System.String counterName, global::System.String scenarioName, global::System.String testCaseName, global::System.String requestUri)
        {
            LoadTestWebRequestCounterSummary loadTestWebRequestCounterSummary = new LoadTestWebRequestCounterSummary();
            loadTestWebRequestCounterSummary.LoadTestRunId = loadTestRunId;
            loadTestWebRequestCounterSummary.CounterName = counterName;
            loadTestWebRequestCounterSummary.ScenarioName = scenarioName;
            loadTestWebRequestCounterSummary.TestCaseName = testCaseName;
            loadTestWebRequestCounterSummary.RequestUri = requestUri;
            return loadTestWebRequestCounterSummary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                if (_CounterName != value)
                {
                    OnCounterNameChanging(value);
                    ReportPropertyChanging("CounterName");
                    _CounterName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CounterName");
                    OnCounterNameChanged();
                }
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                if (_ScenarioName != value)
                {
                    OnScenarioNameChanging(value);
                    ReportPropertyChanging("ScenarioName");
                    _ScenarioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ScenarioName");
                    OnScenarioNameChanged();
                }
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestCaseName
        {
            get
            {
                return _TestCaseName;
            }
            set
            {
                if (_TestCaseName != value)
                {
                    OnTestCaseNameChanging(value);
                    ReportPropertyChanging("TestCaseName");
                    _TestCaseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TestCaseName");
                    OnTestCaseNameChanged();
                }
            }
        }
        private global::System.String _TestCaseName;
        partial void OnTestCaseNameChanging(global::System.String value);
        partial void OnTestCaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                if (_RequestUri != value)
                {
                    OnRequestUriChanging(value);
                    ReportPropertyChanging("RequestUri");
                    _RequestUri = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RequestUri");
                    OnRequestUriChanged();
                }
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CumulativeValue
        {
            get
            {
                return _CumulativeValue;
            }
            set
            {
                OnCumulativeValueChanging(value);
                ReportPropertyChanging("CumulativeValue");
                _CumulativeValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CumulativeValue");
                OnCumulativeValueChanged();
            }
        }
        private Nullable<global::System.Single> _CumulativeValue;
        partial void OnCumulativeValueChanging(Nullable<global::System.Single> value);
        partial void OnCumulativeValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="PassportUserIDStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PassportUserIDStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PassportUserIDStatu object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static PassportUserIDStatu CreatePassportUserIDStatu(global::System.String userID, global::System.String password, global::System.String status)
        {
            PassportUserIDStatu passportUserIDStatu = new PassportUserIDStatu();
            passportUserIDStatu.UserID = userID;
            passportUserIDStatu.Password = password;
            passportUserIDStatu.Status = status;
            return passportUserIDStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                if (_Password != value)
                {
                    OnPasswordChanging(value);
                    ReportPropertyChanging("Password");
                    _Password = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Password");
                    OnPasswordChanged();
                }
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="WebLoadTestErrorDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebLoadTestErrorDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebLoadTestErrorDetail object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="agentId">Initial value of the AgentId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        public static WebLoadTestErrorDetail CreateWebLoadTestErrorDetail(global::System.Int32 loadTestRunId, global::System.Int32 agentId, global::System.Int32 messageId)
        {
            WebLoadTestErrorDetail webLoadTestErrorDetail = new WebLoadTestErrorDetail();
            webLoadTestErrorDetail.LoadTestRunId = loadTestRunId;
            webLoadTestErrorDetail.AgentId = agentId;
            webLoadTestErrorDetail.MessageId = messageId;
            return webLoadTestErrorDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgentId
        {
            get
            {
                return _AgentId;
            }
            set
            {
                if (_AgentId != value)
                {
                    OnAgentIdChanging(value);
                    ReportPropertyChanging("AgentId");
                    _AgentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgentId");
                    OnAgentIdChanged();
                }
            }
        }
        private global::System.Int32 _AgentId;
        partial void OnAgentIdChanging(global::System.Int32 value);
        partial void OnAgentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] WebTestRequestResult
        {
            get
            {
                return StructuralObject.GetValidValue(_WebTestRequestResult);
            }
            set
            {
                OnWebTestRequestResultChanging(value);
                ReportPropertyChanging("WebTestRequestResult");
                _WebTestRequestResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebTestRequestResult");
                OnWebTestRequestResultChanged();
            }
        }
        private global::System.Byte[] _WebTestRequestResult;
        partial void OnWebTestRequestResultChanging(global::System.Byte[] value);
        partial void OnWebTestRequestResultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__WebLoadTe__LoadT__7C4F7684", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__WebLoadTe__LoadT__7C4F7684", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__WebLoadTe__LoadT__7C4F7684", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__WebLoadTe__LoadT__7C4F7684", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__WebLoadTe__LoadT__7C4F7684", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="WebLoadTestRequestMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebLoadTestRequestMap : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebLoadTestRequestMap object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        /// <param name="testCaseId">Initial value of the TestCaseId property.</param>
        /// <param name="requestUri">Initial value of the RequestUri property.</param>
        public static WebLoadTestRequestMap CreateWebLoadTestRequestMap(global::System.Int32 loadTestRunId, global::System.Int32 requestId, global::System.Int32 testCaseId, global::System.String requestUri)
        {
            WebLoadTestRequestMap webLoadTestRequestMap = new WebLoadTestRequestMap();
            webLoadTestRequestMap.LoadTestRunId = loadTestRunId;
            webLoadTestRequestMap.RequestId = requestId;
            webLoadTestRequestMap.TestCaseId = testCaseId;
            webLoadTestRequestMap.RequestUri = requestUri;
            return webLoadTestRequestMap;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                if (_RequestId != value)
                {
                    OnRequestIdChanging(value);
                    ReportPropertyChanging("RequestId");
                    _RequestId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RequestId");
                    OnRequestIdChanged();
                }
            }
        }
        private global::System.Int32 _RequestId;
        partial void OnRequestIdChanging(global::System.Int32 value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestCaseId
        {
            get
            {
                return _TestCaseId;
            }
            set
            {
                OnTestCaseIdChanging(value);
                ReportPropertyChanging("TestCaseId");
                _TestCaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestCaseId");
                OnTestCaseIdChanged();
            }
        }
        private global::System.Int32 _TestCaseId;
        partial void OnTestCaseIdChanging(global::System.Int32 value);
        partial void OnTestCaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestUri
        {
            get
            {
                return _RequestUri;
            }
            set
            {
                OnRequestUriChanging(value);
                ReportPropertyChanging("RequestUri");
                _RequestUri = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RequestUri");
                OnRequestUriChanged();
            }
        }
        private global::System.String _RequestUri;
        partial void OnRequestUriChanging(global::System.String value);
        partial void OnRequestUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ResponseTimeGoal
        {
            get
            {
                return _ResponseTimeGoal;
            }
            set
            {
                OnResponseTimeGoalChanging(value);
                ReportPropertyChanging("ResponseTimeGoal");
                _ResponseTimeGoal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseTimeGoal");
                OnResponseTimeGoalChanged();
            }
        }
        private Nullable<global::System.Double> _ResponseTimeGoal;
        partial void OnResponseTimeGoalChanging(Nullable<global::System.Double> value);
        partial void OnResponseTimeGoalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__WebLoadTe__LoadT__7D439ABD", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__WebLoadTe__LoadT__7D439ABD", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__WebLoadTe__LoadT__7D439ABD", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__WebLoadTe__LoadT__7D439ABD", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__WebLoadTe__LoadT__7D439ABD", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LoadTest2010Model", Name="WebLoadTestTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebLoadTestTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebLoadTestTransaction object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="testCaseId">Initial value of the TestCaseId property.</param>
        /// <param name="transactionName">Initial value of the TransactionName property.</param>
        public static WebLoadTestTransaction CreateWebLoadTestTransaction(global::System.Int32 loadTestRunId, global::System.Int32 transactionId, global::System.Int32 testCaseId, global::System.String transactionName)
        {
            WebLoadTestTransaction webLoadTestTransaction = new WebLoadTestTransaction();
            webLoadTestTransaction.LoadTestRunId = loadTestRunId;
            webLoadTestTransaction.TransactionId = transactionId;
            webLoadTestTransaction.TestCaseId = testCaseId;
            webLoadTestTransaction.TransactionName = transactionName;
            return webLoadTestTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                if (_LoadTestRunId != value)
                {
                    OnLoadTestRunIdChanging(value);
                    ReportPropertyChanging("LoadTestRunId");
                    _LoadTestRunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LoadTestRunId");
                    OnLoadTestRunIdChanged();
                }
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int32 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestCaseId
        {
            get
            {
                return _TestCaseId;
            }
            set
            {
                OnTestCaseIdChanging(value);
                ReportPropertyChanging("TestCaseId");
                _TestCaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestCaseId");
                OnTestCaseIdChanged();
            }
        }
        private global::System.Int32 _TestCaseId;
        partial void OnTestCaseIdChanging(global::System.Int32 value);
        partial void OnTestCaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionName
        {
            get
            {
                return _TransactionName;
            }
            set
            {
                OnTransactionNameChanging(value);
                ReportPropertyChanging("TransactionName");
                _TransactionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransactionName");
                OnTransactionNameChanged();
            }
        }
        private global::System.String _TransactionName;
        partial void OnTransactionNameChanging(global::System.String value);
        partial void OnTransactionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Goal
        {
            get
            {
                return _Goal;
            }
            set
            {
                OnGoalChanging(value);
                ReportPropertyChanging("Goal");
                _Goal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Goal");
                OnGoalChanged();
            }
        }
        private Nullable<global::System.Double> _Goal;
        partial void OnGoalChanging(Nullable<global::System.Double> value);
        partial void OnGoalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LoadTest2010Model", "FK__WebLoadTe__LoadT__7E37BEF6", "LoadTestRun")]
        public LoadTestRun LoadTestRun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__WebLoadTe__LoadT__7E37BEF6", "LoadTestRun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__WebLoadTe__LoadT__7E37BEF6", "LoadTestRun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoadTestRun> LoadTestRunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoadTestRun>("LoadTest2010Model.FK__WebLoadTe__LoadT__7E37BEF6", "LoadTestRun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoadTestRun>("LoadTest2010Model.FK__WebLoadTe__LoadT__7E37BEF6", "LoadTestRun", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LoadTest2010Model", Name="GetAgents_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetAgents_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetAgents_Result object.
        /// </summary>
        /// <param name="agentId">Initial value of the AgentId property.</param>
        /// <param name="agentName">Initial value of the AgentName property.</param>
        public static GetAgents_Result CreateGetAgents_Result(global::System.Int32 agentId, global::System.String agentName)
        {
            GetAgents_Result getAgents_Result = new GetAgents_Result();
            getAgents_Result.AgentId = agentId;
            getAgents_Result.AgentName = agentName;
            return getAgents_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgentId
        {
            get
            {
                return _AgentId;
            }
            set
            {
                OnAgentIdChanging(value);
                ReportPropertyChanging("AgentId");
                _AgentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgentId");
                OnAgentIdChanged();
            }
        }
        private global::System.Int32 _AgentId;
        partial void OnAgentIdChanging(global::System.Int32 value);
        partial void OnAgentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AgentName
        {
            get
            {
                return _AgentName;
            }
            set
            {
                OnAgentNameChanging(value);
                ReportPropertyChanging("AgentName");
                _AgentName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AgentName");
                OnAgentNameChanged();
            }
        }
        private global::System.String _AgentName;
        partial void OnAgentNameChanging(global::System.String value);
        partial void OnAgentNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LoadTest2010Model", Name="GetSamplesForTest_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetSamplesForTest_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetSamplesForTest_Result object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="instanceName">Initial value of the InstanceName property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        /// <param name="thresholdRuleResult">Initial value of the ThresholdRuleResult property.</param>
        public static GetSamplesForTest_Result CreateGetSamplesForTest_Result(global::System.Int32 loadTestRunId, global::System.String machineName, global::System.String categoryName, global::System.String counterName, global::System.String instanceName, global::System.Int32 counterType, global::System.Byte thresholdRuleResult)
        {
            GetSamplesForTest_Result getSamplesForTest_Result = new GetSamplesForTest_Result();
            getSamplesForTest_Result.LoadTestRunId = loadTestRunId;
            getSamplesForTest_Result.MachineName = machineName;
            getSamplesForTest_Result.CategoryName = categoryName;
            getSamplesForTest_Result.CounterName = counterName;
            getSamplesForTest_Result.InstanceName = instanceName;
            getSamplesForTest_Result.CounterType = counterType;
            getSamplesForTest_Result.ThresholdRuleResult = thresholdRuleResult;
            return getSamplesForTest_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                OnLoadTestRunIdChanging(value);
                ReportPropertyChanging("LoadTestRunId");
                _LoadTestRunId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoadTestRunId");
                OnLoadTestRunIdChanged();
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                OnCounterNameChanging(value);
                ReportPropertyChanging("CounterName");
                _CounterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CounterName");
                OnCounterNameChanged();
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceName
        {
            get
            {
                return _InstanceName;
            }
            set
            {
                OnInstanceNameChanging(value);
                ReportPropertyChanging("InstanceName");
                _InstanceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstanceName");
                OnInstanceNameChanged();
            }
        }
        private global::System.String _InstanceName;
        partial void OnInstanceNameChanging(global::System.String value);
        partial void OnInstanceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Interval
        {
            get
            {
                return _Interval;
            }
            set
            {
                OnIntervalChanging(value);
                ReportPropertyChanging("Interval");
                _Interval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Interval");
                OnIntervalChanged();
            }
        }
        private Nullable<global::System.DateTime> _Interval;
        partial void OnIntervalChanging(Nullable<global::System.DateTime> value);
        partial void OnIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                OnCounterTypeChanging(value);
                ReportPropertyChanging("CounterType");
                _CounterType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterType");
                OnCounterTypeChanged();
            }
        }
        private global::System.Int32 _CounterType;
        partial void OnCounterTypeChanging(global::System.Int32 value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ComputedValue
        {
            get
            {
                return _ComputedValue;
            }
            set
            {
                OnComputedValueChanging(value);
                ReportPropertyChanging("ComputedValue");
                _ComputedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputedValue");
                OnComputedValueChanged();
            }
        }
        private Nullable<global::System.Single> _ComputedValue;
        partial void OnComputedValueChanging(Nullable<global::System.Single> value);
        partial void OnComputedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ThresholdRuleResult
        {
            get
            {
                return _ThresholdRuleResult;
            }
            set
            {
                OnThresholdRuleResultChanging(value);
                ReportPropertyChanging("ThresholdRuleResult");
                _ThresholdRuleResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThresholdRuleResult");
                OnThresholdRuleResultChanged();
            }
        }
        private global::System.Byte _ThresholdRuleResult;
        partial void OnThresholdRuleResultChanging(global::System.Byte value);
        partial void OnThresholdRuleResultChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LoadTest2010Model", Name="Pbx_GetLoadTestRunsWithHighCounterSampleRecords_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Pbx_GetLoadTestRunsWithHighCounterSampleRecords_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LoadTestRunID
        {
            get
            {
                return _LoadTestRunID;
            }
            set
            {
                OnLoadTestRunIDChanging(value);
                ReportPropertyChanging("LoadTestRunID");
                _LoadTestRunID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoadTestRunID");
                OnLoadTestRunIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LoadTestRunID;
        partial void OnLoadTestRunIDChanging(Nullable<global::System.Int32> value);
        partial void OnLoadTestRunIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoadTestName
        {
            get
            {
                return _LoadTestName;
            }
            set
            {
                OnLoadTestNameChanging(value);
                ReportPropertyChanging("LoadTestName");
                _LoadTestName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoadTestName");
                OnLoadTestNameChanged();
            }
        }
        private global::System.String _LoadTestName;
        partial void OnLoadTestNameChanging(global::System.String value);
        partial void OnLoadTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CountOfSampleRecords
        {
            get
            {
                return _CountOfSampleRecords;
            }
            set
            {
                OnCountOfSampleRecordsChanging(value);
                ReportPropertyChanging("CountOfSampleRecords");
                _CountOfSampleRecords = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountOfSampleRecords");
                OnCountOfSampleRecordsChanged();
            }
        }
        private Nullable<global::System.Int64> _CountOfSampleRecords;
        partial void OnCountOfSampleRecordsChanging(Nullable<global::System.Int64> value);
        partial void OnCountOfSampleRecordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TestStart
        {
            get
            {
                return _TestStart;
            }
            set
            {
                OnTestStartChanging(value);
                ReportPropertyChanging("TestStart");
                _TestStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestStart");
                OnTestStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _TestStart;
        partial void OnTestStartChanging(Nullable<global::System.DateTime> value);
        partial void OnTestStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TestEnd
        {
            get
            {
                return _TestEnd;
            }
            set
            {
                OnTestEndChanging(value);
                ReportPropertyChanging("TestEnd");
                _TestEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestEnd");
                OnTestEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _TestEnd;
        partial void OnTestEndChanging(Nullable<global::System.DateTime> value);
        partial void OnTestEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TestDuration
        {
            get
            {
                return _TestDuration;
            }
            set
            {
                OnTestDurationChanging(value);
                ReportPropertyChanging("TestDuration");
                _TestDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestDuration");
                OnTestDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _TestDuration;
        partial void OnTestDurationChanging(Nullable<global::System.Int32> value);
        partial void OnTestDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LoadTest2010Model", Name="Pbx_GetLoadTestsHoggingAllTheSpace_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Pbx_GetLoadTestsHoggingAllTheSpace_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                OnLoadTestRunIdChanging(value);
                ReportPropertyChanging("LoadTestRunId");
                _LoadTestRunId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoadTestRunId");
                OnLoadTestRunIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(Nullable<global::System.Int32> value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoadTestName
        {
            get
            {
                return _LoadTestName;
            }
            set
            {
                OnLoadTestNameChanging(value);
                ReportPropertyChanging("LoadTestName");
                _LoadTestName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoadTestName");
                OnLoadTestNameChanged();
            }
        }
        private global::System.String _LoadTestName;
        partial void OnLoadTestNameChanging(global::System.String value);
        partial void OnLoadTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int32> value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DBSizeInKB
        {
            get
            {
                return _DBSizeInKB;
            }
            set
            {
                OnDBSizeInKBChanging(value);
                ReportPropertyChanging("DBSizeInKB");
                _DBSizeInKB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DBSizeInKB");
                OnDBSizeInKBChanged();
            }
        }
        private Nullable<global::System.Double> _DBSizeInKB;
        partial void OnDBSizeInKBChanging(Nullable<global::System.Double> value);
        partial void OnDBSizeInKBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PercentOfDBSize
        {
            get
            {
                return _PercentOfDBSize;
            }
            set
            {
                OnPercentOfDBSizeChanging(value);
                ReportPropertyChanging("PercentOfDBSize");
                _PercentOfDBSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PercentOfDBSize");
                OnPercentOfDBSizeChanged();
            }
        }
        private Nullable<global::System.Double> _PercentOfDBSize;
        partial void OnPercentOfDBSizeChanging(Nullable<global::System.Double> value);
        partial void OnPercentOfDBSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LoadTest2010Model", Name="Pbx_GetSamplesForTest_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Pbx_GetSamplesForTest_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pbx_GetSamplesForTest_Result object.
        /// </summary>
        /// <param name="loadTestRunId">Initial value of the LoadTestRunId property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="counterName">Initial value of the CounterName property.</param>
        /// <param name="instanceName">Initial value of the InstanceName property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        /// <param name="thresholdRuleResult">Initial value of the ThresholdRuleResult property.</param>
        public static Pbx_GetSamplesForTest_Result CreatePbx_GetSamplesForTest_Result(global::System.Int32 loadTestRunId, global::System.String machineName, global::System.String categoryName, global::System.String counterName, global::System.String instanceName, global::System.Int32 counterType, global::System.Byte thresholdRuleResult)
        {
            Pbx_GetSamplesForTest_Result pbx_GetSamplesForTest_Result = new Pbx_GetSamplesForTest_Result();
            pbx_GetSamplesForTest_Result.LoadTestRunId = loadTestRunId;
            pbx_GetSamplesForTest_Result.MachineName = machineName;
            pbx_GetSamplesForTest_Result.CategoryName = categoryName;
            pbx_GetSamplesForTest_Result.CounterName = counterName;
            pbx_GetSamplesForTest_Result.InstanceName = instanceName;
            pbx_GetSamplesForTest_Result.CounterType = counterType;
            pbx_GetSamplesForTest_Result.ThresholdRuleResult = thresholdRuleResult;
            return pbx_GetSamplesForTest_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadTestRunId
        {
            get
            {
                return _LoadTestRunId;
            }
            set
            {
                OnLoadTestRunIdChanging(value);
                ReportPropertyChanging("LoadTestRunId");
                _LoadTestRunId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoadTestRunId");
                OnLoadTestRunIdChanged();
            }
        }
        private global::System.Int32 _LoadTestRunId;
        partial void OnLoadTestRunIdChanging(global::System.Int32 value);
        partial void OnLoadTestRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterName
        {
            get
            {
                return _CounterName;
            }
            set
            {
                OnCounterNameChanging(value);
                ReportPropertyChanging("CounterName");
                _CounterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CounterName");
                OnCounterNameChanged();
            }
        }
        private global::System.String _CounterName;
        partial void OnCounterNameChanging(global::System.String value);
        partial void OnCounterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceName
        {
            get
            {
                return _InstanceName;
            }
            set
            {
                OnInstanceNameChanging(value);
                ReportPropertyChanging("InstanceName");
                _InstanceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstanceName");
                OnInstanceNameChanged();
            }
        }
        private global::System.String _InstanceName;
        partial void OnInstanceNameChanging(global::System.String value);
        partial void OnInstanceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Interval
        {
            get
            {
                return _Interval;
            }
            set
            {
                OnIntervalChanging(value);
                ReportPropertyChanging("Interval");
                _Interval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Interval");
                OnIntervalChanged();
            }
        }
        private Nullable<global::System.DateTime> _Interval;
        partial void OnIntervalChanging(Nullable<global::System.DateTime> value);
        partial void OnIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                OnCounterTypeChanging(value);
                ReportPropertyChanging("CounterType");
                _CounterType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterType");
                OnCounterTypeChanged();
            }
        }
        private global::System.Int32 _CounterType;
        partial void OnCounterTypeChanging(global::System.Int32 value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ComputedValue
        {
            get
            {
                return _ComputedValue;
            }
            set
            {
                OnComputedValueChanging(value);
                ReportPropertyChanging("ComputedValue");
                _ComputedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComputedValue");
                OnComputedValueChanged();
            }
        }
        private Nullable<global::System.Single> _ComputedValue;
        partial void OnComputedValueChanging(Nullable<global::System.Single> value);
        partial void OnComputedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ThresholdRuleResult
        {
            get
            {
                return _ThresholdRuleResult;
            }
            set
            {
                OnThresholdRuleResultChanging(value);
                ReportPropertyChanging("ThresholdRuleResult");
                _ThresholdRuleResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThresholdRuleResult");
                OnThresholdRuleResultChanged();
            }
        }
        private global::System.Byte _ThresholdRuleResult;
        partial void OnThresholdRuleResultChanging(global::System.Byte value);
        partial void OnThresholdRuleResultChanged();

        #endregion

    }

    #endregion

    
}
