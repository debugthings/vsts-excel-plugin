//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExcelLoadTestReport.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using ExcelLoadTestReport.Models;
    
    public partial class LoadTest2010Entities : DbContext
    {
    
     public LoadTest2010Entities(string ConnectionString)
            : base(ConnectionString)
        {
        }
        public LoadTest2010Entities()
            : base("name=LoadTest2010Entities")
        {
        }
    
        public virtual DbSet<LoadTestBrowser> LoadTestBrowsers { get; set; }
        public virtual DbSet<LoadTestCase> LoadTestCases { get; set; }
        public virtual DbSet<LoadTestDataCollectorLog> LoadTestDataCollectorLogs { get; set; }
        public virtual DbSet<LoadTestDetailMessage> LoadTestDetailMessages { get; set; }
        public virtual DbSet<LoadTestFileAttachment> LoadTestFileAttachments { get; set; }
        public virtual DbSet<LoadTestFileAttachmentChunk> LoadTestFileAttachmentChunks { get; set; }
        public virtual DbSet<LoadTestMessage> LoadTestMessages { get; set; }
        public virtual DbSet<LoadTestMessageType> LoadTestMessageTypes { get; set; }
        public virtual DbSet<LoadTestNetwork> LoadTestNetworks { get; set; }
        public virtual DbSet<LoadTestPageDetail> LoadTestPageDetails { get; set; }
        public virtual DbSet<LoadTestPageSummaryByNetwork> LoadTestPageSummaryByNetworks { get; set; }
        public virtual DbSet<LoadTestPageSummaryData> LoadTestPageSummaryDatas { get; set; }
        public virtual DbSet<LoadTestPerformanceCounter> LoadTestPerformanceCounters { get; set; }
        public virtual DbSet<LoadTestPerformanceCounterCategory> LoadTestPerformanceCounterCategories { get; set; }
        public virtual DbSet<LoadTestPerformanceCounterInstance> LoadTestPerformanceCounterInstances { get; set; }
        public virtual DbSet<LoadTestPerformanceCounterSample> LoadTestPerformanceCounterSamples { get; set; }
        public virtual DbSet<LoadTestReport> LoadTestReports { get; set; }
        public virtual DbSet<LoadTestReportPage> LoadTestReportPages { get; set; }
        public virtual DbSet<LoadTestReportRun> LoadTestReportRuns { get; set; }
        public virtual DbSet<LoadTestRun> LoadTestRuns { get; set; }
        public virtual DbSet<LoadTestRunAgent> LoadTestRunAgents { get; set; }
        public virtual DbSet<LoadTestRunInterval> LoadTestRunIntervals { get; set; }
        public virtual DbSet<LoadTestScenario> LoadTestScenarios { get; set; }
        public virtual DbSet<LoadTestSchemaRevision> LoadTestSchemaRevisions { get; set; }
        public virtual DbSet<LoadTestSqlTrace> LoadTestSqlTraces { get; set; }
        public virtual DbSet<LoadTestSystemUnderTest> LoadTestSystemUnderTests { get; set; }
        public virtual DbSet<LoadTestSystemUnderTestTag> LoadTestSystemUnderTestTags { get; set; }
        public virtual DbSet<LoadTestTestDetail> LoadTestTestDetails { get; set; }
        public virtual DbSet<LoadTestTestLog> LoadTestTestLogs { get; set; }
        public virtual DbSet<LoadTestTestSummaryData> LoadTestTestSummaryDatas { get; set; }
        public virtual DbSet<LoadTestThresholdMessage> LoadTestThresholdMessages { get; set; }
        public virtual DbSet<LoadTestTransactionDetail> LoadTestTransactionDetails { get; set; }
        public virtual DbSet<LoadTestTransactionSummaryData> LoadTestTransactionSummaryDatas { get; set; }
        public virtual DbSet<WebLoadTestErrorDetail> WebLoadTestErrorDetails { get; set; }
        public virtual DbSet<WebLoadTestRequestMap> WebLoadTestRequestMaps { get; set; }
        public virtual DbSet<WebLoadTestTransaction> WebLoadTestTransactions { get; set; }
        public virtual DbSet<LoadTestComputedCounterSample> LoadTestComputedCounterSamples { get; set; }
        public virtual DbSet<LoadTestComputedCounterSummary> LoadTestComputedCounterSummaries { get; set; }
        public virtual DbSet<LoadTestMessageSummary> LoadTestMessageSummaries { get; set; }
        public virtual DbSet<LoadTestMessageView> LoadTestMessageViews { get; set; }
        public virtual DbSet<LoadTestMessageView2> LoadTestMessageView2 { get; set; }
        public virtual DbSet<LoadTestPageResult> LoadTestPageResults { get; set; }
        public virtual DbSet<LoadTestPageResultsByNetwork> LoadTestPageResultsByNetworks { get; set; }
        public virtual DbSet<LoadTestPageResultsByNetwork2> LoadTestPageResultsByNetwork2 { get; set; }
        public virtual DbSet<LoadTestPageSample> LoadTestPageSamples { get; set; }
        public virtual DbSet<LoadTestPageSummary> LoadTestPageSummaries { get; set; }
        public virtual DbSet<LoadTestRequestSummary> LoadTestRequestSummaries { get; set; }
        public virtual DbSet<LoadTestScenarioSummary> LoadTestScenarioSummaries { get; set; }
        public virtual DbSet<LoadTestTestCaseSample> LoadTestTestCaseSamples { get; set; }
        public virtual DbSet<LoadTestTestCaseSummary> LoadTestTestCaseSummaries { get; set; }
        public virtual DbSet<LoadTestTestResult> LoadTestTestResults { get; set; }
        public virtual DbSet<LoadTestTransactionResult> LoadTestTransactionResults { get; set; }
        public virtual DbSet<LoadTestTransactionResults2> LoadTestTransactionResults2 { get; set; }
        public virtual DbSet<LoadTestTransactionSample> LoadTestTransactionSamples { get; set; }
        public virtual DbSet<LoadTestTransactionSummary> LoadTestTransactionSummaries { get; set; }
        public virtual DbSet<LoadTestWebPageAndUserLoadCounterSample> LoadTestWebPageAndUserLoadCounterSamples { get; set; }
        public virtual DbSet<LoadTestWebRequestCounterSample> LoadTestWebRequestCounterSamples { get; set; }
        public virtual DbSet<LoadTestWebRequestCounterSummary> LoadTestWebRequestCounterSummaries { get; set; }
    
        public virtual ObjectResult<GetAgents_Result> GetAgents(Nullable<int> loadTestRunId)
        {
            var loadTestRunIdParameter = loadTestRunId.HasValue ?
                new ObjectParameter("LoadTestRunId", loadTestRunId) :
                new ObjectParameter("LoadTestRunId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAgents_Result>("GetAgents", loadTestRunIdParameter);
        }
    
        public virtual ObjectResult<Pbx_GetSamplesForTest_Result> VSTSGetSamplesForTest(Nullable<int> loadTestId, string counterCategory, string counterName, string instanceName, Nullable<bool> filterAgents)
        {
            var loadTestIdParameter = loadTestId.HasValue ?
                new ObjectParameter("LoadTestId", loadTestId) :
                new ObjectParameter("LoadTestId", typeof(int));
    
            var counterCategoryParameter = counterCategory != null ?
                new ObjectParameter("CounterCategory", counterCategory) :
                new ObjectParameter("CounterCategory", typeof(string));
    
            var counterNameParameter = counterName != null ?
                new ObjectParameter("CounterName", counterName) :
                new ObjectParameter("CounterName", typeof(string));
    
            var instanceNameParameter = instanceName != null ?
                new ObjectParameter("InstanceName", instanceName) :
                new ObjectParameter("InstanceName", typeof(string));
    
            var filterAgentsParameter = filterAgents.HasValue ?
                new ObjectParameter("FilterAgents", filterAgents) :
                new ObjectParameter("FilterAgents", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pbx_GetSamplesForTest_Result>("VSTSGetSamplesForTest", loadTestIdParameter, counterCategoryParameter, counterNameParameter, instanceNameParameter, filterAgentsParameter);
        }
    
        public virtual int DeleteLoadTestRun(Nullable<int> loadTestRunId)
        {
            var loadTestRunIdParameter = loadTestRunId.HasValue ?
                new ObjectParameter("LoadTestRunId", loadTestRunId) :
                new ObjectParameter("LoadTestRunId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLoadTestRun", loadTestRunIdParameter);
        }
    
        public virtual ObjectResult<Pbx_GetLoadTestRunsWithHighCounterSampleRecords_Result> GetLargeCounterSampleLoadTests()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pbx_GetLoadTestRunsWithHighCounterSampleRecords_Result>("GetLargeCounterSampleLoadTests");
        }
    
        public virtual int Pbx_ReorganizeAllIndexes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pbx_ReorganizeAllIndexes");
        }
    
        public virtual int Prc_UpdatePageSummary3(Nullable<int> loadTestRunId)
        {
            var loadTestRunIdParameter = loadTestRunId.HasValue ?
                new ObjectParameter("LoadTestRunId", loadTestRunId) :
                new ObjectParameter("LoadTestRunId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_UpdatePageSummary3", loadTestRunIdParameter);
        }
    
        public virtual int Prc_UpdatePageSummaryByNetwork3(Nullable<int> loadTestRunId)
        {
            var loadTestRunIdParameter = loadTestRunId.HasValue ?
                new ObjectParameter("LoadTestRunId", loadTestRunId) :
                new ObjectParameter("LoadTestRunId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_UpdatePageSummaryByNetwork3", loadTestRunIdParameter);
        }
    
        public virtual int Prc_UpdateSummaryData3(Nullable<int> loadTestRunId, Nullable<bool> deleteDetailTables)
        {
            var loadTestRunIdParameter = loadTestRunId.HasValue ?
                new ObjectParameter("LoadTestRunId", loadTestRunId) :
                new ObjectParameter("LoadTestRunId", typeof(int));
    
            var deleteDetailTablesParameter = deleteDetailTables.HasValue ?
                new ObjectParameter("DeleteDetailTables", deleteDetailTables) :
                new ObjectParameter("DeleteDetailTables", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_UpdateSummaryData3", loadTestRunIdParameter, deleteDetailTablesParameter);
        }
    
        public virtual int Prc_UpdateTestSummary3(Nullable<int> loadTestRunId)
        {
            var loadTestRunIdParameter = loadTestRunId.HasValue ?
                new ObjectParameter("LoadTestRunId", loadTestRunId) :
                new ObjectParameter("LoadTestRunId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_UpdateTestSummary3", loadTestRunIdParameter);
        }
    
        public virtual int Prc_UpdateTransactionSummary3(Nullable<int> loadTestRunId)
        {
            var loadTestRunIdParameter = loadTestRunId.HasValue ?
                new ObjectParameter("LoadTestRunId", loadTestRunId) :
                new ObjectParameter("LoadTestRunId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_UpdateTransactionSummary3", loadTestRunIdParameter);
        }
    
        public virtual ObjectResult<Pbx_GetLoadTestsHoggingAllTheSpace_Result> Pbx_GetLoadTestsHoggingAllTheSpace()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pbx_GetLoadTestsHoggingAllTheSpace_Result>("Pbx_GetLoadTestsHoggingAllTheSpace");
        }
    }
}
